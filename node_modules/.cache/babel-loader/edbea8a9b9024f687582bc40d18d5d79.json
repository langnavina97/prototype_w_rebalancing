{"ast":null,"code":"import _defineProperty from \"/Users/navinalang/prototype_w_rebalancing/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/navinalang/prototype_w_rebalancing/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\"; // Mainnet\n\nimport IndexSwap from \"./abis/IndexSwap.json\";\nimport NFTSwap from \"./abis/NFTPortfolio.json\"; // Testnet\n\nimport IndexSwap2 from \"./abis2/IndexSwap.json\";\nimport NFTSwap2 from \"./abis2/NFTPortfolio.json\";\nimport IERC from \"./abis/IERC20.json\";\nimport pancakeSwapRouter from \"./abis/IPancakeRouter02.json\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport Web3 from 'web3';\nimport { Grid, Button, Card, Form, Input, Image, Message, Table } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport velvet from \"./velvet.png\";\nimport metamask from \"./metamask-fox.svg\";\nimport swal from 'sweetalert';\nimport ReactGA, { exception } from 'react-ga';\nimport \"./App.css\";\n\nconst axios = require('axios');\n\nconst networks = {\n  bscTestnet: {\n    chainId: \"0x\".concat(Number(97).toString(16)),\n    chainName: \"BSC Testnet\",\n    nativeCurrency: {\n      name: \"Binance Chain Native Token\",\n      symbol: \"BNB\",\n      decimals: 18\n    },\n    rpcUrls: [\"https://data-seed-prebsc-1-s1.binance.org:8545/\", \"https://data-seed-prebsc-2-s1.binance.org:8545/\", \"https://data-seed-prebsc-1-s2.binance.org:8545/\", \"https://data-seed-prebsc-2-s2.binance.org:8545/\", \"https://data-seed-prebsc-1-s3.binance.org:8545/\", \"https://data-seed-prebsc-2-s3.binance.org:8545/\"],\n    blockExplorerUrls: [\"https://polygonscan.com/\"]\n  },\n  bsc: {\n    chainId: \"0x\".concat(Number(56).toString(16)),\n    chainName: \"Binance Smart Chain Mainnet\",\n    nativeCurrency: {\n      name: \"Binance Chain Native Token\",\n      symbol: \"BNB\",\n      decimals: 18\n    },\n    rpcUrls: [\"https://bsc-dataseed1.binance.org\", \"https://bsc-dataseed2.binance.org\", \"https://bsc-dataseed3.binance.org\", \"https://bsc-dataseed4.binance.org\", \"https://bsc-dataseed1.defibit.io\", \"https://bsc-dataseed2.defibit.io\", \"https://bsc-dataseed3.defibit.io\", \"https://bsc-dataseed4.defibit.io\", \"https://bsc-dataseed1.ninicoin.io\", \"https://bsc-dataseed2.ninicoin.io\", \"https://bsc-dataseed3.ninicoin.io\", \"https://bsc-dataseed4.ninicoin.io\", \"wss://bsc-ws-node.nariox.org\"],\n    blockExplorerUrls: [\"https://testnet.bscscan.com/\"]\n  }\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNetworkSwitch = async networkName => {\n      await this.changeNetwork(networkName);\n    };\n\n    this.handleInputChange = event => {\n      const target = event.target;\n      const value = target.type === \"checkbox\" ? target.checked : target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.connectWallet = async () => {\n      if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum);\n        await window.ethereum.enable();\n        console.log(\"Connected\");\n        this.setState({\n          connected: true\n        });\n      } else {\n        alert(\"Metamask not found\");\n      }\n\n      this.loadBlockchainData();\n      window.location.reload();\n    };\n\n    this.investNFTMainnet = async () => {\n      const web3 = new Web3(window.ethereum);\n      const v = this.state.nftToMintMainnet;\n      const valueInWei = web3.utils.toWei(v.toString(), 'ether');\n      console.log(this.state.NFTPortfolioContract.methods);\n      const resp = await this.state.NFTPortfolioContract.methods.investInFundNFT().send({\n        from: this.state.account,\n        value: valueInWei.toString()\n      }).once(\"receipt\", receipt => {\n        console.log(receipt);\n      }).catch(err => {\n        console.log(err);\n      });\n\n      if (resp.status) {\n        swal(\"Investment successfull!\", \"You invested \".concat(v, \" BNB into the portfolio.\"), \"success\");\n      } else {\n        swal(\"Investment failed!\");\n      }\n    };\n\n    this.investDeFiMainnet = async () => {\n      const web3 = new Web3(window.ethereum);\n      const v = this.state.defiToMintMainnet;\n      const valueInWei = web3.utils.toWei(v.toString(), 'ether');\n      const resp = await this.state.SwapContract.methods.investInFund(valueInWei).send({\n        from: this.state.account,\n        value: valueInWei.toString()\n      }).once(\"receipt\", receipt => {\n        console.log(receipt);\n      }).catch(err => {\n        console.log(err);\n      });\n\n      if (resp.status) {\n        swal(\"Investment successfull!\", \"You invested \".concat(v, \" BNB into the portfolio.\"), \"success\"); //window.location.reload();\n      } else {\n        swal(\"Investment failed!\");\n      }\n\n      await this.calcTokenBalanceMainnet();\n    };\n\n    this.approveNFTTokens = async () => {\n      const web3 = new Web3(window.ethereum);\n      const contractAddress = \"0xd7fE380362eD81E4a646A019e49e533ba49F4EFf\";\n      const aXSTokenConntract = new web3.eth.Contract(IERC.abi, \"0xf34D883EcdE3238B153f38230987a0F4c221a48F\");\n      await aXSTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0xa05Ae01a56779a75FDBAa299965E0C1087E11cbc\"\n      });\n      const mANATokenConntract = new web3.eth.Contract(IERC.abi, \"0x8bf2dF0Ff8528088475183a68678bd1Cd7691b69\");\n      await mANATokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0xa05Ae01a56779a75FDBAa299965E0C1087E11cbc\"\n      });\n      const sANDTokenConntract = new web3.eth.Contract(IERC.abi, \"0x1631A54AC95Ecb0085dB6b8ACf80c4Cee72AEB06\");\n      await sANDTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0xa05Ae01a56779a75FDBAa299965E0C1087E11cbc\"\n      });\n      const tHETATokenConntract = new web3.eth.Contract(IERC.abi, \"0x19A5E53eC7B385dbE2E587Ba989eA2AB8F7EaF1e\");\n      await tHETATokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0xa05Ae01a56779a75FDBAa299965E0C1087E11cbc\"\n      });\n      const fLOWTokenConntract = new web3.eth.Contract(IERC.abi, \"0xe5c48084E1974a971Bd5dF4d9B01daCCA86d5567\");\n      await fLOWTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0xa05Ae01a56779a75FDBAa299965E0C1087E11cbc\"\n      });\n      const xTZTokenConntract = new web3.eth.Contract(IERC.abi, \"0xC5De9d5B0BA5b408a3e9530A1BC310d8F2dCC26a\");\n      await xTZTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0xa05Ae01a56779a75FDBAa299965E0C1087E11cbc\"\n      });\n      const gALATokenConntract = new web3.eth.Contract(IERC.abi, \"0x4bf1CE8E4c4c86126E57Fa9fc3f1a9631661641c\");\n      await gALATokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0xa05Ae01a56779a75FDBAa299965E0C1087E11cbc\"\n      });\n      const cHZTokenConntract = new web3.eth.Contract(IERC.abi, \"0xdeEC6f0C22970b9b8a47069bE619bfAe646dEe26\");\n      await cHZTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0xa05Ae01a56779a75FDBAa299965E0C1087E11cbc\"\n      });\n      const eNJTokenConntract = new web3.eth.Contract(IERC.abi, \"0xb08A1959f57b9cC8e5A5F1d329EfD90EE3438F65\");\n      await eNJTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0xa05Ae01a56779a75FDBAa299965E0C1087E11cbc\"\n      });\n      const rOSETokenConntract = new web3.eth.Contract(IERC.abi, \"0x30c1AC77F4068A063648B549ffF96Ddb9d151325\");\n      await rOSETokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0xa05Ae01a56779a75FDBAa299965E0C1087E11cbc\"\n      });\n    };\n\n    this.approveDeFiTokens = async () => {\n      const web3 = new Web3(window.ethereum);\n      const contractAddress = \"0x5DA92941262768deA5018114e64EB73b937B5Cb0\";\n      const vault = \"0x07C0737fdc21adf93200bd625cc70a66B835Cf8b\";\n      const BTCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x8BaBbB98678facC7342735486C851ABD7A0d17Ca\");\n      BTCTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: vault\n      });\n      const ETHTokenConntract = new web3.eth.Contract(IERC.abi, \"0x8a9424745056Eb399FD19a0EC26A14316684e274\");\n      ETHTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: vault\n      });\n      const SHIBATokenConntract = new web3.eth.Contract(IERC.abi, \"0x4b1851167f74FF108A994872A160f1D6772d474b\");\n      SHIBATokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: vault\n      });\n      const XRPTokenConntract = new web3.eth.Contract(IERC.abi, \"0xb7a58582Df45DBa8Ad346c6A51fdb796D64e0898\");\n      XRPTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: vault\n      });\n      const LTCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x62955C6cA8Cd74F8773927B880966B7e70aD4567\");\n      LTCTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: vault\n      });\n      const DAITokenConntract = new web3.eth.Contract(IERC.abi, \"0x2F9fd65E3BB89b68a8e2Abd68Db25F5C348F68Ee\");\n      DAITokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: vault\n      });\n      const LUNATokenConntract = new web3.eth.Contract(IERC.abi, \"0x8D908A42FD847c80Eeb4498dE43469882436c8FF\");\n      LUNATokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: vault\n      });\n    };\n\n    this.withdrawDeFiMainnet = async () => {\n      const web3 = new Web3(window.ethereum);\n      var withdrawAmt = this.state.withdrawValueNFT;\n      var withdrawAmountInWei = web3.utils.toWei(withdrawAmt, 'ether');\n      var sAmount = withdrawAmountInWei.toString();\n      await this.state.SwapContract.methods.approve(\"0xA6eBa80EDFb7D78aD3b6d8Dc83f8a4ac37ef700a\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: this.state.account\n      });\n      await this.state.SwapContract.methods.withdrawFromFundNew(sAmount).send({\n        from: this.state.account,\n        value: 0\n      }).once(\"receipt\", receipt => {\n        swal(\"Withdrawal successfull!\", \"The withdrawal was successful!\", \"success\");\n        console.log(receipt);\n      }).catch(err => {\n        console.log(err);\n      });\n      await this.calcTokenBalanceMainnet();\n    };\n\n    this.withdrawNFTMainnet = async () => {\n      const vault = \"0x75c9D3e17284D3AdA7F8B17E06DBE75a98353fF7\";\n      const web3 = new Web3(window.ethereum);\n      console.log(this.state.DeFiTokenContract);\n      var withdrawAmt = this.state.withdrawValueNFT;\n      var withdrawAmountInWei = web3.utils.toWei(withdrawAmt, 'ether');\n      await this.state.NFTTokenContract.methods.approve(\"0x40A367c5320440a1aa78aCBC5af0A017Ed1F3772\", \"7787357773333787487837458347754874574837458374\").send({\n        from: this.state.account\n      });\n      var amount = withdrawAmountInWei;\n      var sAmount = amount.toString();\n      await this.state.NFTPortfolioContract.methods.withdrawFromFundNFT(sAmount).send({\n        from: this.state.account,\n        value: 0\n      }).once(\"receipt\", receipt => {\n        swal(\"Withdrawal successfull!\", \"The withdrawal was successful!\", \"success\");\n        console.log(receipt);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.getExchangeRateMainnet = async (amountIn, address) => {\n      const web3 = window.web3;\n      const pancakeRouter = new web3.eth.Contract(pancakeSwapRouter.abi, \"0x10ED43C718714eb63d5aA57B78B54704E256024E\");\n      var path = [];\n      path[0] = address;\n      path[1] = \"0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56\";\n      const er = await pancakeRouter.methods.getAmountsOut(amountIn, path).call();\n      return er[1];\n    };\n\n    this.investNFT = async () => {\n      const web3 = new Web3(window.ethereum);\n      const v = this.state.defiToMint;\n      const valueInWei = web3.utils.toWei(v, 'ether');\n      const resp = await this.state.NFTPortfolioContract2.methods.investInFund(valueInWei).send({\n        from: this.state.account,\n        value: valueInWei\n      }).once(\"receipt\", receipt => {\n        console.log(receipt);\n      }).catch(err => {\n        console.log(err);\n      });\n\n      if (resp.status) {\n        swal(\"Investment successfull!\", \"You invested \".concat(v, \" BNB into the portfolio.\"), \"success\"); //window.location.reload();\n      } else {\n        swal(\"Investment failed!\");\n      }\n\n      await this.calcTokenBalances();\n    };\n\n    this.calcTokenBalances = async () => {\n      const web3 = new Web3(window.ethereum);\n      let defiTokenBalanceInWei = await this.state.SwapContract2.methods.balanceOf(this.state.account).call();\n      let defiTokenBalance = web3.utils.fromWei(defiTokenBalanceInWei, \"ether\");\n      let nftTokenBalanceInWei = await this.state.SwapContract2.methods.balanceOf(this.state.account).call();\n      let nftTokenBalance = web3.utils.fromWei(nftTokenBalanceInWei, \"ether\");\n      this.setState({\n        defiTokenBalance,\n        nftTokenBalance\n      });\n    };\n\n    this.calcTokenBalanceMainnet = async () => {\n      const web3 = new Web3(window.ethereum);\n      let defiTokenBalanceInWei = await this.state.SwapContract.methods.balanceOf(this.state.account).call();\n      let defiTokenBalanceMainnet = web3.utils.fromWei(defiTokenBalanceInWei, \"ether\");\n      const tokenBalances = (await this.state.SwapContract.methods.getTokenAndVaultBalance().call())[0];\n      const vaultBalance = (await this.state.SwapContract.methods.getTokenAndVaultBalance().call())[1];\n      let btcPerc = tokenBalances[0] / vaultBalance;\n      let ethPerc = tokenBalances[1] / vaultBalance;\n      this.setState({\n        defiTokenBalanceMainnet,\n        btcPerc,\n        ethPerc\n      });\n    };\n\n    this.investDeFi = async () => {\n      const web3 = new Web3(window.ethereum);\n      const v = this.state.defiToMint;\n      const valueInWei = web3.utils.toWei(v, 'ether');\n      const resp = await this.state.SwapContract2.methods.investInFund(valueInWei).send({\n        from: this.state.account,\n        value: valueInWei\n      }).once(\"receipt\", receipt => {\n        console.log(receipt);\n      }).catch(err => {\n        console.log(err);\n      });\n\n      if (resp.status) {\n        swal(\"Investment successfull!\", \"You invested \".concat(v, \" BNB into the portfolio.\"), \"success\"); //window.location.reload();\n      } else {\n        swal(\"Investment failed!\");\n      }\n\n      await this.calcTokenBalances();\n    };\n\n    this.withdrawDeFi = async () => {\n      const web3 = new Web3(window.ethereum);\n      var withdrawAmt = this.state.withdrawValueDefi;\n      var withdrawAmountInWei = web3.utils.toWei(withdrawAmt, 'ether');\n      var sAmount = withdrawAmountInWei.toString();\n      await this.state.SwapContract2.methods.approve(\"0xCC645998E7240325690489FC33174063563aa322\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: this.state.account\n      });\n      await this.state.SwapContract2.methods.withdrawFromFundNew(sAmount).send({\n        from: this.state.account,\n        value: 0\n      }).once(\"receipt\", receipt => {\n        swal(\"Withdrawal successfull!\", \"The withdrawal was successful!\", \"success\");\n        console.log(receipt);\n      }).catch(err => {\n        console.log(err);\n      });\n      await this.calcTokenBalances();\n    };\n\n    this.withdrawNFT = async () => {\n      const web3 = new Web3(window.ethereum);\n      var withdrawAmt = this.state.withdrawValueNFT;\n      var withdrawAmountInWei = web3.utils.toWei(withdrawAmt.toString(), 'ether');\n      var sAmount = withdrawAmountInWei.toString();\n      console.log(this.state.NFTPortfolioContract2);\n      await this.state.NFTPortfolioContract2.methods.approve(\"0xd7fE380362eD81E4a646A019e49e533ba49F4EFf\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: this.state.account\n      });\n      await this.state.NFTPortfolioContract2.methods.withdrawFromFundNew(sAmount).send({\n        from: this.state.account,\n        value: 0\n      }).once(\"receipt\", receipt => {\n        swal(\"Withdrawal successfull!\", \"The withdrawal was successful!\", \"success\");\n        console.log(receipt);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.getExchangeRate = async (amountIn, address) => {\n      const web3 = window.web3;\n      const pancakeRouter = new web3.eth.Contract(pancakeSwapRouter.abi, \"0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3\");\n      var path = [];\n      path[0] = address;\n      path[1] = \"0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd\";\n      const er = await pancakeRouter.methods.getAmountsOut(amountIn, path).call();\n      return er[1];\n    };\n\n    this.init = async () => {\n      await this.state.SwapContract2.methods.initializeDefult().send({\n        from: this.state.account\n      });\n      await this.state.SwapContract2.methods.updateRate(1, 1).send({\n        from: this.state.account\n      });\n    };\n\n    this.initMainnet = async () => {\n      await this.state.SwapContract.methods.initializeDefult().send({\n        from: this.state.account\n      });\n      await this.state.SwapContract.methods.updateRate(1, 1).send({\n        from: this.state.account\n      });\n    };\n\n    this.initnft = async () => {\n      await this.state.NFTPortfolioContract2.methods.initializeDefult().send({\n        from: this.state.account\n      });\n      await this.state.NFTPortfolioContract2.methods.updateRate(1, 1).send({\n        from: this.state.account\n      });\n    };\n\n    this.rebalance = async () => {\n      let rebalance1 = this.state.rebalance1 * 100;\n      let rebalance2 = this.state.rebalance2 * 100;\n      let rebalance3 = this.state.rebalance3 * 100;\n      let rebalance4 = this.state.rebalance4 * 100;\n      let rebalance5 = this.state.rebalance5 * 100;\n      let rebalance6 = this.state.rebalance6 * 100;\n      let rebalance7 = this.state.rebalance7 * 100;\n      let rebalance8 = this.state.rebalance8 * 100;\n      let rebalance9 = this.state.rebalance9 * 100;\n      let rebalance10 = this.state.rebalance10 * 100;\n      let rebalance = [rebalance1, rebalance2, rebalance3, rebalance4, rebalance5, rebalance6, rebalance7, rebalance8, rebalance9, rebalance10];\n      const sum = rebalance.reduce((a, b) => a + b, 0);\n\n      if (sum != 10000) {\n        swal(\"The sum has to be 100%!\");\n        return;\n      }\n\n      await this.state.SwapContract.methods.rebalance(rebalance).send({\n        from: this.state.account\n      });\n    };\n\n    this.rebalanceBluechip = async () => {\n      let rebalance1 = this.state.rebalanceB1 * 100;\n      let rebalance2 = this.state.rebalanceB2 * 100;\n      let rebalance3 = this.state.rebalanceB3 * 100;\n      let rebalance4 = this.state.rebalanceB4 * 100;\n      let rebalance5 = this.state.rebalanceB5 * 100;\n      let rebalance = [rebalance1, rebalance2, rebalance3, rebalance4, rebalance5];\n      const sum = rebalance.reduce((a, b) => a + b, 0);\n\n      if (sum != 10000) {\n        swal(\"The sum has to be 100%!\");\n        return;\n      }\n\n      await this.state.BluechipContract.methods.rebalance(rebalance).send({\n        from: this.state.account\n      });\n    };\n\n    this.state = {\n      account: '',\n      SwapContract: null,\n      NFTTokenContract: null,\n      DeFiTokenContract: null,\n      NFTPortfolioContract: null,\n      BluechipContract: null,\n      SwapContract2: null,\n      NFTTokenContract2: null,\n      DeFiTokenContract2: null,\n      NFTPortfolioContract2: null,\n      address: \"\",\n      connected: false,\n      chainId: \"\",\n      defiToMintMainnet: 0,\n      nftToMintMainnet: 0,\n      withdrawValueDefi: 0,\n      withdrawValueNFT: 0,\n      nftTokenBalance: 0,\n      defiTokenBalance: 0,\n      defiTokenBalanceMainnet: 0,\n      rebalance1: 0,\n      rebalance2: 0,\n      rebalance3: 0,\n      rebalance4: 0,\n      rebalance5: 0,\n      rebalance6: 0,\n      rebalance7: 0,\n      rebalance8: 0,\n      rebalance9: 0,\n      rebalance10: 0,\n      rebalanceB1: 0,\n      rebalanceB2: 0,\n      rebalanceB3: 0,\n      rebalanceB4: 0,\n      rebalanceB5: 0,\n      ethPerc: 0,\n      btcPerc: 0,\n      rate: 0\n    };\n  }\n\n  async componentDidMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData(); //await this.getRate();\n    //swal(\"The project is in the alpha stage, proceed at your own risk\");\n\n    const web3 = window.web3;\n    const chainIdDec = await web3.eth.getChainId();\n    this.setState({\n      chainId: chainIdDec\n    });\n\n    if (chainIdDec == \"97\") {\n      await this.calcTokenBalances();\n    } else if (chainIdDec == \"56\") {\n      await this.calcTokenBalanceMainnet();\n    }\n  } // first up is to detect ethereum provider\n\n\n  async loadWeb3() {\n    const provider = await detectEthereumProvider(); // modern browsers\n\n    if (provider) {\n      console.log('MetaMask is connected');\n      window.web3 = new Web3(provider);\n    } else {\n      console.log('No ethereum wallet detected');\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const chainIdDec = await web3.eth.getChainId();\n    const accounts = await window.web3.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    });\n\n    if (accounts[0]) {\n      this.setState({\n        connected: true\n      });\n    }\n\n    if (chainIdDec == \"56\") {\n      this.setState({\n        account: accounts[0]\n      });\n      const SwapContract = new web3.eth.Contract(IndexSwap.abi, \"0x187b397599d81285a987466bD14790CF779B69E8\");\n      const BluechipContract = new web3.eth.Contract(IndexSwap.abi, \"0x0eCc8ed9f1157d85E5e078BDc68B7C98eb8A251A\");\n      const NFTPortfolioContract = new web3.eth.Contract(NFTSwap.abi, \"0x40A367c5320440a1aa78aCBC5af0A017Ed1F3772\");\n      this.setState({\n        SwapContract,\n        NFTPortfolioContract,\n        BluechipContract\n      });\n    } else if (chainIdDec == \"97\") {\n      const SwapContract2 = new web3.eth.Contract(IndexSwap2.abi, \"0xCC645998E7240325690489FC33174063563aa322\");\n      const NFTPortfolioContract2 = new web3.eth.Contract(NFTSwap2.abi, \"0xd7fE380362eD81E4a646A019e49e533ba49F4EFf\");\n      this.setState({\n        SwapContract2,\n        NFTPortfolioContract2\n      });\n    }\n  }\n\n  async changeNetwork(networkName) {\n    try {\n      if (!window.ethereum) throw new Error(\"No crypto wallet found\");\n      await window.ethereum.request({\n        method: \"wallet_addEthereumChain\",\n        params: [_objectSpread({}, networks[networkName])]\n      });\n    } catch (err) {\n      console.log(err);\n    }\n\n    window.location.reload();\n    const web3 = window.web3;\n    const chainIdDec = await web3.eth.getChainId();\n    this.setState({\n      chainId: chainIdDec\n    });\n    await this.loadBlockchainData();\n  }\n\n  render() {\n    window.addEventListener(\"load\", function () {\n      if (window.ethereum) {\n        // use MetaMask's provider\n        App.web3 = new Web3(window.ethereum);\n        window.ethereum.enable(); // get permission to access accounts\n        // detect Metamask account change\n\n        window.ethereum.on('accountsChanged', function (accounts) {\n          console.log('accountsChanges', accounts);\n        }); // detect Network account change\n\n        window.ethereum.on('networkChanged', function (networkId) {\n          console.log('networkChanged', networkId);\n        });\n      } else {\n        console.warn(\"No web3 detected. Falling back to http://127.0.0.1:8545. You should remove this fallback when you deploy live\"); // fallback - use your fallback strategy (local node / hosted node + in-dapp id mgmt / fail)\n\n        App.web3 = new Web3(new Web3.providers.HttpProvider(\"http://127.0.0.1:7545\"));\n      }\n    });\n    const web3 = window.web3;\n    let button;\n\n    if (!this.state.connected) {\n      button = React.createElement(Button, {\n        style: {\n          position: \"absolute\",\n          top: \"60px\",\n          right: \"20px\"\n        },\n        onClick: this.connectWallet,\n        color: \"orange\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 648\n        },\n        __self: this\n      }, React.createElement(Image, {\n        style: {\n          \"padding-top\": \"7px\"\n        },\n        floated: \"left\",\n        size: \"mini\",\n        src: metamask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 649\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 650\n        },\n        __self: this\n      }, \"Connect to MetaMask\"));\n    } else {\n      button = React.createElement(\"p\", {\n        style: {\n          position: \"absolute\",\n          top: \"110px\",\n          right: \"20px\",\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 653\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 653\n        },\n        __self: this\n      }, \"Account:\"), \" \", this.state.account);\n    }\n\n    let testnet;\n\n    if (this.state.chainId == \"97\") {\n      testnet = React.createElement(Grid, {\n        divided: \"vertically\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 658\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        columns: 2,\n        style: {\n          margin: \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 659\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 660\n        },\n        __self: this\n      }, React.createElement(Card.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 661\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          width: \"900px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 662\n        },\n        __self: this\n      }, React.createElement(Card.Content, {\n        style: {\n          background: \"#406ccd\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 663\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        style: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 664\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          color: \"#C0C0C0\",\n          \"font-weight\": \"bold\",\n          \"text-align\": \"right\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 665\n        },\n        __self: this\n      }, \"APY: XX%\"), \"Top 10 Tokens\"), React.createElement(Card.Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 668\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.investDeFi,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 670\n        },\n        __self: this\n      }, React.createElement(Input, {\n        style: {\n          width: \"300px\",\n          padding: 3\n        },\n        required: true,\n        type: \"text\",\n        placeholder: \"BNB amount to create\",\n        name: \"defiToMint\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 671\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"green\",\n        type: \"submit\",\n        style: {\n          margin: \"20px\",\n          width: \"150px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 672\n        },\n        __self: this\n      }, \"Create\")), React.createElement(Form, {\n        onSubmit: this.withdrawDeFi,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 675\n        },\n        __self: this\n      }, React.createElement(Input, {\n        style: {\n          width: \"300px\",\n          padding: 3\n        },\n        required: true,\n        type: \"text\",\n        placeholder: \"Top10 amount to redeem\",\n        name: \"withdrawValueDefi\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 676\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"green\",\n        style: {\n          margin: \"20px\",\n          width: \"150px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 677\n        },\n        __self: this\n      }, \"Redeem\")), React.createElement(Table, {\n        style: {\n          \"margin-left\": \"auto\",\n          \"margin-right\": \"auto\"\n        },\n        basic: \"very\",\n        celled: true,\n        collapsing: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 680\n        },\n        __self: this\n      }, React.createElement(Table.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 681\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 682\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        style: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 683\n        },\n        __self: this\n      }, \"Token\"), React.createElement(Table.HeaderCell, {\n        style: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 684\n        },\n        __self: this\n      }, \"Balance\"), React.createElement(Table.HeaderCell, {\n        style: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 685\n        },\n        __self: this\n      }, \"Balance in USD\"))), React.createElement(Table.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 689\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 690\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 691\n        },\n        __self: this\n      }, \"Top10 Token\"), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 692\n        },\n        __self: this\n      }, this.state.defiTokenBalance), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 693\n        },\n        __self: this\n      }, \"-\")))))))))));\n    }\n\n    let buttonSwitch;\n\n    if (this.state.chainId == \"56\" && this.state.connected) {\n      buttonSwitch = React.createElement(Button, {\n        style: {\n          position: \"absolute\",\n          top: \"60px\",\n          right: \"20px\"\n        },\n        onClick: () => this.handleNetworkSwitch(\"bscTestnet\"),\n        color: \"orange\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 710\n        },\n        __self: this\n      }, \"Change to Testnet\");\n    } else if (this.state.connected) {\n      buttonSwitch = React.createElement(Button, {\n        style: {\n          position: \"absolute\",\n          top: \"60px\",\n          right: \"20px\"\n        },\n        onClick: () => this.handleNetworkSwitch(\"bsc\"),\n        color: \"orange\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 712\n        },\n        __self: this\n      }, \"Change to Mainnet\");\n    }\n\n    let mainnet;\n\n    if (this.state.chainId != \"97\") {\n      mainnet = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 718\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        divided: \"vertically\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 719\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        columns: 2,\n        style: {\n          margin: \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 720\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 721\n        },\n        __self: this\n      }, React.createElement(Card.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 723\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          width: \"900px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 724\n        },\n        __self: this\n      }, React.createElement(Card.Content, {\n        style: {\n          background: \"#406ccd\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 725\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        style: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 726\n        },\n        __self: this\n      }, \"Yield by Venus - Asset Management\"), React.createElement(Card.Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 729\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.rebalance,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 731\n        },\n        __self: this\n      }, React.createElement(Input, {\n        maxLength: \"5\",\n        label: \"BTC (%)\",\n        style: {\n          width: \"150px\",\n          padding: 3\n        },\n        required: true,\n        type: \"text\",\n        placeholder: \"%\",\n        name: \"rebalance1\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 732\n        },\n        __self: this\n      }), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Input, {\n        maxLength: \"5\",\n        label: \"ETH (%)\",\n        style: {\n          width: \"150px\",\n          padding: 3\n        },\n        required: true,\n        type: \"text\",\n        placeholder: \"%\",\n        name: \"rebalance2\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 733\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 733\n        },\n        __self: this\n      }), React.createElement(Input, {\n        maxLength: \"5\",\n        label: \"BNB (%)\",\n        style: {\n          width: \"150px\",\n          padding: 3\n        },\n        required: true,\n        type: \"text\",\n        placeholder: \"%\",\n        name: \"rebalance3\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 734\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 734\n        },\n        __self: this\n      }), React.createElement(Input, {\n        maxLength: \"5\",\n        label: \"XRP (%)\",\n        style: {\n          width: \"150px\",\n          padding: 3\n        },\n        required: true,\n        type: \"text\",\n        placeholder: \"%\",\n        name: \"rebalance4\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 735\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 735\n        },\n        __self: this\n      }), React.createElement(Input, {\n        maxLength: \"5\",\n        label: \"ADA (%)\",\n        style: {\n          width: \"150px\",\n          padding: 3\n        },\n        required: true,\n        type: \"text\",\n        placeholder: \"%\",\n        name: \"rebalance5\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 736\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 736\n        },\n        __self: this\n      }), React.createElement(Input, {\n        maxLength: \"5\",\n        label: \"DOT (%)\",\n        style: {\n          width: \"150px\",\n          padding: 3\n        },\n        required: true,\n        type: \"text\",\n        placeholder: \"%\",\n        name: \"rebalance6\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 737\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 737\n        },\n        __self: this\n      }), React.createElement(Input, {\n        maxLength: \"5\",\n        label: \"TRX (%)\",\n        style: {\n          width: \"150px\",\n          padding: 3\n        },\n        required: true,\n        type: \"text\",\n        placeholder: \"%\",\n        name: \"rebalance7\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 738\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 738\n        },\n        __self: this\n      }), React.createElement(Input, {\n        maxLength: \"5\",\n        label: \"CAKE (%)\",\n        style: {\n          width: \"150px\",\n          padding: 3\n        },\n        required: true,\n        type: \"text\",\n        placeholder: \"%\",\n        name: \"rebalance8\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 739\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 739\n        },\n        __self: this\n      }), React.createElement(Input, {\n        maxLength: \"5\",\n        label: \"BCH (%)\",\n        style: {\n          width: \"150px\",\n          padding: 3\n        },\n        required: true,\n        type: \"text\",\n        placeholder: \"%\",\n        name: \"rebalance9\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 740\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 740\n        },\n        __self: this\n      }), React.createElement(Input, {\n        maxLength: \"5\",\n        label: \"FIL (%)\",\n        style: {\n          width: \"150px\",\n          padding: 3\n        },\n        required: true,\n        type: \"text\",\n        placeholder: \"%\",\n        name: \"rebalance10\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 741\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 741\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"green\",\n        style: {\n          margin: \"20px\",\n          width: \"150px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 743\n        },\n        __self: this\n      }, \"Rebalance\"))))))), React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 752\n        },\n        __self: this\n      }, React.createElement(Card.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 754\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          width: \"900px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 755\n        },\n        __self: this\n      }, React.createElement(Card.Content, {\n        style: {\n          background: \"#406ccd\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 756\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        style: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 757\n        },\n        __self: this\n      }, \"Blue Chip Portfolio - Asset Management\"), React.createElement(Card.Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 760\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.rebalanceBluechip,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 762\n        },\n        __self: this\n      }, React.createElement(Input, {\n        maxLength: \"5\",\n        label: \"BTC (%)\",\n        style: {\n          width: \"150px\",\n          padding: 3\n        },\n        required: true,\n        type: \"text\",\n        placeholder: \"%\",\n        name: \"rebalanceB1\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 763\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 763\n        },\n        __self: this\n      }), React.createElement(Input, {\n        maxLength: \"5\",\n        label: \"ETH (%)\",\n        style: {\n          width: \"150px\",\n          padding: 3\n        },\n        required: true,\n        type: \"text\",\n        placeholder: \"%\",\n        name: \"rebalanceB2\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 764\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 764\n        },\n        __self: this\n      }), React.createElement(Input, {\n        maxLength: \"5\",\n        label: \"XRP (%)\",\n        style: {\n          width: \"150px\",\n          padding: 3\n        },\n        required: true,\n        type: \"text\",\n        placeholder: \"%\",\n        name: \"rebalanceB3\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 765\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 765\n        },\n        __self: this\n      }), React.createElement(Input, {\n        maxLength: \"5\",\n        label: \"ADA (%)\",\n        style: {\n          width: \"150px\",\n          padding: 3\n        },\n        required: true,\n        type: \"text\",\n        placeholder: \"%\",\n        name: \"rebalanceB4\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 766\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 766\n        },\n        __self: this\n      }), React.createElement(Input, {\n        maxLength: \"5\",\n        label: \"WBNB (%)\",\n        style: {\n          width: \"150px\",\n          padding: 3\n        },\n        required: true,\n        type: \"text\",\n        placeholder: \"%\",\n        name: \"rebalanceB5\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 767\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 767\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"green\",\n        style: {\n          margin: \"20px\",\n          width: \"150px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 770\n        },\n        __self: this\n      }, \"Rebalance\"))))))))));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 784\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 785\n      },\n      __self: this\n    }, React.createElement(Message, {\n      negative: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 786\n      },\n      __self: this\n    }, React.createElement(Message.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 787\n      },\n      __self: this\n    }, \"The project is in the alpha stage, proceed at your own risk.\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 790\n      },\n      __self: this\n    }), React.createElement(Image, {\n      src: velvet,\n      size: \"medium\",\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 792\n      },\n      __self: this\n    }), button, buttonSwitch, mainnet, testnet);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/navinalang/prototype_w_rebalancing/src/App.js"],"names":["React","Component","IndexSwap","NFTSwap","IndexSwap2","NFTSwap2","IERC","pancakeSwapRouter","detectEthereumProvider","Web3","Grid","Button","Card","Form","Input","Image","Message","Table","velvet","swal","ReactGA","exception","axios","require","networks","bscTestnet","chainId","Number","toString","chainName","nativeCurrency","name","symbol","decimals","rpcUrls","blockExplorerUrls","bsc","App","constructor","props","handleNetworkSwitch","networkName","changeNetwork","handleInputChange","event","target","value","type","checked","setState","connectWallet","window","ethereum","web3","enable","console","log","connected","alert","loadBlockchainData","location","reload","investNFTMainnet","v","state","nftToMintMainnet","valueInWei","utils","toWei","NFTPortfolioContract","methods","resp","investInFundNFT","send","from","account","once","receipt","catch","err","status","investDeFiMainnet","defiToMintMainnet","SwapContract","investInFund","calcTokenBalanceMainnet","approveNFTTokens","contractAddress","aXSTokenConntract","eth","Contract","abi","approve","mANATokenConntract","sANDTokenConntract","tHETATokenConntract","fLOWTokenConntract","xTZTokenConntract","gALATokenConntract","cHZTokenConntract","eNJTokenConntract","rOSETokenConntract","approveDeFiTokens","vault","BTCTokenConntract","ETHTokenConntract","SHIBATokenConntract","XRPTokenConntract","LTCTokenConntract","DAITokenConntract","LUNATokenConntract","withdrawDeFiMainnet","withdrawAmt","withdrawValueNFT","withdrawAmountInWei","sAmount","withdrawFromFundNew","withdrawNFTMainnet","DeFiTokenContract","NFTTokenContract","amount","withdrawFromFundNFT","getExchangeRateMainnet","amountIn","address","pancakeRouter","path","er","getAmountsOut","call","investNFT","defiToMint","NFTPortfolioContract2","calcTokenBalances","defiTokenBalanceInWei","SwapContract2","balanceOf","defiTokenBalance","fromWei","nftTokenBalanceInWei","nftTokenBalance","defiTokenBalanceMainnet","tokenBalances","getTokenAndVaultBalance","vaultBalance","btcPerc","ethPerc","investDeFi","withdrawDeFi","withdrawValueDefi","withdrawNFT","getExchangeRate","init","initializeDefult","updateRate","initMainnet","initnft","rebalance","rebalance1","rebalance2","rebalance3","rebalance4","rebalance5","rebalance6","rebalance7","rebalance8","rebalance9","rebalance10","sum","reduce","a","b","rebalanceBluechip","rebalanceB1","rebalanceB2","rebalanceB3","rebalanceB4","rebalanceB5","BluechipContract","NFTTokenContract2","DeFiTokenContract2","rate","componentDidMount","loadWeb3","chainIdDec","getChainId","provider","accounts","getAccounts","Error","request","method","params","render","addEventListener","on","networkId","warn","providers","HttpProvider","button","position","top","right","metamask","color","testnet","margin","width","background","padding","buttonSwitch","mainnet"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\n// Mainnet\nimport IndexSwap from \"./abis/IndexSwap.json\";\nimport NFTSwap from \"./abis/NFTPortfolio.json\";\n\n// Testnet\nimport IndexSwap2 from \"./abis2/IndexSwap.json\";\nimport NFTSwap2 from \"./abis2/NFTPortfolio.json\";\n\nimport IERC from \"./abis/IERC20.json\";\nimport pancakeSwapRouter from \"./abis/IPancakeRouter02.json\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport Web3 from 'web3';\nimport { Grid, Button, Card, Form, Input, Image, Message, Table } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport velvet from \"./velvet.png\";\nimport metamask from \"./metamask-fox.svg\";\nimport swal from 'sweetalert';\nimport ReactGA, { exception } from 'react-ga';\n\nimport \"./App.css\";\n\nconst axios = require('axios');\n\nconst networks = {\n  bscTestnet: {\n    chainId: `0x${Number(97).toString(16)}`,\n    chainName: \"BSC Testnet\",\n    nativeCurrency: {\n      name: \"Binance Chain Native Token\",\n      symbol: \"BNB\",\n      decimals: 18\n    },\n    rpcUrls: [\n      \"https://data-seed-prebsc-1-s1.binance.org:8545/\",\n      \"https://data-seed-prebsc-2-s1.binance.org:8545/\",\n      \"https://data-seed-prebsc-1-s2.binance.org:8545/\",\n      \"https://data-seed-prebsc-2-s2.binance.org:8545/\",\n      \"https://data-seed-prebsc-1-s3.binance.org:8545/\",\n      \"https://data-seed-prebsc-2-s3.binance.org:8545/\"\n    ],\n    blockExplorerUrls: [\"https://polygonscan.com/\"]\n  },\n  bsc: {\n    chainId: `0x${Number(56).toString(16)}`,\n    chainName: \"Binance Smart Chain Mainnet\",\n    nativeCurrency: {\n      name: \"Binance Chain Native Token\",\n      symbol: \"BNB\",\n      decimals: 18\n    },\n    rpcUrls: [\n      \"https://bsc-dataseed1.binance.org\",\n      \"https://bsc-dataseed2.binance.org\",\n      \"https://bsc-dataseed3.binance.org\",\n      \"https://bsc-dataseed4.binance.org\",\n      \"https://bsc-dataseed1.defibit.io\",\n      \"https://bsc-dataseed2.defibit.io\",\n      \"https://bsc-dataseed3.defibit.io\",\n      \"https://bsc-dataseed4.defibit.io\",\n      \"https://bsc-dataseed1.ninicoin.io\",\n      \"https://bsc-dataseed2.ninicoin.io\",\n      \"https://bsc-dataseed3.ninicoin.io\",\n      \"https://bsc-dataseed4.ninicoin.io\",\n      \"wss://bsc-ws-node.nariox.org\"\n    ],\n    blockExplorerUrls: [\"https://testnet.bscscan.com/\"]\n  }\n};\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      \n      account: '',\n      SwapContract: null,\n      NFTTokenContract: null,\n      DeFiTokenContract: null,\n      NFTPortfolioContract: null,\n\n      BluechipContract: null,\n\n      SwapContract2: null,\n      NFTTokenContract2: null,\n      DeFiTokenContract2: null,\n      NFTPortfolioContract2: null,\n\n      address: \"\",\n      connected: false,\n      \n      chainId: \"\",\n\n      defiToMintMainnet: 0,\n      nftToMintMainnet: 0,\n\n      withdrawValueDefi: 0,\n      withdrawValueNFT: 0,\n\n      nftTokenBalance: 0,\n      defiTokenBalance: 0,\n\n      defiTokenBalanceMainnet: 0,\n\n      rebalance1: 0,\n      rebalance2: 0,\n      rebalance3: 0,\n      rebalance4: 0,\n      rebalance5: 0,\n      rebalance6: 0,\n      rebalance7: 0,\n      rebalance8: 0,\n      rebalance9: 0,\n      rebalance10: 0,\n\n      rebalanceB1: 0,\n      rebalanceB2: 0,\n      rebalanceB3: 0,\n      rebalanceB4: 0,\n      rebalanceB5: 0,\n      \n      ethPerc: 0,\n      btcPerc: 0,\n\n      rate: 0\n    }\n  }\n\n  async componentDidMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n    //await this.getRate();\n    //swal(\"The project is in the alpha stage, proceed at your own risk\");\n\n    const web3 = window.web3;\n    const chainIdDec = await web3.eth.getChainId();\n\n    this.setState({chainId: chainIdDec})\n\n    if(chainIdDec == \"97\") {\n      await this.calcTokenBalances();\n    } else if(chainIdDec == \"56\") {\n      await this.calcTokenBalanceMainnet();\n    }\n  }\n\n  // first up is to detect ethereum provider\n  async loadWeb3() {\n    const provider = await detectEthereumProvider();\n\n    // modern browsers\n    if (provider) {\n      console.log('MetaMask is connected');\n\n      window.web3 = new Web3(provider);\n    } else {\n      console.log('No ethereum wallet detected');\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const chainIdDec = await web3.eth.getChainId();\n    const accounts = await window.web3.eth.getAccounts();\n    this.setState({account: accounts[0]});\n    if(accounts[0]) {\n      this.setState({ connected: true })\n    }\n    if(chainIdDec == \"56\") {\n      this.setState({ account: accounts[0]}) \n      const SwapContract = new web3.eth.Contract(IndexSwap.abi, \"0x187b397599d81285a987466bD14790CF779B69E8\");\n      const BluechipContract = new web3.eth.Contract(IndexSwap.abi, \"0x0eCc8ed9f1157d85E5e078BDc68B7C98eb8A251A\");\n      const NFTPortfolioContract = new web3.eth.Contract(NFTSwap.abi, \"0x40A367c5320440a1aa78aCBC5af0A017Ed1F3772\"); \n      this.setState({ SwapContract, NFTPortfolioContract, BluechipContract});\n    } else if (chainIdDec == \"97\") {\n      const SwapContract2 = new web3.eth.Contract(IndexSwap2.abi, \"0xCC645998E7240325690489FC33174063563aa322\");\n      const NFTPortfolioContract2 = new web3.eth.Contract(NFTSwap2.abi, \"0xd7fE380362eD81E4a646A019e49e533ba49F4EFf\");\n      this.setState({ SwapContract2, NFTPortfolioContract2});\n    }\n  }\n\n    async changeNetwork (networkName) {\n      try {\n        if (!window.ethereum) throw new Error(\"No crypto wallet found\");\n        await window.ethereum.request({\n          method: \"wallet_addEthereumChain\",\n          params: [\n            {\n              ...networks[networkName]\n            }\n          ]\n        });\n      } catch (err) {\n        console.log(err);\n      }\n      window.location.reload();\n      const web3 = window.web3;\n      const chainIdDec = await web3.eth.getChainId();\n      this.setState({chainId: chainIdDec});\n      await this.loadBlockchainData();\n      \n    };\n\n    handleNetworkSwitch = async (networkName) => {\n      await this.changeNetwork(networkName);\n    };\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    })\n  }\n\n  connectWallet = async () => {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n      console.log(\"Connected\");\n      this.setState({\n        connected: true\n      })\n\n    } else {\n      alert(\"Metamask not found\");\n    }\n\n    this.loadBlockchainData();\n    window.location.reload();\n  }\n\n  \n\n  investNFTMainnet = async () => {\n    const web3 = new Web3(window.ethereum);\n    const v = this.state.nftToMintMainnet;\n    const valueInWei = web3.utils.toWei(v.toString(), 'ether');\n    console.log(this.state.NFTPortfolioContract.methods);\n    \n    const resp = await this.state.NFTPortfolioContract.methods.investInFundNFT().send({ from: this.state.account, value: valueInWei.toString()\n    }).once(\"receipt\", (receipt) => {\n      console.log(receipt);\n    })\n      .catch((err) => {\n        console.log(err);\n      });\n    if (resp.status) {\n      swal(\"Investment successfull!\", `You invested ${v} BNB into the portfolio.`, \"success\");\n    } else {\n      swal(\"Investment failed!\");\n    }\n  }\n\n  investDeFiMainnet = async () => {\n    const web3 = new Web3(window.ethereum);    \n    const v = this.state.defiToMintMainnet;\n    const valueInWei = web3.utils.toWei(v.toString(), 'ether');\n    \n    const resp = await this.state.SwapContract.methods.investInFund(valueInWei).send({ from: this.state.account, value: valueInWei.toString() })\n    .once(\"receipt\", (receipt) => {\n      console.log(receipt);\n\n    })\n      .catch((err) => {\n        console.log(err);\n      });\n\n      if (resp.status) {\n        swal(\"Investment successfull!\", `You invested ${v} BNB into the portfolio.`, \"success\");\n        //window.location.reload();\n      } else {\n        swal(\"Investment failed!\");\n      }\n\n      await this.calcTokenBalanceMainnet();\n\n    }\n\n\n  approveNFTTokens = async() => {\n    const web3 = new Web3(window.ethereum);  \n    const contractAddress = \"0xd7fE380362eD81E4a646A019e49e533ba49F4EFf\";\n\n    const aXSTokenConntract = new web3.eth.Contract(IERC.abi, \"0xf34D883EcdE3238B153f38230987a0F4c221a48F\");\n    await aXSTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0xa05Ae01a56779a75FDBAa299965E0C1087E11cbc\" });\n\n    const mANATokenConntract = new web3.eth.Contract(IERC.abi, \"0x8bf2dF0Ff8528088475183a68678bd1Cd7691b69\");\n    await mANATokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0xa05Ae01a56779a75FDBAa299965E0C1087E11cbc\" });\n\n    const sANDTokenConntract = new web3.eth.Contract(IERC.abi, \"0x1631A54AC95Ecb0085dB6b8ACf80c4Cee72AEB06\");\n    await sANDTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0xa05Ae01a56779a75FDBAa299965E0C1087E11cbc\" });\n\n    const tHETATokenConntract = new web3.eth.Contract(IERC.abi, \"0x19A5E53eC7B385dbE2E587Ba989eA2AB8F7EaF1e\");\n    await tHETATokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0xa05Ae01a56779a75FDBAa299965E0C1087E11cbc\" });\n\n    const fLOWTokenConntract = new web3.eth.Contract(IERC.abi, \"0xe5c48084E1974a971Bd5dF4d9B01daCCA86d5567\");\n    await fLOWTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0xa05Ae01a56779a75FDBAa299965E0C1087E11cbc\" });\n\n    const xTZTokenConntract = new web3.eth.Contract(IERC.abi, \"0xC5De9d5B0BA5b408a3e9530A1BC310d8F2dCC26a\");\n    await xTZTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0xa05Ae01a56779a75FDBAa299965E0C1087E11cbc\" });\n\n    const gALATokenConntract = new web3.eth.Contract(IERC.abi, \"0x4bf1CE8E4c4c86126E57Fa9fc3f1a9631661641c\");\n    await gALATokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0xa05Ae01a56779a75FDBAa299965E0C1087E11cbc\" });\n\n    const cHZTokenConntract = new web3.eth.Contract(IERC.abi, \"0xdeEC6f0C22970b9b8a47069bE619bfAe646dEe26\");\n    await cHZTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0xa05Ae01a56779a75FDBAa299965E0C1087E11cbc\" });\n\n    const eNJTokenConntract = new web3.eth.Contract(IERC.abi, \"0xb08A1959f57b9cC8e5A5F1d329EfD90EE3438F65\");\n    await eNJTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0xa05Ae01a56779a75FDBAa299965E0C1087E11cbc\" });\n\n    const rOSETokenConntract = new web3.eth.Contract(IERC.abi, \"0x30c1AC77F4068A063648B549ffF96Ddb9d151325\");\n    await rOSETokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0xa05Ae01a56779a75FDBAa299965E0C1087E11cbc\" });\n  }\n\n  approveDeFiTokens = async() => {\n    const web3 = new Web3(window.ethereum);  \n    const contractAddress = \"0x5DA92941262768deA5018114e64EB73b937B5Cb0\";\n    const vault = \"0x07C0737fdc21adf93200bd625cc70a66B835Cf8b\";\n\n    const BTCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x8BaBbB98678facC7342735486C851ABD7A0d17Ca\");\n    BTCTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: vault });\n\n    const ETHTokenConntract = new web3.eth.Contract(IERC.abi, \"0x8a9424745056Eb399FD19a0EC26A14316684e274\");\n    ETHTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: vault });\n\n    const SHIBATokenConntract = new web3.eth.Contract(IERC.abi, \"0x4b1851167f74FF108A994872A160f1D6772d474b\");\n    SHIBATokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: vault });\n\n    const XRPTokenConntract = new web3.eth.Contract(IERC.abi, \"0xb7a58582Df45DBa8Ad346c6A51fdb796D64e0898\");\n    XRPTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: vault });\n\n    const LTCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x62955C6cA8Cd74F8773927B880966B7e70aD4567\");\n    LTCTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: vault });\n\n    const DAITokenConntract = new web3.eth.Contract(IERC.abi, \"0x2F9fd65E3BB89b68a8e2Abd68Db25F5C348F68Ee\");\n    DAITokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: vault });\n\n    const LUNATokenConntract = new web3.eth.Contract(IERC.abi, \"0x8D908A42FD847c80Eeb4498dE43469882436c8FF\");\n    LUNATokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: vault });\n\n  }\n\n  withdrawDeFiMainnet = async () => {\n\n    const web3 = new Web3(window.ethereum);\n\n    var withdrawAmt = this.state.withdrawValueNFT;\n    var withdrawAmountInWei = web3.utils.toWei(withdrawAmt, 'ether');\n    var sAmount = withdrawAmountInWei.toString();\n\n    await this.state.SwapContract.methods.approve(\"0xA6eBa80EDFb7D78aD3b6d8Dc83f8a4ac37ef700a\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\")\n    .send({from: this.state.account});\n\n    await this.state.SwapContract.methods.withdrawFromFundNew(sAmount\n    ).send({\n      from: this.state.account, value: 0\n    }).once(\"receipt\", (receipt) => {\n      swal(\"Withdrawal successfull!\", \"The withdrawal was successful!\", \"success\");\n      console.log(receipt);\n    })\n      .catch((err) => {\n        console.log(err);\n      });\n\n      await this.calcTokenBalanceMainnet();\n\n  }\n\n  withdrawNFTMainnet = async () => {\n      const vault = \"0x75c9D3e17284D3AdA7F8B17E06DBE75a98353fF7\";\n  \n      const web3 = new Web3(window.ethereum);\n  \n      console.log(this.state.DeFiTokenContract);\n  \n      var withdrawAmt = this.state.withdrawValueNFT;\n      var withdrawAmountInWei = web3.utils.toWei(withdrawAmt, 'ether');\n  \n  \n      await this.state.NFTTokenContract.methods.approve(\"0x40A367c5320440a1aa78aCBC5af0A017Ed1F3772\", \"7787357773333787487837458347754874574837458374\")\n      .send({from: this.state.account});\n  \n      var amount = withdrawAmountInWei;\n      var sAmount = amount.toString();\n  \n      await this.state.NFTPortfolioContract.methods.withdrawFromFundNFT(sAmount\n      ).send({\n        from: this.state.account, value: 0\n      }).once(\"receipt\", (receipt) => {\n        swal(\"Withdrawal successfull!\", \"The withdrawal was successful!\", \"success\");\n        console.log(receipt);\n      })\n        .catch((err) => {\n          console.log(err);\n        });\n  }\n\n  getExchangeRateMainnet = async (amountIn, address) => {\n    const web3 = window.web3;\n    const pancakeRouter = new web3.eth.Contract(pancakeSwapRouter.abi, \"0x10ED43C718714eb63d5aA57B78B54704E256024E\");\n\n    var path = [];\n    path[0] = address;\n    path[1] = \"0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56\";\n\n    const er = await pancakeRouter.methods.getAmountsOut(amountIn, path).call();\n    return er[1];\n  }\n\n  /*getRate = async () => {\n    const rateObj = await this.state.SwapContract.methods.currentRate().call();\n    const rate = rateObj.numerator / rateObj.denominator;\n    this.setState({ rate });\n  }*/\n\n\n  // TESTNET\n\n  investNFT = async () => {\n\n    const web3 = new Web3(window.ethereum);    \n    const v = this.state.defiToMint;\n    const valueInWei = web3.utils.toWei(v, 'ether');\n    \n    const resp = await this.state.NFTPortfolioContract2.methods.investInFund(valueInWei).send({ from: this.state.account, value: valueInWei })\n    .once(\"receipt\", (receipt) => {\n      console.log(receipt);\n\n    })\n      .catch((err) => {\n        console.log(err);\n      });\n\n      if (resp.status) {\n        swal(\"Investment successfull!\", `You invested ${v} BNB into the portfolio.`, \"success\");\n        //window.location.reload();\n      } else {\n        swal(\"Investment failed!\");\n      }\n\n      await this.calcTokenBalances();\n\n  }\n\n  calcTokenBalances = async () => {\n    const web3 = new Web3(window.ethereum);\n    let defiTokenBalanceInWei = await this.state.SwapContract2.methods.balanceOf(this.state.account).call();\n    let defiTokenBalance = web3.utils.fromWei(defiTokenBalanceInWei, \"ether\");\n\n    let nftTokenBalanceInWei = await this.state.SwapContract2.methods.balanceOf(this.state.account).call();\n    let nftTokenBalance = web3.utils.fromWei(nftTokenBalanceInWei, \"ether\");\n\n    this.setState({ defiTokenBalance, nftTokenBalance });\n    \n  }\n\n  calcTokenBalanceMainnet = async () => {\n    const web3 = new Web3(window.ethereum);\n    let defiTokenBalanceInWei = await this.state.SwapContract.methods.balanceOf(this.state.account).call();\n    let defiTokenBalanceMainnet = web3.utils.fromWei(defiTokenBalanceInWei, \"ether\");\n\n    const tokenBalances = (await this.state.SwapContract.methods.getTokenAndVaultBalance().call())[0];\n    const vaultBalance = (await this.state.SwapContract.methods.getTokenAndVaultBalance().call())[1];\n\n    let btcPerc = tokenBalances[0] / vaultBalance;\n    let ethPerc = tokenBalances[1] / vaultBalance;\n\n    this.setState({ defiTokenBalanceMainnet, btcPerc, ethPerc });\n    \n  }\n\n  investDeFi = async () => {\n    const web3 = new Web3(window.ethereum);    \n    const v = this.state.defiToMint;\n    const valueInWei = web3.utils.toWei(v, 'ether');\n    \n    const resp = await this.state.SwapContract2.methods.investInFund(valueInWei).send({ from: this.state.account, value: valueInWei })\n    .once(\"receipt\", (receipt) => {\n      console.log(receipt);\n\n    })\n      .catch((err) => {\n        console.log(err);\n      });\n\n      if (resp.status) {\n        swal(\"Investment successfull!\", `You invested ${v} BNB into the portfolio.`, \"success\");\n        //window.location.reload();\n      } else {\n        swal(\"Investment failed!\");\n      }\n\n      await this.calcTokenBalances();\n\n  }\n\n  withdrawDeFi = async () => {\n    const web3 = new Web3(window.ethereum);\n\n    var withdrawAmt = this.state.withdrawValueDefi;\n    var withdrawAmountInWei = web3.utils.toWei(withdrawAmt, 'ether');\n    var sAmount = withdrawAmountInWei.toString();\n\n    await this.state.SwapContract2.methods.approve(\"0xCC645998E7240325690489FC33174063563aa322\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\")\n    .send({from: this.state.account});\n\n    await this.state.SwapContract2.methods.withdrawFromFundNew(sAmount\n    ).send({\n      from: this.state.account, value: 0\n    }).once(\"receipt\", (receipt) => {\n      swal(\"Withdrawal successfull!\", \"The withdrawal was successful!\", \"success\");\n      console.log(receipt);\n    })\n      .catch((err) => {\n        console.log(err);\n      });\n\n      await this.calcTokenBalances();\n\n  }\n  withdrawNFT = async () => {\n    const web3 = new Web3(window.ethereum);\n\n    var withdrawAmt = this.state.withdrawValueNFT;\n    var withdrawAmountInWei = web3.utils.toWei(withdrawAmt.toString(), 'ether');\n    var sAmount = withdrawAmountInWei.toString();\n\n    console.log(this.state.NFTPortfolioContract2);\n\n    await this.state.NFTPortfolioContract2.methods.approve(\"0xd7fE380362eD81E4a646A019e49e533ba49F4EFf\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\")\n    .send({from: this.state.account});\n\n    await this.state.NFTPortfolioContract2.methods.withdrawFromFundNew(sAmount\n    ).send({\n      from: this.state.account, value: 0\n    }).once(\"receipt\", (receipt) => {\n      swal(\"Withdrawal successfull!\", \"The withdrawal was successful!\", \"success\");\n      console.log(receipt);\n    })\n      .catch((err) => {\n        console.log(err);\n      });\n\n  }\n\n  getExchangeRate = async (amountIn, address) => {\n    const web3 = window.web3;\n    const pancakeRouter = new web3.eth.Contract(pancakeSwapRouter.abi, \"0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3\");\n\n    var path = [];\n    path[0] = address;\n    path[1] = \"0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd\";\n\n    const er = await pancakeRouter.methods.getAmountsOut(amountIn, path).call();\n    return er[1];\n  }\n\n  init = async() => {\n    await this.state.SwapContract2.methods.initializeDefult().send({from: this.state.account});\n    await this.state.SwapContract2.methods.updateRate(1,1).send({from: this.state.account});\n  }\n\n  initMainnet = async() => {\n    await this.state.SwapContract.methods.initializeDefult().send({from: this.state.account});\n    await this.state.SwapContract.methods.updateRate(1,1).send({from: this.state.account});\n  }\n\n  initnft = async() => {\n    await this.state.NFTPortfolioContract2.methods.initializeDefult().send({from: this.state.account});\n    await this.state.NFTPortfolioContract2.methods.updateRate(1,1).send({from: this.state.account});\n  }\n\n  rebalance = async() => {\n    let rebalance1 = this.state.rebalance1 * 100;\n    let rebalance2 = this.state.rebalance2 * 100;\n    let rebalance3 = this.state.rebalance3 * 100;\n    let rebalance4 = this.state.rebalance4 * 100;\n    let rebalance5 = this.state.rebalance5 * 100;\n    let rebalance6 = this.state.rebalance6 * 100;\n    let rebalance7 = this.state.rebalance7 * 100;\n    let rebalance8 = this.state.rebalance8 * 100;\n    let rebalance9 = this.state.rebalance9 * 100;\n    let rebalance10 = this.state.rebalance10 * 100;\n\n    let rebalance = [rebalance1, rebalance2, rebalance3, rebalance4, rebalance5,rebalance6,rebalance7, rebalance8, rebalance9, rebalance10];\n    const sum = rebalance.reduce((a, b) => a + b, 0)\n    if(sum != 10000) {\n      swal(\"The sum has to be 100%!\");\n      return;\n    }\n    await this.state.SwapContract.methods.rebalance(rebalance).send({from: this.state.account});\n  }\n\n  rebalanceBluechip = async() => {\n    let rebalance1 = this.state.rebalanceB1 * 100;\n    let rebalance2 = this.state.rebalanceB2 * 100;\n    let rebalance3 = this.state.rebalanceB3 * 100;\n    let rebalance4 = this.state.rebalanceB4 * 100;\n    let rebalance5 = this.state.rebalanceB5 * 100;\n\n    let rebalance = [rebalance1, rebalance2, rebalance3, rebalance4, rebalance5];\n    const sum = rebalance.reduce((a, b) => a + b, 0)\n    if(sum != 10000) {\n      swal(\"The sum has to be 100%!\");\n      return;\n    }\n    await this.state.BluechipContract.methods.rebalance(rebalance).send({from: this.state.account});\n  }\n\n  render() {\n\n    window.addEventListener(\"load\", function() {\n      if (window.ethereum) {\n        // use MetaMask's provider\n        App.web3 = new Web3(window.ethereum);\n        window.ethereum.enable(); // get permission to access accounts\n    \n        // detect Metamask account change\n        window.ethereum.on('accountsChanged', function (accounts) {\n          console.log('accountsChanges',accounts);\n    \n        });\n    \n         // detect Network account change\n        window.ethereum.on('networkChanged', function(networkId){\n          console.log('networkChanged',networkId);\n        });\n\n      } else {\n        console.warn(\n          \"No web3 detected. Falling back to http://127.0.0.1:8545. You should remove this fallback when you deploy live\",\n        );\n        // fallback - use your fallback strategy (local node / hosted node + in-dapp id mgmt / fail)\n        App.web3 = new Web3(\n          new Web3.providers.HttpProvider(\"http://127.0.0.1:7545\"),\n        );\n      }\n    });\n\n    const web3 = window.web3;\n\n    let button;\n    if (!this.state.connected) {\n      button = <Button style={{ position: \"absolute\", top: \"60px\", right: \"20px\" }} onClick={this.connectWallet} color=\"orange\">\n          <Image style={{ \"padding-top\": \"7px\" }} floated=\"left\" size=\"mini\" src={metamask} />\n          <p>Connect to MetaMask</p>\n        </Button>\n    } else {\n      button = <p style={{ position: \"absolute\", top: \"110px\", right: \"20px\", color: \"#C0C0C0\" }}><b>Account:</b> {this.state.account}</p>\n    }\n\n    let testnet;\n    if(this.state.chainId == \"97\") {\n      testnet = <Grid divided='vertically'>\n        <Grid.Row columns={2} style={{ margin: \"20px\" }}>\n          <Grid.Column>\n            <Card.Group>\n              <Card style={{ width: \"900px\" }}>\n                <Card.Content style={{ background: \"#406ccd\" }}>\n                <Card.Header style={{ color: \"white\" }}>\n                  <p style={{ color: \"#C0C0C0\", \"font-weight\": \"bold\", \"text-align\": \"right\" }}>APY: XX%</p>\n                    Top 10 Tokens\n                    </Card.Header>\n                  <Card.Description>\n\n                  <Form onSubmit={this.investDeFi}>\n                      <Input style={{ width: \"300px\", padding: 3 }} required type=\"text\" placeholder=\"BNB amount to create\" name=\"defiToMint\" onChange={this.handleInputChange}></Input>\n                      <Button color=\"green\" type=\"submit\" style={{ margin: \"20px\", width: \"150px\" }}>Create</Button>\n                    </Form>\n\n                    <Form onSubmit={this.withdrawDeFi}>\n                      <Input style={{ width: \"300px\", padding: 3 }} required type=\"text\" placeholder=\"Top10 amount to redeem\" name=\"withdrawValueDefi\" onChange={this.handleInputChange}></Input>\n                      <Button color=\"green\" style={{ margin: \"20px\", width: \"150px\" }}>Redeem</Button>\n                    </Form>\n\n                    <Table style={{ \"margin-left\": \"auto\", \"margin-right\": \"auto\" }} basic='very' celled collapsing>\n                        <Table.Header>\n                          <Table.Row>\n                            <Table.HeaderCell style={{ color: \"white\" }}>Token</Table.HeaderCell>\n                            <Table.HeaderCell style={{ color: \"white\" }}>Balance</Table.HeaderCell>\n                            <Table.HeaderCell style={{ color: \"white\" }}>Balance in USD</Table.HeaderCell>\n                          </Table.Row>\n                        </Table.Header>\n\n                        <Table.Body>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Top10 Token</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.defiTokenBalance}</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>-</Table.Cell>\n                          </Table.Row>\n                        </Table.Body>\n                    </Table>\n\n                  </Card.Description>\n                </Card.Content>\n              </Card>\n            </Card.Group>\n          </Grid.Column>\n\n        </Grid.Row>\n      </Grid>\n    }\n\n      let buttonSwitch;\n      if(this.state.chainId == \"56\" && this.state.connected) {\n        buttonSwitch = <Button style={{ position: \"absolute\", top: \"60px\", right: \"20px\" }} onClick={() => this.handleNetworkSwitch(\"bscTestnet\")} color=\"orange\" type=\"submit\" >Change to Testnet</Button>\n      } else if (this.state.connected) {\n        buttonSwitch = <Button style={{ position: \"absolute\", top: \"60px\", right: \"20px\" }} onClick={() => this.handleNetworkSwitch(\"bsc\")} color=\"orange\" type=\"submit\" >Change to Mainnet</Button>\n      }\n      \n      let mainnet;\n      if(this.state.chainId != \"97\") {\n        mainnet = \n        <div>\n        <Grid divided='vertically'>\n          <Grid.Row columns={2} style={{ margin: \"20px\" }}>\n            <Grid.Column>\n\n              <Card.Group>\n                <Card style={{ width: \"900px\" }}>\n                  <Card.Content style={{ background: \"#406ccd\" }}>\n                    <Card.Header style={{ color: \"white\" }}>\n                      Yield by Venus - Asset Management\n                      </Card.Header>\n                    <Card.Description>\n\n                      <Form onSubmit={this.rebalance}>\n                        <Input maxLength=\"5\" label='BTC (%)' style={{ width: \"150px\", padding: 3 }} required type=\"text\" placeholder=\"%\" name=\"rebalance1\" onChange={this.handleInputChange}></Input>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        <Input maxLength=\"5\" label='ETH (%)' style={{ width: \"150px\", padding: 3 }} required type=\"text\" placeholder=\"%\" name=\"rebalance2\" onChange={this.handleInputChange}></Input><br></br>\n                        <Input maxLength=\"5\" label='BNB (%)' style={{ width: \"150px\", padding: 3 }} required type=\"text\" placeholder=\"%\" name=\"rebalance3\" onChange={this.handleInputChange}></Input><br></br>\n                        <Input maxLength=\"5\" label='XRP (%)' style={{ width: \"150px\", padding: 3 }} required type=\"text\" placeholder=\"%\" name=\"rebalance4\" onChange={this.handleInputChange}></Input><br></br>\n                        <Input maxLength=\"5\" label='ADA (%)' style={{ width: \"150px\", padding: 3 }} required type=\"text\" placeholder=\"%\" name=\"rebalance5\" onChange={this.handleInputChange}></Input><br></br>\n                        <Input maxLength=\"5\" label='DOT (%)' style={{ width: \"150px\", padding: 3 }} required type=\"text\" placeholder=\"%\" name=\"rebalance6\" onChange={this.handleInputChange}></Input><br></br>\n                        <Input maxLength=\"5\" label='TRX (%)' style={{ width: \"150px\", padding: 3 }} required type=\"text\" placeholder=\"%\" name=\"rebalance7\" onChange={this.handleInputChange}></Input><br></br>\n                        <Input maxLength=\"5\" label='CAKE (%)' style={{ width: \"150px\", padding: 3 }} required type=\"text\" placeholder=\"%\" name=\"rebalance8\" onChange={this.handleInputChange}></Input><br></br>\n                        <Input maxLength=\"5\" label='BCH (%)' style={{ width: \"150px\", padding: 3 }} required type=\"text\" placeholder=\"%\" name=\"rebalance9\" onChange={this.handleInputChange}></Input><br></br>\n                        <Input maxLength=\"5\" label='FIL (%)' style={{ width: \"150px\", padding: 3 }} required type=\"text\" placeholder=\"%\" name=\"rebalance10\" onChange={this.handleInputChange}></Input><br></br>\n                       \n                        <Button color=\"green\" style={{ margin: \"20px\", width: \"150px\" }}>Rebalance</Button>\n                      </Form>\n\n                    </Card.Description>\n                  </Card.Content>\n                </Card>\n              </Card.Group>\n            </Grid.Column>\n\n            <Grid.Column>\n\n              <Card.Group>\n                <Card style={{ width: \"900px\" }}>\n                  <Card.Content style={{ background: \"#406ccd\" }}>\n                    <Card.Header style={{ color: \"white\" }}>\n                      Blue Chip Portfolio - Asset Management\n                      </Card.Header>\n                    <Card.Description>\n\n                      <Form onSubmit={this.rebalanceBluechip}>\n                        <Input maxLength=\"5\" label='BTC (%)' style={{ width: \"150px\", padding: 3 }} required type=\"text\" placeholder=\"%\" name=\"rebalanceB1\" onChange={this.handleInputChange}></Input><br></br>\n                        <Input maxLength=\"5\" label='ETH (%)' style={{ width: \"150px\", padding: 3 }} required type=\"text\" placeholder=\"%\" name=\"rebalanceB2\" onChange={this.handleInputChange}></Input><br></br>\n                        <Input maxLength=\"5\" label='XRP (%)' style={{ width: \"150px\", padding: 3 }} required type=\"text\" placeholder=\"%\" name=\"rebalanceB3\" onChange={this.handleInputChange}></Input><br></br>\n                        <Input maxLength=\"5\" label='ADA (%)' style={{ width: \"150px\", padding: 3 }} required type=\"text\" placeholder=\"%\" name=\"rebalanceB4\" onChange={this.handleInputChange}></Input><br></br>\n                        <Input maxLength=\"5\" label='WBNB (%)' style={{ width: \"150px\", padding: 3 }} required type=\"text\" placeholder=\"%\" name=\"rebalanceB5\" onChange={this.handleInputChange}></Input><br></br>\n                        \n                       \n                        <Button color=\"green\" style={{ margin: \"20px\", width: \"150px\" }}>Rebalance</Button>\n                      </Form>\n\n                    </Card.Description>\n                  </Card.Content>\n                </Card>\n              </Card.Group>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        </div>\n      }\n\n    return (\n      <div className=\"App\">\n        <div>\n        <Message negative>\n          <Message.Header>The project is in the alpha stage, proceed at your own risk.</Message.Header>\n        </Message>\n      </div>\n        <br></br>\n\n        <Image src={velvet} size=\"medium\" verticalAlign='middle'></Image>\n\n        {button}\n        {buttonSwitch}\n        \n        {mainnet}\n        \n        {testnet}\n      </div >\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}