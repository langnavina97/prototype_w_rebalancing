{"ast":null,"code":"var _jsxFileName = \"/Users/navinalang/Navina-workgroup/05_create_and_burn_copy/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport LiquidityPool from \"./abis/LiquidityPool.json\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport Web3 from 'web3';\nimport { Grid, Button, Card, Header, HeaderSubheader, Form, Input } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = event => {\n      const target = event.target;\n      const value = target.type === \"checkbox\" ? target.checked : target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.createPair = async () => {\n      await this.state.LPContract.methods.createNewPair().send({\n        from: this.state.account\n      });\n      const t1 = await this.state.LPContract.methods.tokenA().call();\n      const t2 = await this.state.LPContract.methods.tokenB().call();\n      this.setState({\n        tokenA: t1,\n        tokenB: t2\n      });\n    };\n\n    this.approveRouter = async () => {\n      await this.state.LPContract.methods.approveRouter(10000).send({\n        from: this.state.account\n      });\n    };\n\n    this.mint = async () => {\n      await this.state.LPContract.methods.mint(10000).send({\n        from: this.state.account\n      });\n    };\n\n    this.addLiquidity = async () => {\n      await this.state.LPContract.methods.addLiquidity(10000).send({\n        from: this.state.account\n      });\n    };\n\n    this.state = {\n      account: '',\n      LPContract: null,\n      address: \"\",\n      tokenA: \"No token created yet!\",\n      tokenB: \"No token created yet!\",\n      pairAddress: \"\",\n      valueToMint: 0,\n      valueToApprove: 0,\n      valueToAdd: 0\n    };\n  }\n\n  async componentDidMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  } // first up is to detect ethereum provider\n\n\n  async loadWeb3() {\n    const provider = await detectEthereumProvider(); // modern browsers\n\n    if (provider) {\n      console.log('Ethereum wallet is connected');\n      window.web3 = new Web3(provider);\n    } else {\n      console.log('No ethereum wallet detected');\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const accounts = await window.web3.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    });\n    const LPContract = new web3.eth.Contract(LiquidityPool.abi, \"0x207315B508E44FF6Cf4384426b5E3356b1E6E281\");\n    this.setState({\n      LPContract\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(Header, {\n      as: \"h1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Velvet.Capital\"), React.createElement(HeaderSubheader, {\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Create and Burn\"), React.createElement(Grid, {\n      divided: \"vertically\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      columns: 2,\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Card.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: \"900px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      style: {\n        background: \"#406ccd\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"DeFi\"), React.createElement(Card.Meta, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Portfolio of top DeFi tokens\"), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.createPair,\n      color: \"green\",\n      type: \"submit\",\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Create Pool!\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), \"TokenA: \", this.state.tokenA, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), \"TokenB: \", this.state.tokenB, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(Form, {\n      onSubmit: this.mint,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Input, {\n      style: {\n        width: \"200px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"Amount to mint\",\n      name: \"valueToMint\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"green\",\n      type: \"submit\",\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Mint\")), React.createElement(Form, {\n      onSubmit: this.approveRouter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Input, {\n      style: {\n        width: \"200px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"Amount to approve\",\n      name: \"valueToApprove\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"green\",\n      type: \"submit\",\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Approve!\")), React.createElement(Form, {\n      onSubmit: this.addLiquidity,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Input, {\n      style: {\n        width: \"200px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"Amount to add to LP\",\n      name: \"valueToAdd\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"green\",\n      type: \"submit\",\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Approve!\"))))))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Card.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: \"900px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      style: {\n        background: \"#406ccd\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"NFT\"), React.createElement(Card.Meta, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Portfolio of top NFT tokens\"), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.createPair,\n      color: \"green\",\n      type: \"submit\",\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Create Pool!\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), \"TokenA: \", this.state.tokenA, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), \"TokenB: \", this.state.tokenB, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(Form, {\n      onSubmit: this.mint,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(Input, {\n      style: {\n        width: \"200px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"Amount to mint\",\n      name: \"valueToMint\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"green\",\n      type: \"submit\",\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Mint\")), React.createElement(Form, {\n      onSubmit: this.approveRouter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Input, {\n      style: {\n        width: \"200px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"Amount to approve\",\n      name: \"valueToApprove\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"green\",\n      type: \"submit\",\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Approve!\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"The amount has to be approved before it can be put into the LP!\"), React.createElement(Form, {\n      onSubmit: this.addLiquidity,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Input, {\n      style: {\n        width: \"200px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"Amount to add to LP\",\n      name: \"valueToAdd\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"green\",\n      type: \"submit\",\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Approve!\"))))))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/navinalang/Navina-workgroup/05_create_and_burn_copy/client/src/App.js"],"names":["React","Component","LiquidityPool","detectEthereumProvider","Web3","Grid","Button","Card","Header","HeaderSubheader","Form","Input","App","constructor","props","handleInputChange","event","target","value","type","checked","name","setState","createPair","state","LPContract","methods","createNewPair","send","from","account","t1","tokenA","call","t2","tokenB","approveRouter","mint","addLiquidity","address","pairAddress","valueToMint","valueToApprove","valueToAdd","componentDidMount","loadWeb3","loadBlockchainData","provider","console","log","window","web3","accounts","eth","getAccounts","Contract","abi","render","margin","width","background","padding"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport LiquidityPool from \"./abis/LiquidityPool.json\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport Web3 from 'web3';\nimport { Grid, Button, Card, Header, HeaderSubheader, Form, Input } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\n\n\nimport \"./App.css\";\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '',\n      LPContract: null,\n      address: \"\",\n      tokenA: \"No token created yet!\",\n      tokenB: \"No token created yet!\",\n      pairAddress: \"\",\n      valueToMint: 0,\n      valueToApprove: 0,\n      valueToAdd: 0\n    }\n  }\n\n  async componentDidMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n\n  // first up is to detect ethereum provider\n  async loadWeb3() {\n    const provider = await detectEthereumProvider();\n\n    // modern browsers\n    if (provider) {\n      console.log('Ethereum wallet is connected');\n\n      window.web3 = new Web3(provider);\n    } else {\n      console.log('No ethereum wallet detected');\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const accounts = await window.web3.eth.getAccounts();\n    this.setState({ account: accounts[0] })\n    const LPContract = new web3.eth.Contract(LiquidityPool.abi, \"0x207315B508E44FF6Cf4384426b5E3356b1E6E281\");\n    this.setState({ LPContract });\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    })\n  }\n\n  createPair = async() => {\n    await this.state.LPContract.methods.createNewPair().send({from: this.state.account});\n\n    const t1 = await this.state.LPContract.methods.tokenA().call()\n    const t2 = await this.state.LPContract.methods.tokenB().call()\n\n    this.setState({\n      tokenA: t1,\n      tokenB: t2\n    })\n  }\n\n  approveRouter = async() => {\n    await this.state.LPContract.methods.approveRouter(10000).send({from: this.state.account});\n  }\n\n  mint = async() => {\n    await this.state.LPContract.methods.mint(10000).send({from: this.state.account});\n  }\n\n  addLiquidity = async() => {\n    await this.state.LPContract.methods.addLiquidity(10000).send({from: this.state.account});\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <br></br>\n        <Header as='h1'>Velvet.Capital</Header>\n        <HeaderSubheader as='h2'>Create and Burn</HeaderSubheader>\n\n        <Grid divided='vertically'>\n          <Grid.Row columns={2} style={{ margin: \"20px\" }}>\n            <Grid.Column>\n\n              <Card.Group>\n                <Card style={{ width: \"900px\" }}>\n                  <Card.Content style={{ background: \"#406ccd\" }}>\n                    <Card.Header>DeFi</Card.Header>\n                    <Card.Meta>Portfolio of top DeFi tokens</Card.Meta>\n                    <Card.Description>\n                      <Button onClick={this.createPair} color=\"green\" type=\"submit\" style={{ margin: \"20px\" }}>Create Pool!</Button><br></br>\n                      TokenA: {this.state.tokenA}<br></br>\n                      TokenB: {this.state.tokenB}<br></br>\n\n                      <Form onSubmit={this.mint}>\n                        <Input style={{ width: \"200px\", padding: 3 }} required type=\"text\" placeholder=\"Amount to mint\" name=\"valueToMint\" onChange={this.handleInputChange}></Input><br></br>\n                        <Button color=\"green\" type=\"submit\" style={{ margin: \"20px\" }}>Mint</Button>\n                      </Form>\n\n                      <Form onSubmit={this.approveRouter}>\n                        <Input style={{ width: \"200px\", padding: 3 }} required type=\"text\" placeholder=\"Amount to approve\" name=\"valueToApprove\" onChange={this.handleInputChange}></Input><br></br>\n                        <Button color=\"green\" type=\"submit\" style={{ margin: \"20px\" }}>Approve!</Button>\n                      </Form>\n\n                      <Form onSubmit={this.addLiquidity}>\n                        <Input style={{ width: \"200px\", padding: 3 }} required type=\"text\" placeholder=\"Amount to add to LP\" name=\"valueToAdd\" onChange={this.handleInputChange}></Input><br></br>\n                        <Button color=\"green\" type=\"submit\" style={{ margin: \"20px\" }}>Approve!</Button>\n                      </Form>\n                    </Card.Description>\n                  </Card.Content>\n                </Card>\n              </Card.Group>\n            </Grid.Column>\n\n\n            <Grid.Column>\n              <Card.Group>\n                <Card style={{ width: \"900px\" }}>\n                  <Card.Content style={{ background: \"#406ccd\" }}>\n                    <Card.Header>NFT</Card.Header>\n                    <Card.Meta>Portfolio of top NFT tokens</Card.Meta>\n                    <Card.Description>\n                      <Button onClick={this.createPair} color=\"green\" type=\"submit\" style={{ margin: \"20px\" }}>Create Pool!</Button><br></br>\n                      TokenA: {this.state.tokenA}<br></br>\n                      TokenB: {this.state.tokenB}<br></br>\n\n                      <Form onSubmit={this.mint}>\n                        <Input style={{ width: \"200px\", padding: 3 }} required type=\"text\" placeholder=\"Amount to mint\" name=\"valueToMint\" onChange={this.handleInputChange}></Input><br></br>\n                        <Button color=\"green\" type=\"submit\" style={{ margin: \"20px\" }}>Mint</Button>\n                      </Form>\n\n                      <Form onSubmit={this.approveRouter}>\n                        <Input style={{ width: \"200px\", padding: 3 }} required type=\"text\" placeholder=\"Amount to approve\" name=\"valueToApprove\" onChange={this.handleInputChange}></Input><br></br>\n                        <Button color=\"green\" type=\"submit\" style={{ margin: \"20px\" }}>Approve!</Button>\n                      </Form>\n\n                      <p>The amount has to be approved before it can be put into the LP!</p>\n                      <Form onSubmit={this.addLiquidity}>\n                        <Input style={{ width: \"200px\", padding: 3 }} required type=\"text\" placeholder=\"Amount to add to LP\" name=\"valueToAdd\" onChange={this.handleInputChange}></Input><br></br>\n                        <Button color=\"green\" type=\"submit\" style={{ margin: \"20px\" }}>Approve!</Button>\n                      </Form>\n                    </Card.Description>\n                  </Card.Content>\n                </Card>\n              </Card.Group>\n\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div >\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}