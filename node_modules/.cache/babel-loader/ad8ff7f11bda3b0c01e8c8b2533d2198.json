{"ast":null,"code":"import _defineProperty from \"/Users/navinalang/prototype-mainnet-testnet/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/navinalang/prototype-mainnet-testnet/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\"; // Mainnet\n\nimport IndexSwap from \"./abis/IndexSwap.json\";\nimport IndexToken from \"./abis/indexToken.json\";\nimport NFTSwap from \"./abis/NFTPortfolio.json\"; // Testnet\n\nimport IndexSwap2 from \"./abis2/IndexSwap.json\";\nimport IndexToken2 from \"./abis2/indexToken.json\";\nimport NFTSwap2 from \"./abis2/NFTPortfolio.json\";\nimport IERC from \"./abis/IERC20.json\";\nimport pancakeSwapRouter from \"./abis/IPancakeRouter02.json\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport Web3 from 'web3';\nimport { Grid, Button, Card, Form, Input, Image, Message, Table } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport velvet from \"./velvet.png\";\nimport metamask from \"./metamask-fox.svg\";\nimport swal from 'sweetalert';\nimport ReactGA from 'react-ga';\nimport \"./App.css\";\n\nconst axios = require('axios');\n\nconst networks = {\n  bscTestnet: {\n    chainId: \"0x\".concat(Number(97).toString(16)),\n    chainName: \"BSC Testnet\",\n    nativeCurrency: {\n      name: \"Binance Chain Native Token\",\n      symbol: \"BNB\",\n      decimals: 18\n    },\n    rpcUrls: [\"https://data-seed-prebsc-1-s1.binance.org:8545/\", \"https://data-seed-prebsc-2-s1.binance.org:8545/\", \"https://data-seed-prebsc-1-s2.binance.org:8545/\", \"https://data-seed-prebsc-2-s2.binance.org:8545/\", \"https://data-seed-prebsc-1-s3.binance.org:8545/\", \"https://data-seed-prebsc-2-s3.binance.org:8545/\"],\n    blockExplorerUrls: [\"https://polygonscan.com/\"]\n  },\n  bsc: {\n    chainId: \"0x\".concat(Number(56).toString(16)),\n    chainName: \"Binance Smart Chain Mainnet\",\n    nativeCurrency: {\n      name: \"Binance Chain Native Token\",\n      symbol: \"BNB\",\n      decimals: 18\n    },\n    rpcUrls: [\"https://bsc-dataseed1.binance.org\", \"https://bsc-dataseed2.binance.org\", \"https://bsc-dataseed3.binance.org\", \"https://bsc-dataseed4.binance.org\", \"https://bsc-dataseed1.defibit.io\", \"https://bsc-dataseed2.defibit.io\", \"https://bsc-dataseed3.defibit.io\", \"https://bsc-dataseed4.defibit.io\", \"https://bsc-dataseed1.ninicoin.io\", \"https://bsc-dataseed2.ninicoin.io\", \"https://bsc-dataseed3.ninicoin.io\", \"https://bsc-dataseed4.ninicoin.io\", \"wss://bsc-ws-node.nariox.org\"],\n    blockExplorerUrls: [\"https://testnet.bscscan.com/\"]\n  }\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNetworkSwitch = async networkName => {\n      await this.changeNetwork(networkName);\n    };\n\n    this.handleInputChange = event => {\n      const target = event.target;\n      const value = target.type === \"checkbox\" ? target.checked : target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.connectWallet = async () => {\n      if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum);\n        await window.ethereum.enable();\n        console.log(\"Connected\");\n        this.setState({\n          connected: true\n        });\n      } else {\n        alert(\"Metamask not found\");\n      }\n\n      this.loadBlockchainData();\n      window.location.reload();\n    };\n\n    this.investNFTMainnet = async () => {\n      const web3 = new Web3(window.ethereum);\n      const v = this.state.nftToMintMainnet;\n      const valueInWei = web3.utils.toWei(v, 'ether');\n      console.log(this.state.NFTPortfolioContract.methods);\n      const resp = await this.state.NFTPortfolioContract.methods.investInFundNFT().send({\n        from: this.state.account,\n        value: valueInWei\n      }).once(\"receipt\", receipt => {\n        console.log(receipt);\n      }).catch(err => {\n        console.log(err);\n      });\n\n      if (resp.status) {\n        swal(\"Investment successfull!\", \"You invested \".concat(v, \" BNB into the portfolio.\"), \"success\");\n      } else {\n        swal(\"Investment failed!\");\n      }\n\n      this.calcTokenBalancesNFTMainnet();\n    };\n\n    this.investDeFiMainnet = async () => {\n      const web3 = new Web3(window.ethereum);\n      const v = this.state.defiToMintMainnet;\n      const valueInWei = web3.utils.toWei(v, 'ether');\n      const resp = await this.state.SwapContract.methods.investInFundDefi().send({\n        from: this.state.account,\n        value: valueInWei\n      }).once(\"receipt\", receipt => {\n        console.log(receipt);\n      }).catch(err => {\n        console.log(err);\n      });\n\n      if (resp.status) {\n        swal(\"Investment successfull!\", \"You invested \".concat(v, \" BNB into the portfolio.\"), \"success\"); //window.location.reload();\n      } else {\n        swal(\"Investment failed!\");\n      }\n\n      this.calcTokenBalancesDeFiMainnet();\n    };\n\n    this.approveNFTTokensMainnet = async () => {\n      const web3 = new Web3(window.ethereum);\n      const contractAddress = \"0x40A367c5320440a1aa78aCBC5af0A017Ed1F3772\";\n      const aXSTokenConntract = new web3.eth.Contract(IERC.abi, \"0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0\");\n      await aXSTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\"\n      });\n      const rACATokenConntract = new web3.eth.Contract(IERC.abi, \"0x12BB890508c125661E03b09EC06E404bc9289040\");\n      await rACATokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\"\n      });\n      const mBOXTokenConntract = new web3.eth.Contract(IERC.abi, \"0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377\");\n      await mBOXTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\"\n      });\n      const mCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x949D48EcA67b17269629c7194F4b727d4Ef9E5d6\");\n      await mCTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\"\n      });\n      const aLICETokenConntract = new web3.eth.Contract(IERC.abi, \"0xAC51066d7bEC65Dc4589368da368b212745d63E8\");\n      await aLICETokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\"\n      });\n    };\n\n    this.approveDeFiTokensMainnet = async () => {\n      const web3 = new Web3(window.ethereum);\n      const contractAddress = \"0x380d2b6742AAD7ae97f199a109c1F81A34E1cb86\";\n      const BTCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c\");\n      BTCTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\"\n      });\n      const ETHTokenConntract = new web3.eth.Contract(IERC.abi, \"0x2170Ed0880ac9A755fd29B2688956BD959F933F8\");\n      ETHTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\"\n      });\n      const SHIBATokenConntract = new web3.eth.Contract(IERC.abi, \"0x2859e4544C4bB03966803b044A93563Bd2D0DD4D\");\n      SHIBATokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\"\n      });\n      const XRPTokenConntract = new web3.eth.Contract(IERC.abi, \"0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE\");\n      XRPTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\"\n      });\n      const LTCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x4338665CBB7B2485A8855A139b75D5e34AB0DB94\");\n      LTCTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\"\n      });\n      const DAITokenConntract = new web3.eth.Contract(IERC.abi, \"0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3\");\n      DAITokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\"\n      });\n      const MAKERTokenConntract = new web3.eth.Contract(IERC.abi, \"0x5f0Da599BB2ccCfcf6Fdfd7D81743B6020864350\");\n      MAKERTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\"\n      });\n      const LINKTokenConntract = new web3.eth.Contract(IERC.abi, \"0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD\");\n      LINKTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\"\n      });\n      const UNITokenConntract = new web3.eth.Contract(IERC.abi, \"0xBf5140A22578168FD562DCcF235E5D43A02ce9B1\");\n      UNITokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\"\n      });\n      const AAVETokenConntract = new web3.eth.Contract(IERC.abi, \"0xfb6115445Bff7b52FeB98650C87f44907E58f802\");\n      AAVETokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\"\n      });\n    };\n\n    this.withdrawDeFiMainnet = async () => {\n      const vault = \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\";\n      const web3 = new Web3(window.ethereum);\n      var withdrawAmt = this.state.withdrawValueDefi;\n      var withdrawAmountInWei = web3.utils.toWei(withdrawAmt, 'ether');\n      await this.state.DeFiTokenContract.methods.approve(\"0x380d2b6742AAD7ae97f199a109c1F81A34E1cb86\", \"7787357773333787487837458347754874574837458374\").send({\n        from: this.state.account\n      });\n      var amount = withdrawAmountInWei / 10;\n      var sAmount = amount.toString();\n      await this.state.SwapContract.methods.withdrawFromFundTOPTokens(sAmount).send({\n        from: this.state.account,\n        value: 0\n      }).once(\"receipt\", receipt => {\n        swal(\"Withdrawal successfull!\", \"The withdrawal was successful!\", \"success\");\n        console.log(receipt);\n      }).catch(err => {\n        console.log(err);\n      });\n      this.calcTokenBalancesDeFiMainnet();\n    };\n\n    this.withdrawNFTMainnet = async () => {\n      const vault = \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\";\n      const web3 = new Web3(window.ethereum);\n      console.log(this.state.DeFiTokenContract);\n      var withdrawAmt = this.state.withdrawValueNFT;\n      var withdrawAmountInWei = web3.utils.toWei(withdrawAmt, 'ether');\n      await this.state.NFTTokenContract.methods.approve(\"0x40A367c5320440a1aa78aCBC5af0A017Ed1F3772\", \"7787357773333787487837458347754874574837458374\").send({\n        from: this.state.account\n      });\n      var amount = withdrawAmountInWei / 10;\n      var sAmount = amount.toString();\n      await this.state.NFTPortfolioContract.methods.withdrawFromFundNFT(sAmount).send({\n        from: this.state.account,\n        value: 0\n      }).once(\"receipt\", receipt => {\n        swal(\"Withdrawal successfull!\", \"The withdrawal was successful!\", \"success\");\n        console.log(receipt);\n      }).catch(err => {\n        console.log(err);\n      });\n      this.calcTokenBalancesNFTMainnet();\n    };\n\n    this.getExchangeRateMainnet = async (amountIn, address) => {\n      const web3 = window.web3;\n      const pancakeRouter = new web3.eth.Contract(pancakeSwapRouter.abi, \"0x10ED43C718714eb63d5aA57B78B54704E256024E\");\n      var path = [];\n      path[0] = address;\n      path[1] = \"0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56\";\n      const er = await pancakeRouter.methods.getAmountsOut(amountIn, path).call();\n      return er[1];\n    };\n\n    this.calcTokenBalancesDeFiMainnet = async () => {\n      const web3 = window.web3;\n      const defiTokenBalanceRes = await this.state.DeFiTokenContract.methods.balanceOf(this.state.account).call();\n      const defiTokenBalance = web3.utils.fromWei(defiTokenBalanceRes, \"ether\"); // DeFi\n\n      const btcTokenBalanceRes = await this.state.SwapContract.methods.btcBalance(this.state.account).call();\n      const helperBtc = await this.getExchangeRateMainnet(btcTokenBalanceRes, \"0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c\");\n      const btcTokenBalanceBnb = web3.utils.fromWei(helperBtc, \"ether\");\n      const btcTokenBalance = web3.utils.fromWei(btcTokenBalanceRes, \"ether\");\n      const ethTokenBalanceRes = await this.state.SwapContract.methods.ethBalance(this.state.account).call();\n      const helperEth = await this.getExchangeRateMainnet(ethTokenBalanceRes, \"0x2170Ed0880ac9A755fd29B2688956BD959F933F8\");\n      const ethTokenBalanceBnb = web3.utils.fromWei(helperEth, \"ether\");\n      const ethTokenBalance = web3.utils.fromWei(ethTokenBalanceRes, \"ether\");\n      const shibaTokenBalanceRes = await this.state.SwapContract.methods.shibaBalance(this.state.account).call();\n      const helperShib = await this.getExchangeRateMainnet(shibaTokenBalanceRes, \"0x2859e4544C4bB03966803b044A93563Bd2D0DD4D\");\n      const shibaTokenBalanceBnb = web3.utils.fromWei(helperShib, \"ether\");\n      const shibaTokenBalance = web3.utils.fromWei(shibaTokenBalanceRes, \"ether\");\n      const xrpTokenBalanceRes = await this.state.SwapContract.methods.xrpBalance(this.state.account).call();\n      const helperXrp = await this.getExchangeRateMainnet(xrpTokenBalanceRes, \"0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE\");\n      const xrpTokenBalanceBnb = web3.utils.fromWei(helperXrp, \"ether\");\n      const xrpTokenBalance = web3.utils.fromWei(xrpTokenBalanceRes, \"ether\");\n      const ltcTokenBalanceRes = await this.state.SwapContract.methods.ltcBalance(this.state.account).call();\n      const helperLtc = await this.getExchangeRateMainnet(ltcTokenBalanceRes, \"0x4338665CBB7B2485A8855A139b75D5e34AB0DB94\");\n      const ltcTokenBalanceBnb = web3.utils.fromWei(helperLtc, \"ether\");\n      const ltcTokenBalance = web3.utils.fromWei(ltcTokenBalanceRes, \"ether\");\n      const daiTokenBalanceRes = await this.state.SwapContract.methods.daiBalance(this.state.account).call();\n      const helperDai = await this.getExchangeRateMainnet(daiTokenBalanceRes, \"0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3\");\n      const daiTokenBalanceBnb = web3.utils.fromWei(helperDai, \"ether\");\n      const daiTokenBalance = web3.utils.fromWei(daiTokenBalanceRes, \"ether\");\n      const makerTokenBalanceRes = await this.state.SwapContract.methods.makerBalance(this.state.account).call();\n      const helperMaker = await this.getExchangeRateMainnet(makerTokenBalanceRes, \"0x5f0Da599BB2ccCfcf6Fdfd7D81743B6020864350\");\n      const makerTokenBalanceBnb = web3.utils.fromWei(helperMaker, \"ether\");\n      const makerTokenBalance = web3.utils.fromWei(makerTokenBalanceRes, \"ether\");\n      const linkTokenBalanceRes = await this.state.SwapContract.methods.linkBalance(this.state.account).call();\n      const helperLink = await this.getExchangeRateMainnet(linkTokenBalanceRes, \"0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD\");\n      const linkTokenBalanceBnb = web3.utils.fromWei(helperLink, \"ether\");\n      const linkTokenBalance = web3.utils.fromWei(linkTokenBalanceRes, \"ether\");\n      const uniTokenBalanceRes = await this.state.SwapContract.methods.uniBalance(this.state.account).call();\n      const helperUni = await this.getExchangeRateMainnet(uniTokenBalanceRes, \"0xBf5140A22578168FD562DCcF235E5D43A02ce9B1\");\n      const uniTokenBalanceBnb = web3.utils.fromWei(helperUni, \"ether\");\n      const uniTokenBalance = web3.utils.fromWei(uniTokenBalanceRes, \"ether\");\n      const aaveTokenBalanceRes = await this.state.SwapContract.methods.aaveBalance(this.state.account).call();\n      const helperAave = await this.getExchangeRateMainnet(aaveTokenBalanceRes, \"0xfb6115445Bff7b52FeB98650C87f44907E58f802\");\n      const aaveTokenBalanceBnb = web3.utils.fromWei(helperAave, \"ether\");\n      const aaveTokenBalance = web3.utils.fromWei(aaveTokenBalanceRes, \"ether\");\n      this.setState({\n        defiTokenBalance,\n        btcTokenBalance,\n        ethTokenBalance,\n        shibaTokenBalance,\n        xrpTokenBalance,\n        ltcTokenBalance,\n        btcTokenBalanceBnb,\n        ethTokenBalanceBnb,\n        shibaTokenBalanceBnb,\n        xrpTokenBalanceBnb,\n        ltcTokenBalanceBnb,\n        daiTokenBalance,\n        makerTokenBalance,\n        linkTokenBalance,\n        uniTokenBalance,\n        aaveTokenBalance,\n        daiTokenBalanceBnb,\n        makerTokenBalanceBnb,\n        linkTokenBalanceBnb,\n        uniTokenBalanceBnb,\n        aaveTokenBalanceBnb\n      });\n    };\n\n    this.calcTokenBalancesNFTMainnet = async () => {\n      // NFT\n      const web3 = window.web3;\n      const nftTokenBalanceRes = await this.state.NFTTokenContract.methods.balanceOf(this.state.account).call();\n      const nftTokenBalance = web3.utils.fromWei(nftTokenBalanceRes, \"ether\");\n      const axsTokenBalanceRes = await this.state.NFTPortfolioContract.methods.axsBalance(this.state.account).call();\n      const helperAxs = await this.getExchangeRateMainnet(axsTokenBalanceRes, \"0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0\");\n      const axsTokenBalanceBnb = web3.utils.fromWei(helperAxs, \"ether\");\n      const axsTokenBalance = web3.utils.fromWei(axsTokenBalanceRes, \"ether\");\n      console.log(\"axs\", axsTokenBalance);\n      const racaTokenBalanceRes = await this.state.NFTPortfolioContract.methods.racaBalance(this.state.account).call();\n      const helperRaca = await this.getExchangeRateMainnet(racaTokenBalanceRes, \"0x12BB890508c125661E03b09EC06E404bc9289040\");\n      const racaTokenBalanceBnb = web3.utils.fromWei(helperRaca, \"ether\");\n      const racaTokenBalance = web3.utils.fromWei(racaTokenBalanceRes, \"ether\");\n      console.log(\"raca\", racaTokenBalance);\n      const mboxTokenBalanceRes = await this.state.NFTPortfolioContract.methods.mboxBalance(this.state.account).call();\n      const helperMbox = await this.getExchangeRateMainnet(mboxTokenBalanceRes, \"0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377\");\n      const mboxTokenBalanceBnb = web3.utils.fromWei(helperMbox, \"ether\");\n      const mboxTokenBalance = web3.utils.fromWei(mboxTokenBalanceRes, \"ether\");\n      console.log(\"mbox\", mboxTokenBalance);\n      const mcTokenBalanceRes = await this.state.NFTPortfolioContract.methods.mcBalance(this.state.account).call(); //const helperMc = await this.getExchangeRateMainnet(mcTokenBalanceRes, \"0x949D48EcA67b17269629c7194F4b727d4Ef9E5d6\");\n\n      const mcTokenBalanceBnb = web3.utils.fromWei(mcTokenBalanceRes, \"ether\");\n      const mcTokenBalance = web3.utils.fromWei(mcTokenBalanceRes, \"ether\");\n      console.log(\"mc\", mcTokenBalance);\n      const aliceTokenBalanceRes = await this.state.NFTPortfolioContract.methods.aliceBalance(this.state.account).call();\n      const helperAlice = await this.getExchangeRateMainnet(aliceTokenBalanceRes, \"0xAC51066d7bEC65Dc4589368da368b212745d63E8\");\n      const aliceTokenBalanceBnb = web3.utils.fromWei(helperAlice, \"ether\");\n      const aliceTokenBalance = web3.utils.fromWei(aliceTokenBalanceRes, \"ether\");\n      this.setState({\n        nftTokenBalance,\n        axsTokenBalance,\n        racaTokenBalance,\n        mboxTokenBalance,\n        mcTokenBalance,\n        aliceTokenBalance,\n        axsTokenBalanceBnb,\n        racaTokenBalanceBnb,\n        mboxTokenBalanceBnb,\n        mcTokenBalanceBnb,\n        aliceTokenBalanceBnb\n      });\n    };\n\n    this.investNFT = async () => {\n      const web3 = new Web3(window.ethereum);\n      const v = this.state.nftToMint;\n      const valueInWei = web3.utils.toWei(v, 'ether');\n      const resp = await this.state.NFTPortfolioContract2.methods.investInFundDefi().send({\n        from: this.state.account,\n        value: valueInWei\n      }).once(\"receipt\", receipt => {\n        console.log(receipt);\n      }).catch(err => {\n        console.log(err);\n      });\n\n      if (resp.status) {\n        swal(\"Investment successfull!\", \"You invested \".concat(v, \" BNB into the portfolio.\"), \"success\");\n      } else {\n        swal(\"Investment failed!\");\n      }\n\n      this.calcTokenNFTBalances();\n    };\n\n    this.investDeFi = async () => {\n      const web3 = new Web3(window.ethereum);\n      const v = this.state.defiToMint;\n      const valueInWei = web3.utils.toWei(v, 'ether');\n      const resp = await this.state.SwapContract2.methods.investInFundDefi().send({\n        from: this.state.account,\n        value: valueInWei\n      }).once(\"receipt\", receipt => {\n        console.log(receipt);\n      }).catch(err => {\n        console.log(err);\n      });\n\n      if (resp.status) {\n        swal(\"Investment successfull!\", \"You invested \".concat(v, \" BNB into the portfolio.\"), \"success\"); //window.location.reload();\n      } else {\n        swal(\"Investment failed!\");\n      }\n\n      this.calcTokenDeFiBalances();\n    };\n\n    this.approveNFTTokens = async () => {\n      const web3 = new Web3(window.ethereum);\n      const aXSTokenConntract = new web3.eth.Contract(IERC.abi, \"0xf34D883EcdE3238B153f38230987a0F4c221a48F\");\n      await aXSTokenConntract.methods.approve(\"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\"\n      });\n      const mANATokenConntract = new web3.eth.Contract(IERC.abi, \"0x8bf2dF0Ff8528088475183a68678bd1Cd7691b69\");\n      await mANATokenConntract.methods.approve(\"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\"\n      });\n      const sANDTokenConntract = new web3.eth.Contract(IERC.abi, \"0x1631A54AC95Ecb0085dB6b8ACf80c4Cee72AEB06\");\n      await sANDTokenConntract.methods.approve(\"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\"\n      });\n      const tHETATokenConntract = new web3.eth.Contract(IERC.abi, \"0x19A5E53eC7B385dbE2E587Ba989eA2AB8F7EaF1e\");\n      await tHETATokenConntract.methods.approve(\"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\"\n      });\n      const fLOWTokenConntract = new web3.eth.Contract(IERC.abi, \"0xe5c48084E1974a971Bd5dF4d9B01daCCA86d5567\");\n      await fLOWTokenConntract.methods.approve(\"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\"\n      });\n      const xTZTokenConntract = new web3.eth.Contract(IERC.abi, \"0xC5De9d5B0BA5b408a3e9530A1BC310d8F2dCC26a\");\n      await xTZTokenConntract.methods.approve(\"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\"\n      });\n      const gALATokenConntract = new web3.eth.Contract(IERC.abi, \"0x4bf1CE8E4c4c86126E57Fa9fc3f1a9631661641c\");\n      await gALATokenConntract.methods.approve(\"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\"\n      });\n      const cHZTokenConntract = new web3.eth.Contract(IERC.abi, \"0xdeEC6f0C22970b9b8a47069bE619bfAe646dEe26\");\n      await cHZTokenConntract.methods.approve(\"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\"\n      });\n      const eNJTokenConntract = new web3.eth.Contract(IERC.abi, \"0xb08A1959f57b9cC8e5A5F1d329EfD90EE3438F65\");\n      await eNJTokenConntract.methods.approve(\"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\"\n      });\n      const rOSETokenConntract = new web3.eth.Contract(IERC.abi, \"0x30c1AC77F4068A063648B549ffF96Ddb9d151325\");\n      await rOSETokenConntract.methods.approve(\"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\"\n      });\n    };\n\n    this.approveDeFiTokens = async () => {\n      const web3 = new Web3(window.ethereum);\n      const contractAddress = \"0xC773887b60191926d9995DB3072D212478ce235A\";\n      const vault = \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\";\n      const BTCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x4b1851167f74FF108A994872A160f1D6772d474b\");\n      BTCTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: vault\n      });\n      const ETHTokenConntract = new web3.eth.Contract(IERC.abi, \"0x8BaBbB98678facC7342735486C851ABD7A0d17Ca\");\n      ETHTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: vault\n      });\n      const SHIBATokenConntract = new web3.eth.Contract(IERC.abi, \"0xBf0646Fa5ABbFf6Af50a9C40D5E621835219d384\");\n      SHIBATokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: vault\n      });\n      const XRPTokenConntract = new web3.eth.Contract(IERC.abi, \"0xCc00177908830cE1644AEB4aD507Fda3789128Af\");\n      XRPTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: vault\n      });\n      const LTCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x2F9fd65E3BB89b68a8e2Abd68Db25F5C348F68Ee\");\n      LTCTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: vault\n      });\n      const DAITokenConntract = new web3.eth.Contract(IERC.abi, \"0x8a9424745056Eb399FD19a0EC26A14316684e274\");\n      DAITokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: vault\n      });\n      const LUNATokenConntract = new web3.eth.Contract(IERC.abi, \"0x0bBF12a9Ccd7cD0E23dA21eFd3bb16ba807ab069\");\n      LUNATokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: vault\n      });\n      const LINKTokenConntract = new web3.eth.Contract(IERC.abi, \"0x8D908A42FD847c80Eeb4498dE43469882436c8FF\");\n      LINKTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: vault\n      });\n      const UNITokenConntract = new web3.eth.Contract(IERC.abi, \"0x62955C6cA8Cd74F8773927B880966B7e70aD4567\");\n      UNITokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: vault\n      });\n      const STETHTokenConntract = new web3.eth.Contract(IERC.abi, \"0xb7a58582Df45DBa8Ad346c6A51fdb796D64e0898\");\n      STETHTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: vault\n      });\n    };\n\n    this.withdrawDeFi = async () => {\n      var vault = \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\";\n      const web3 = new Web3(window.ethereum);\n      var withdrawAmt = this.state.withdrawValueDefi;\n      var withdrawAmountInWei = web3.utils.toWei(withdrawAmt, 'ether');\n      const defiBalance = await this.state.DeFiTokenContract2.methods.balanceOf(this.state.account).call();\n\n      if (defiBalance == 0) {\n        swal(\"Withdrawal amount exceeds balance!\");\n        return;\n      }\n\n      var percentage = withdrawAmountInWei * 100 / defiBalance;\n      var percentageFinal = Math.round(percentage);\n      console.log(Math.round(percentage));\n      await this.state.DeFiTokenContract2.methods.approve(\"0xC773887b60191926d9995DB3072D212478ce235A\", \"7787357773333787487837458347754874574837458374\").send({\n        from: this.state.account\n      });\n      var amount = withdrawAmountInWei;\n      var sAmount = amount.toString();\n      await this.state.SwapContract2.methods.withdrawFromFundTOPTokens(sAmount, percentageFinal).send({\n        from: this.state.account,\n        value: 0\n      }).once(\"receipt\", receipt => {\n        swal(\"Withdrawal successfull!\", \"The withdrawal was successful!\", \"success\");\n        console.log(receipt);\n      }).catch(err => {\n        console.log(err);\n      });\n      this.calcTokenDeFiBalances();\n    };\n\n    this.withdrawNFT = async () => {\n      var vault = \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\";\n      const web3 = new Web3(window.ethereum);\n      var withdrawAmt = this.state.withdrawValueNFT;\n      var withdrawAmountInWei = web3.utils.toWei(withdrawAmt, 'ether');\n      const nftBalance = await this.state.NFTTokenContract2.methods.balanceOf(this.state.account).call();\n\n      if (nftBalance == 0) {\n        swal(\"Withdrawal amount exceeds balance!\");\n        return;\n      }\n\n      var percentage = withdrawAmountInWei * 100 / nftBalance;\n      var percentageFinal = Math.round(percentage);\n      console.log(Math.round(percentage));\n      await this.state.NFTTokenContract2.methods.approve(\"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\", \"7787357773333787487837458347754874574837458374\").send({\n        from: this.state.account\n      });\n      var amount = withdrawAmountInWei;\n      var sAmount = amount.toString();\n      await this.state.NFTPortfolioContract2.methods.withdrawFromFundNFT(sAmount, percentageFinal).send({\n        from: this.state.account,\n        value: 0\n      }).once(\"receipt\", receipt => {\n        swal(\"Withdrawal successfull!\", \"The withdrawal was successful!\", \"success\");\n        console.log(receipt);\n      }).catch(err => {\n        console.log(err);\n      });\n      this.calcTokenNFTBalances();\n    };\n\n    this.getExchangeRate = async (amountIn, address) => {\n      const web3 = window.web3;\n      const pancakeRouter = new web3.eth.Contract(pancakeSwapRouter.abi, \"0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3\");\n      var path = [];\n      path[0] = address;\n      path[1] = \"0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd\";\n      const er = await pancakeRouter.methods.getAmountsOut(amountIn, path).call();\n      return er[1];\n    };\n\n    this.calcTokenDeFiBalances = async () => {\n      const web3 = window.web3;\n      const defiTokenBalanceRes = await this.state.DeFiTokenContract2.methods.balanceOf(this.state.account).call();\n      const defiTokenBalance = web3.utils.fromWei(defiTokenBalanceRes, \"ether\");\n      const btcTokenBalanceRes = await this.state.SwapContract2.methods.btcBalance(this.state.account).call();\n      const helperBtc = await this.getExchangeRate(btcTokenBalanceRes, \"0x4b1851167f74FF108A994872A160f1D6772d474b\");\n      const btcTokenBalanceBnb = web3.utils.fromWei(helperBtc, \"ether\");\n      const btcTokenBalance = web3.utils.fromWei(btcTokenBalanceRes, \"ether\");\n      const ethTokenBalanceRes = await this.state.SwapContract2.methods.ethBalance(this.state.account).call();\n      const helperEth = await this.getExchangeRate(ethTokenBalanceRes, \"0x8BaBbB98678facC7342735486C851ABD7A0d17Ca\");\n      const ethTokenBalanceBnb = web3.utils.fromWei(helperEth, \"ether\");\n      const ethTokenBalance = web3.utils.fromWei(ethTokenBalanceRes, \"ether\");\n      console.log(\"eth\", ethTokenBalance);\n      const shibaTokenBalanceRes = await this.state.SwapContract2.methods.shibaBalance(this.state.account).call();\n      const helperShib = await this.getExchangeRate(shibaTokenBalanceRes, \"0xBf0646Fa5ABbFf6Af50a9C40D5E621835219d384\");\n      const shibaTokenBalanceBnb = web3.utils.fromWei(helperShib, \"ether\");\n      const shibaTokenBalance = web3.utils.fromWei(shibaTokenBalanceRes, \"ether\");\n      const xrpTokenBalanceRes = await this.state.SwapContract2.methods.xrpBalance(this.state.account).call();\n      const helperXrp = await this.getExchangeRate(xrpTokenBalanceRes, \"0xCc00177908830cE1644AEB4aD507Fda3789128Af\");\n      const xrpTokenBalanceBnb = web3.utils.fromWei(helperXrp, \"ether\");\n      const xrpTokenBalance = web3.utils.fromWei(xrpTokenBalanceRes, \"ether\");\n      const ltcTokenBalanceRes = await this.state.SwapContract2.methods.ltcBalance(this.state.account).call();\n      const helperLtc = await this.getExchangeRate(ltcTokenBalanceRes, \"0x2F9fd65E3BB89b68a8e2Abd68Db25F5C348F68Ee\");\n      const ltcTokenBalanceBnb = web3.utils.fromWei(helperLtc, \"ether\");\n      const ltcTokenBalance = web3.utils.fromWei(ltcTokenBalanceRes, \"ether\");\n      const daiTokenBalanceRes = await this.state.SwapContract2.methods.daiBalance(this.state.account).call();\n      const helperDai = await this.getExchangeRate(daiTokenBalanceRes, \"0x8a9424745056Eb399FD19a0EC26A14316684e274\");\n      const daiTokenBalanceBnb = web3.utils.fromWei(helperDai, \"ether\");\n      const daiTokenBalance = web3.utils.fromWei(daiTokenBalanceRes, \"ether\");\n      const lunaTokenBalanceRes = await this.state.SwapContract2.methods.lunaBalance(this.state.account).call();\n      const helperLuna = await this.getExchangeRate(lunaTokenBalanceRes, \"0x0bBF12a9Ccd7cD0E23dA21eFd3bb16ba807ab069\");\n      const lunaTokenBalanceBnb = web3.utils.fromWei(helperLuna, \"ether\");\n      const lunaTokenBalance = web3.utils.fromWei(lunaTokenBalanceRes, \"ether\");\n      const linkTokenBalanceRes = await this.state.SwapContract2.methods.linkBalance(this.state.account).call();\n      const helperLink = await this.getExchangeRate(linkTokenBalanceRes, \"0x8D908A42FD847c80Eeb4498dE43469882436c8FF\");\n      const linkTokenBalanceBnb = web3.utils.fromWei(helperLink, \"ether\");\n      const linkTokenBalance = web3.utils.fromWei(linkTokenBalanceRes, \"ether\");\n      const uniTokenBalanceRes = await this.state.SwapContract2.methods.uniBalance(this.state.account).call();\n      const helperUni = await this.getExchangeRate(uniTokenBalanceRes, \"0x62955C6cA8Cd74F8773927B880966B7e70aD4567\");\n      const uniTokenBalanceBnb = web3.utils.fromWei(helperUni, \"ether\");\n      const uniTokenBalance = web3.utils.fromWei(uniTokenBalanceRes, \"ether\");\n      const stethTokenBalanceRes = await this.state.SwapContract2.methods.stethBalance(this.state.account).call();\n      const helperSteth = await this.getExchangeRate(stethTokenBalanceRes, \"0xb7a58582Df45DBa8Ad346c6A51fdb796D64e0898\");\n      const stethTokenBalanceBnb = web3.utils.fromWei(helperSteth, \"ether\");\n      const stethTokenBalance = web3.utils.fromWei(stethTokenBalanceRes, \"ether\");\n      console.log(\"steth\", stethTokenBalance);\n      this.setState({\n        defiTokenBalance,\n        btcTokenBalance,\n        ethTokenBalance,\n        shibaTokenBalance,\n        xrpTokenBalance,\n        ltcTokenBalance,\n        btcTokenBalanceBnb,\n        ethTokenBalanceBnb,\n        shibaTokenBalanceBnb,\n        xrpTokenBalanceBnb,\n        ltcTokenBalanceBnb,\n        daiTokenBalance,\n        lunaTokenBalance,\n        linkTokenBalance,\n        uniTokenBalance,\n        stethTokenBalance,\n        daiTokenBalanceBnb,\n        lunaTokenBalanceBnb,\n        linkTokenBalanceBnb,\n        uniTokenBalanceBnb,\n        stethTokenBalanceBnb\n      });\n    };\n\n    this.calcTokenNFTBalances = async () => {\n      const web3 = window.web3;\n      const nftTokenBalanceRes = await this.state.NFTTokenContract2.methods.balanceOf(this.state.account).call();\n      const nftTokenBalance = web3.utils.fromWei(nftTokenBalanceRes, \"ether\");\n      const axsTokenBalanceRes = await this.state.NFTPortfolioContract2.methods.axsBalance(this.state.account).call();\n      const helperAxs = await this.getExchangeRate(axsTokenBalanceRes, \"0xf34D883EcdE3238B153f38230987a0F4c221a48F\");\n      const axsTokenBalanceBnb = web3.utils.fromWei(helperAxs, \"ether\");\n      const axsTokenBalance = web3.utils.fromWei(axsTokenBalanceRes, \"ether\");\n      const manaTokenBalanceRes = await this.state.NFTPortfolioContract2.methods.manaBalance(this.state.account).call();\n      const helperMana = await this.getExchangeRate(manaTokenBalanceRes, \"0x8bf2dF0Ff8528088475183a68678bd1Cd7691b69\");\n      const manaTokenBalanceBnb = web3.utils.fromWei(helperMana, \"ether\");\n      const manaTokenBalance = web3.utils.fromWei(manaTokenBalanceRes, \"ether\");\n      const sandTokenBalanceRes = await this.state.NFTPortfolioContract2.methods.sandBalance(this.state.account).call();\n      const helperSand = await this.getExchangeRate(sandTokenBalanceRes, \"0x1631A54AC95Ecb0085dB6b8ACf80c4Cee72AEB06\");\n      const sandTokenBalanceBnb = web3.utils.fromWei(helperSand, \"ether\");\n      const sandTokenBalance = web3.utils.fromWei(sandTokenBalanceRes, \"ether\");\n      const thetaTokenBalanceRes = await this.state.NFTPortfolioContract2.methods.thetaBalance(this.state.account).call();\n      const helperTheate = await this.getExchangeRate(thetaTokenBalanceRes, \"0x19A5E53eC7B385dbE2E587Ba989eA2AB8F7EaF1e\");\n      const thetaTokenBalanceBnb = web3.utils.fromWei(helperTheate, \"ether\");\n      const thetaTokenBalance = web3.utils.fromWei(thetaTokenBalanceRes, \"ether\");\n      const flowTokenBalanceRes = await this.state.NFTPortfolioContract2.methods.flowalance(this.state.account).call();\n      const helperFlow = await this.getExchangeRate(flowTokenBalanceRes, \"0xe5c48084E1974a971Bd5dF4d9B01daCCA86d5567\");\n      const flowTokenBalanceBnb = web3.utils.fromWei(helperFlow, \"ether\");\n      const flowTokenBalance = web3.utils.fromWei(flowTokenBalanceRes, \"ether\");\n      console.log(flowTokenBalanceRes);\n      const xtzTokenBalanceRes = await this.state.NFTPortfolioContract2.methods.xtzBalance(this.state.account).call();\n      const helperXtz = await this.getExchangeRate(xtzTokenBalanceRes, \"0xC5De9d5B0BA5b408a3e9530A1BC310d8F2dCC26a\");\n      const xtzTokenBalanceBnb = web3.utils.fromWei(helperXtz, \"ether\");\n      const xtzTokenBalance = web3.utils.fromWei(xtzTokenBalanceRes, \"ether\");\n      const galaTokenBalanceRes = await this.state.NFTPortfolioContract2.methods.galaBalance(this.state.account).call();\n      const helperGala = await this.getExchangeRate(galaTokenBalanceRes, \"0x4bf1CE8E4c4c86126E57Fa9fc3f1a9631661641c\");\n      const galaTokenBalanceBnb = web3.utils.fromWei(helperGala, \"ether\");\n      const galaTokenBalance = web3.utils.fromWei(galaTokenBalanceRes, \"ether\");\n      const chzTokenBalanceRes = await this.state.NFTPortfolioContract2.methods.chzBalance(this.state.account).call();\n      const helperChz = await this.getExchangeRate(chzTokenBalanceRes, \"0xdeEC6f0C22970b9b8a47069bE619bfAe646dEe26\");\n      const chzTokenBalanceBnb = web3.utils.fromWei(helperChz, \"ether\");\n      const chzTokenBalance = web3.utils.fromWei(chzTokenBalanceRes, \"ether\");\n      const enjTokenBalanceRes = await this.state.NFTPortfolioContract2.methods.enjBalance(this.state.account).call();\n      const helperEnj = await this.getExchangeRate(enjTokenBalanceRes, \"0xb08A1959f57b9cC8e5A5F1d329EfD90EE3438F65\");\n      const enjTokenBalanceBnb = web3.utils.fromWei(helperEnj, \"ether\");\n      const enjTokenBalance = web3.utils.fromWei(enjTokenBalanceRes, \"ether\");\n      const roseTokenBalanceRes = await this.state.NFTPortfolioContract2.methods.roseBalance(this.state.account).call();\n      const helperRose = await this.getExchangeRate(roseTokenBalanceRes, \"0x30c1AC77F4068A063648B549ffF96Ddb9d151325\");\n      const roseTokenBalanceBnb = web3.utils.fromWei(helperRose, \"ether\");\n      const roseTokenBalance = web3.utils.fromWei(roseTokenBalanceRes, \"ether\");\n      console.log(\"rose\", roseTokenBalance);\n      this.setState({\n        nftTokenBalance,\n        axsTokenBalance,\n        manaTokenBalance,\n        sandTokenBalance,\n        thetaTokenBalance,\n        flowTokenBalance,\n        axsTokenBalanceBnb,\n        manaTokenBalanceBnb,\n        sandTokenBalanceBnb,\n        thetaTokenBalanceBnb,\n        flowTokenBalanceBnb,\n        xtzTokenBalance,\n        galaTokenBalance,\n        chzTokenBalance,\n        enjTokenBalance,\n        roseTokenBalance,\n        xtzTokenBalanceBnb,\n        galaTokenBalanceBnb,\n        chzTokenBalanceBnb,\n        enjTokenBalanceBnb,\n        roseTokenBalanceBnb\n      });\n    };\n\n    this.state = {\n      account: '',\n      SwapContract: null,\n      NFTTokenContract: null,\n      DeFiTokenContract: null,\n      NFTPortfolioContract: null,\n      SwapContract2: null,\n      NFTTokenContract2: null,\n      DeFiTokenContract2: null,\n      NFTPortfolioContract2: null,\n      address: \"\",\n      connected: false,\n      chainId: \"\",\n      defiToMintMainnet: 0,\n      nftToMintMainnet: 0,\n      withdrawValueDefi: 0,\n      withdrawValueNFT: 0,\n      nftTokenBalance: 0,\n      defiTokenBalance: 0,\n      btcTokenBalance: 0,\n      ethTokenBalance: 0,\n      shibaTokenBalance: 0,\n      xrpTokenBalance: 0,\n      ltcTokenBalance: 0,\n      daiTokenBalance: 0,\n      makerTokenBalance: 0,\n      linkTokenBalance: 0,\n      uniTokenBalance: 0,\n      aaveTokenBalance: 0,\n      btcTokenBalanceBnb: 0,\n      ethTokenBalanceBnb: 0,\n      shibaTokenBalanceBnb: 0,\n      xrpTokenBalanceBnb: 0,\n      ltcTokenBalanceBnb: 0,\n      daiTokenBalanceBnb: 0,\n      makerTokenBalanceBnb: 0,\n      linkTokenBalanceBnb: 0,\n      uniTokenBalanceBnb: 0,\n      aaveTokenBalanceBnb: 0,\n      axsTokenBalance: 0,\n      racaTokenBalance: 0,\n      mboxTokenBalance: 0,\n      mcTokenBalance: 0,\n      aliceTokenBalance: 0,\n      xtzTokenBalance: 0,\n      galaTokenBalance: 0,\n      chzTokenBalance: 0,\n      enjTokenBalance: 0,\n      roseTokenBalance: 0,\n      axsTokenBalanceBnb: 0,\n      racaTokenBalanceBnb: 0,\n      mboxTokenBalanceBnb: 0,\n      mcTokenBalanceBnb: 0,\n      aliceTokenBalanceBnb: 0,\n      xtzTokenBalanceBnb: 0,\n      galaTokenBalanceBnb: 0,\n      chzTokenBalanceBnb: 0,\n      enjTokenBalanceBnb: 0,\n      roseTokenBalanceBnb: 0,\n      lunaTokenBalance: 0,\n      stethTokenBalance: 0,\n      btcTokenBalanceBnb: 0,\n      lunaTokenBalanceBnb: 0,\n      sandTokenBalance: 0,\n      thetaTokenBalance: 0,\n      flowTokenBalance: 0,\n      xtzTokenBalance: 0,\n      galaTokenBalance: 0,\n      chzTokenBalance: 0,\n      enjTokenBalance: 0,\n      roseTokenBalance: 0,\n      manaTokenBalance: 0,\n      sandTokenBalance: 0,\n      thetaTokenBalance: 0,\n      flowTokenBalance: 0,\n      xtzTokenBalance: 0,\n      galaTokenBalance: 0,\n      chzTokenBalance: 0,\n      enjTokenBalance: 0,\n      roseTokenBalance: 0,\n      manaTokenBalanceBnb: 0,\n      sandTokenBalanceBnb: 0,\n      thetaTokenBalanceBnb: 0,\n      flowTokenBalanceBnb: 0,\n      xtzTokenBalanceBnb: 0,\n      galaTokenBalanceBnb: 0,\n      chzTokenBalanceBnb: 0,\n      enjTokenBalanceBnb: 0,\n      roseTokenBalanceBnb: 0,\n      rate: 0\n    };\n  }\n\n  async componentDidMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData(); //await this.getRate();\n    //swal(\"The project is in the alpha stage, proceed at your own risk\");\n\n    const web3 = window.web3;\n    const chainIdDec = await web3.eth.getChainId();\n    this.setState({\n      chainId: chainIdDec\n    });\n\n    if (chainIdDec == \"56\") {\n      await this.calcTokenBalancesDeFiMainnet();\n      await this.calcTokenBalancesNFTMainnet();\n    } else if (chainIdDec == \"97\") {\n      await this.calcTokenDeFiBalances();\n      await this.calcTokenNFTBalances();\n    }\n\n    this.setState({\n      chainId: chainIdDec\n    });\n  } // first up is to detect ethereum provider\n\n\n  async loadWeb3() {\n    const provider = await detectEthereumProvider(); // modern browsers\n\n    if (provider) {\n      console.log('MetaMask is connected');\n      window.web3 = new Web3(provider);\n    } else {\n      console.log('No ethereum wallet detected');\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const chainIdDec = await web3.eth.getChainId();\n    const accounts = await window.web3.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    });\n\n    if (accounts[0]) {\n      this.setState({\n        connected: true\n      });\n    }\n\n    if (chainIdDec == \"56\") {\n      this.setState({\n        account: accounts[0]\n      });\n      const SwapContract = new web3.eth.Contract(IndexSwap.abi, \"0x380d2b6742AAD7ae97f199a109c1F81A34E1cb86\");\n      const NFTPortfolioContract = new web3.eth.Contract(NFTSwap.abi, \"0x40A367c5320440a1aa78aCBC5af0A017Ed1F3772\");\n      const NFTTokenContract = new web3.eth.Contract(IndexToken.abi, \"0x16dBB234A9a595967DdC2ea1bb53379752f09Ad4\");\n      const DeFiTokenContract = new web3.eth.Contract(IndexToken.abi, \"0x6E49456f284e3da7f1515eEE120E2706cab69fD5\");\n      this.setState({\n        SwapContract,\n        DeFiTokenContract,\n        NFTPortfolioContract,\n        NFTTokenContract\n      });\n    } else if (chainIdDec == \"97\") {\n      const SwapContract2 = new web3.eth.Contract(IndexSwap2.abi, \"0xC773887b60191926d9995DB3072D212478ce235A\");\n      const NFTPortfolioContract2 = new web3.eth.Contract(NFTSwap2.abi, \"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\");\n      const NFTTokenContract2 = new web3.eth.Contract(IndexToken2.abi, \"0x817ea2A5Fd281d15CA70B05abB5E094356C42996\");\n      const DeFiTokenContract2 = new web3.eth.Contract(IndexToken2.abi, \"0xF70538622598232a95B1EC1914Fc878d28EBAE68\");\n      this.setState({\n        SwapContract2,\n        DeFiTokenContract2,\n        NFTPortfolioContract2,\n        NFTTokenContract2\n      });\n    }\n  }\n\n  async changeNetwork(networkName) {\n    try {\n      if (!window.ethereum) throw new Error(\"No crypto wallet found\");\n      await window.ethereum.request({\n        method: \"wallet_addEthereumChain\",\n        params: [_objectSpread({}, networks[networkName])]\n      });\n    } catch (err) {\n      console.log(err);\n    }\n\n    window.location.reload();\n    const web3 = window.web3;\n    const chainIdDec = await web3.eth.getChainId();\n    this.setState({\n      chainId: chainIdDec\n    });\n    await this.loadBlockchainData();\n\n    if (chainIdDec == \"97\") {\n      await this.calcTokenBalancesDeFiMainnet();\n      await this.calcTokenBalancesNFTMainnet();\n    } else {\n      await this.calcTokenDeFiBalances();\n      await this.calcTokenNFTBalances();\n    }\n  }\n\n  render() {\n    window.addEventListener(\"load\", function () {\n      if (window.ethereum) {\n        // use MetaMask's provider\n        App.web3 = new Web3(window.ethereum);\n        window.ethereum.enable(); // get permission to access accounts\n        // detect Metamask account change\n\n        window.ethereum.on('accountsChanged', function (accounts) {\n          console.log('accountsChanges', accounts);\n        }); // detect Network account change\n\n        window.ethereum.on('networkChanged', function (networkId) {\n          console.log('networkChanged', networkId);\n        });\n      } else {\n        console.warn(\"No web3 detected. Falling back to http://127.0.0.1:8545. You should remove this fallback when you deploy live\"); // fallback - use your fallback strategy (local node / hosted node + in-dapp id mgmt / fail)\n\n        App.web3 = new Web3(new Web3.providers.HttpProvider(\"http://127.0.0.1:7545\"));\n      }\n    });\n    const web3 = window.web3;\n    let button;\n\n    if (!this.state.connected) {\n      button = React.createElement(Button, {\n        style: {\n          position: \"absolute\",\n          top: \"60px\",\n          right: \"20px\"\n        },\n        onClick: this.connectWallet,\n        color: \"orange\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 980\n        },\n        __self: this\n      }, React.createElement(Image, {\n        style: {\n          \"padding-top\": \"7px\"\n        },\n        floated: \"left\",\n        size: \"mini\",\n        src: metamask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 981\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 982\n        },\n        __self: this\n      }, \"Connect to MetaMask\"));\n    } else {\n      button = React.createElement(\"p\", {\n        style: {\n          position: \"absolute\",\n          top: \"110px\",\n          right: \"20px\",\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 985\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 985\n        },\n        __self: this\n      }, \"Account:\"), \" \", this.state.account);\n    }\n\n    let testnet;\n\n    if (this.state.chainId == \"97\") {\n      testnet = React.createElement(Grid, {\n        divided: \"vertically\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 990\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        columns: 2,\n        style: {\n          margin: \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 991\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 992\n        },\n        __self: this\n      }, React.createElement(Card.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 994\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          width: \"900px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 995\n        },\n        __self: this\n      }, React.createElement(Card.Content, {\n        style: {\n          background: \"#406ccd\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 996\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        style: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 997\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          color: \"#C0C0C0\",\n          \"font-weight\": \"bold\",\n          \"text-align\": \"right\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 998\n        },\n        __self: this\n      }, \"APY: XX%\"), \"Top 10 Tokens\"), React.createElement(Card.Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1001\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1003\n        },\n        __self: this\n      }, \"Rate: In return of investing 1 BNB you will receive 1 Top10 Token.\"), React.createElement(Form, {\n        onSubmit: this.investDeFi,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1005\n        },\n        __self: this\n      }, React.createElement(Input, {\n        style: {\n          width: \"300px\",\n          padding: 3\n        },\n        required: true,\n        type: \"text\",\n        placeholder: \"BNB amount to create\",\n        name: \"defiToMint\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1006\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"green\",\n        type: \"submit\",\n        style: {\n          margin: \"20px\",\n          width: \"150px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1007\n        },\n        __self: this\n      }, \"Create\")), React.createElement(Form, {\n        onSubmit: this.withdrawDeFi,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1010\n        },\n        __self: this\n      }, React.createElement(Input, {\n        style: {\n          width: \"300px\",\n          padding: 3\n        },\n        required: true,\n        type: \"text\",\n        placeholder: \"Top10 amount to redeem\",\n        name: \"withdrawValueDefi\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1011\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"green\",\n        style: {\n          margin: \"20px\",\n          width: \"150px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1012\n        },\n        __self: this\n      }, \"Redeem\")), React.createElement(Table, {\n        style: {\n          \"margin-left\": \"auto\",\n          \"margin-right\": \"auto\"\n        },\n        basic: \"very\",\n        celled: true,\n        collapsing: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1015\n        },\n        __self: this\n      }, React.createElement(Table.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1016\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1017\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        style: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1018\n        },\n        __self: this\n      }, \"Token\"), React.createElement(Table.HeaderCell, {\n        style: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1019\n        },\n        __self: this\n      }, \"Balance\"), React.createElement(Table.HeaderCell, {\n        style: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1020\n        },\n        __self: this\n      }, \"Balance in WBNB\"))), React.createElement(Table.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1024\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1025\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1026\n        },\n        __self: this\n      }, \"Top10 Token\"), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1027\n        },\n        __self: this\n      }, this.state.defiTokenBalance), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1028\n        },\n        __self: this\n      }, \"-\")), React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1030\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1031\n        },\n        __self: this\n      }, \"Bitcoin (BTC)\"), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1032\n        },\n        __self: this\n      }, this.state.btcTokenBalance), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1033\n        },\n        __self: this\n      }, this.state.btcTokenBalanceBnb)), React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1035\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1036\n        },\n        __self: this\n      }, \"Ethereum (ETH)\"), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1037\n        },\n        __self: this\n      }, this.state.ethTokenBalance), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1038\n        },\n        __self: this\n      }, this.state.ethTokenBalanceBnb)), React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1040\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1041\n        },\n        __self: this\n      }, \"Shiba Ibu (SHIB)\"), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1042\n        },\n        __self: this\n      }, this.state.shibaTokenBalance), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1043\n        },\n        __self: this\n      }, this.state.shibaTokenBalanceBnb)), React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1045\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1046\n        },\n        __self: this\n      }, \"Ripple (XRP)\"), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1047\n        },\n        __self: this\n      }, this.state.xrpTokenBalance), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1048\n        },\n        __self: this\n      }, this.state.xrpTokenBalanceBnb)), React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1050\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1051\n        },\n        __self: this\n      }, \"Litecoin (LTC)\"), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1052\n        },\n        __self: this\n      }, this.state.ltcTokenBalance), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1053\n        },\n        __self: this\n      }, this.state.ltcTokenBalanceBnb)), React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1055\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1056\n        },\n        __self: this\n      }, \"Dai (DAI)\"), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1057\n        },\n        __self: this\n      }, this.state.daiTokenBalance), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1058\n        },\n        __self: this\n      }, this.state.daiTokenBalanceBnb)), React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1060\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1061\n        },\n        __self: this\n      }, \"Terra (LUNA)\"), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1062\n        },\n        __self: this\n      }, this.state.lunaTokenBalance), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1063\n        },\n        __self: this\n      }, this.state.lunaTokenBalanceBnb)), React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1065\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1066\n        },\n        __self: this\n      }, \"Chainlink (LINK)\"), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1067\n        },\n        __self: this\n      }, this.state.linkTokenBalance), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1068\n        },\n        __self: this\n      }, this.state.linkTokenBalanceBnb)), React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1070\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1071\n        },\n        __self: this\n      }, \"Uniswap (UNI)\"), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1072\n        },\n        __self: this\n      }, this.state.uniTokenBalance), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1073\n        },\n        __self: this\n      }, this.state.uniTokenBalanceBnb)), React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1075\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1076\n        },\n        __self: this\n      }, \"Lido Staked Ether (STETH)\"), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1077\n        },\n        __self: this\n      }, this.state.stethTokenBalance), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1078\n        },\n        __self: this\n      }, this.state.stethTokenBalanceBnb))))))))), React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1091\n        },\n        __self: this\n      }, React.createElement(Card.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1092\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          width: \"900px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1093\n        },\n        __self: this\n      }, React.createElement(Card.Content, {\n        style: {\n          background: \"#406ccd\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1094\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        style: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1095\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          color: \"#C0C0C0\",\n          \"font-weight\": \"bold\",\n          \"text-align\": \"right\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1096\n        },\n        __self: this\n      }, \"APY: YY%\"), \"Top 10 Metaverse Tokens\"), React.createElement(Card.Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1099\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1101\n        },\n        __self: this\n      }, \"Rate: In return of investing 1 BNB you will receive 1 META Token.\"), React.createElement(Form, {\n        onSubmit: this.investNFT,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1103\n        },\n        __self: this\n      }, React.createElement(Input, {\n        style: {\n          width: \"300px\",\n          padding: 3\n        },\n        required: true,\n        type: \"text\",\n        placeholder: \"BNB amount to create\",\n        name: \"nftToMint\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1104\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"green\",\n        type: \"submit\",\n        style: {\n          margin: \"20px\",\n          width: \"150px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1105\n        },\n        __self: this\n      }, \"Create\")), React.createElement(Form, {\n        onSubmit: this.withdrawNFT,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1108\n        },\n        __self: this\n      }, React.createElement(Input, {\n        style: {\n          width: \"300px\",\n          padding: 3\n        },\n        required: true,\n        type: \"text\",\n        placeholder: \"META amount to redeem\",\n        name: \"withdrawValueNFT\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1109\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"green\",\n        style: {\n          margin: \"20px\",\n          width: \"150px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1110\n        },\n        __self: this\n      }, \"Redeem\")), React.createElement(Table, {\n        style: {\n          \"margin-left\": \"auto\",\n          \"margin-right\": \"auto\"\n        },\n        basic: \"very\",\n        celled: true,\n        collapsing: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1113\n        },\n        __self: this\n      }, React.createElement(Table.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1114\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1115\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        style: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1116\n        },\n        __self: this\n      }, \"Token\"), React.createElement(Table.HeaderCell, {\n        style: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1117\n        },\n        __self: this\n      }, \"Balance\"), React.createElement(Table.HeaderCell, {\n        style: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1118\n        },\n        __self: this\n      }, \"Balance in WBNB\"))), React.createElement(Table.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1122\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1123\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1124\n        },\n        __self: this\n      }, \"Metaverse Token\"), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1125\n        },\n        __self: this\n      }, this.state.nftTokenBalance), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1126\n        },\n        __self: this\n      }, \"-\")), React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1128\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1129\n        },\n        __self: this\n      }, \"Axie Infinity (AXS)\"), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1130\n        },\n        __self: this\n      }, this.state.axsTokenBalance), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1131\n        },\n        __self: this\n      }, this.state.axsTokenBalanceBnb)), React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1133\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1134\n        },\n        __self: this\n      }, \"Decentraland (MANA)\"), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1135\n        },\n        __self: this\n      }, this.state.manaTokenBalance), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1136\n        },\n        __self: this\n      }, this.state.manaTokenBalanceBnb)), React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1138\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1139\n        },\n        __self: this\n      }, \"The Sandbox (SAND)\"), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1140\n        },\n        __self: this\n      }, this.state.sandTokenBalance), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1141\n        },\n        __self: this\n      }, this.state.sandTokenBalanceBnb)), React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1143\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1144\n        },\n        __self: this\n      }, \"Theta Network (THETA)\"), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1145\n        },\n        __self: this\n      }, this.state.thetaTokenBalance), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1146\n        },\n        __self: this\n      }, this.state.thetaTokenBalanceBnb)), React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1148\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1149\n        },\n        __self: this\n      }, \"Flow (FLOW)\"), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1150\n        },\n        __self: this\n      }, this.state.flowTokenBalance), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1151\n        },\n        __self: this\n      }, this.state.flowTokenBalanceBnb)), React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1153\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1154\n        },\n        __self: this\n      }, \"Tezos (XTZ)\"), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1155\n        },\n        __self: this\n      }, this.state.xtzTokenBalance), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1156\n        },\n        __self: this\n      }, this.state.xtzTokenBalanceBnb)), React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1158\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1159\n        },\n        __self: this\n      }, \"Gala (GALA)\"), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1160\n        },\n        __self: this\n      }, this.state.galaTokenBalance), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1161\n        },\n        __self: this\n      }, this.state.galaTokenBalanceBnb)), React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1163\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1164\n        },\n        __self: this\n      }, \"Chiliz (CHZ)\"), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1165\n        },\n        __self: this\n      }, this.state.chzTokenBalance), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1166\n        },\n        __self: this\n      }, this.state.chzTokenBalanceBnb)), React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1168\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1169\n        },\n        __self: this\n      }, \"Enjin Coin (ENJ)\"), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1170\n        },\n        __self: this\n      }, this.state.enjTokenBalance), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1171\n        },\n        __self: this\n      }, this.state.ethTokenBalanceBnb)), React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1173\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1174\n        },\n        __self: this\n      }, \"Oasis Network (ROSE)\"), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1175\n        },\n        __self: this\n      }, this.state.roseTokenBalance), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1176\n        },\n        __self: this\n      }, this.state.roseTokenBalanceBnb)))))))))));\n    }\n\n    let buttonSwitch;\n\n    if (this.state.chainId == \"56\" && this.state.connected) {\n      buttonSwitch = React.createElement(Button, {\n        style: {\n          position: \"absolute\",\n          top: \"60px\",\n          right: \"20px\"\n        },\n        onClick: () => this.handleNetworkSwitch(\"bscTestnet\"),\n        color: \"orange\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1194\n        },\n        __self: this\n      }, \"Change to Testnet\");\n    } else if (this.state.connected) {\n      buttonSwitch = React.createElement(Button, {\n        style: {\n          position: \"absolute\",\n          top: \"30px\",\n          right: \"20px\"\n        },\n        onClick: () => this.handleNetworkSwitch(\"bsc\"),\n        color: \"orange\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1196\n        },\n        __self: this\n      }, \"Change to Mainnet\");\n    }\n\n    let mainnet;\n\n    if (this.state.chainId != \"97\") {\n      mainnet = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1202\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        divided: \"vertically\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1203\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        columns: 2,\n        style: {\n          margin: \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1204\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1205\n        },\n        __self: this\n      }, React.createElement(Card.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1207\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          width: \"900px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1208\n        },\n        __self: this\n      }, React.createElement(Card.Content, {\n        style: {\n          background: \"#406ccd\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1209\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        style: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1210\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          color: \"#C0C0C0\",\n          \"font-weight\": \"bold\",\n          \"text-align\": \"right\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1211\n        },\n        __self: this\n      }, \"APY: XX%\"), \"Top 10 Tokens\"), React.createElement(Card.Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1214\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1215\n        },\n        __self: this\n      }, \"Rate: In return of investing 1 BNB you will receive 1 Top10 Token.\"), React.createElement(Form, {\n        onSubmit: this.investDeFiMainnet,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1217\n        },\n        __self: this\n      }, React.createElement(Input, {\n        style: {\n          width: \"300px\",\n          padding: 3\n        },\n        required: true,\n        type: \"text\",\n        placeholder: \"BNB amount to create\",\n        name: \"defiToMintMainnet\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1218\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"green\",\n        type: \"submit\",\n        style: {\n          margin: \"20px\",\n          width: \"150px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1219\n        },\n        __self: this\n      }, \"Create\")), React.createElement(Form, {\n        onSubmit: this.withdrawDeFiMainnet,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1222\n        },\n        __self: this\n      }, React.createElement(Input, {\n        style: {\n          width: \"300px\",\n          padding: 3\n        },\n        required: true,\n        type: \"text\",\n        placeholder: \"TOP15 amount to redeem\",\n        name: \"withdrawValueDefi\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1223\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"green\",\n        style: {\n          margin: \"20px\",\n          width: \"150px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1224\n        },\n        __self: this\n      }, \"Redeem\")), React.createElement(Table, {\n        role: \"grid\",\n        style: {\n          \"margin-left\": \"auto\",\n          \"margin-right\": \"auto\"\n        },\n        basic: \"very\",\n        celled: true,\n        collapsing: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1227\n        },\n        __self: this\n      }, React.createElement(Table.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1228\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1229\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        style: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1230\n        },\n        __self: this\n      }, \"Token\"), React.createElement(Table.HeaderCell, {\n        style: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1231\n        },\n        __self: this\n      }, \"Balance\"), React.createElement(Table.HeaderCell, {\n        style: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1232\n        },\n        __self: this\n      }, \"Balance in BUSD\"))), React.createElement(Table.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1236\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1237\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1238\n        },\n        __self: this\n      }, \"Top10 Token\"), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1239\n        },\n        __self: this\n      }, this.state.defiTokenBalance), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1240\n        },\n        __self: this\n      }, \"-\")), React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1242\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1243\n        },\n        __self: this\n      }, \"Bitcoin (BTC)\"), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1244\n        },\n        __self: this\n      }, this.state.btcTokenBalance), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1245\n        },\n        __self: this\n      }, this.state.btcTokenBalanceBnb)), React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1247\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1248\n        },\n        __self: this\n      }, \"Ethereum (ETH)\"), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1249\n        },\n        __self: this\n      }, this.state.ethTokenBalance), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1250\n        },\n        __self: this\n      }, this.state.ethTokenBalanceBnb)), React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1252\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1253\n        },\n        __self: this\n      }, \"Shiba Ibu (SHIB)\"), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1254\n        },\n        __self: this\n      }, this.state.shibaTokenBalance), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1255\n        },\n        __self: this\n      }, this.state.shibaTokenBalanceBnb)), React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1257\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1258\n        },\n        __self: this\n      }, \"Ripple (XRP)\"), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1259\n        },\n        __self: this\n      }, this.state.xrpTokenBalance), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1260\n        },\n        __self: this\n      }, this.state.xrpTokenBalanceBnb)), React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1262\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1263\n        },\n        __self: this\n      }, \"Litecoin (LTC)\"), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1264\n        },\n        __self: this\n      }, this.state.ltcTokenBalance), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1265\n        },\n        __self: this\n      }, this.state.ltcTokenBalanceBnb)), React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1267\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1268\n        },\n        __self: this\n      }, \"Dai (DAI)\"), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1269\n        },\n        __self: this\n      }, this.state.daiTokenBalance), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1270\n        },\n        __self: this\n      }, this.state.daiTokenBalanceBnb)), React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1272\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1273\n        },\n        __self: this\n      }, \"Maker (MKR)\"), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1274\n        },\n        __self: this\n      }, this.state.makerTokenBalance), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1275\n        },\n        __self: this\n      }, this.state.makerTokenBalanceBnb)), React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1277\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1278\n        },\n        __self: this\n      }, \"Chainlink (LINK)\"), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1279\n        },\n        __self: this\n      }, this.state.linkTokenBalance), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1280\n        },\n        __self: this\n      }, this.state.linkTokenBalanceBnb)), React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1282\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1283\n        },\n        __self: this\n      }, \"Uniswap (UNI)\"), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1284\n        },\n        __self: this\n      }, this.state.uniTokenBalance), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1285\n        },\n        __self: this\n      }, this.state.uniTokenBalanceBnb)), React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1287\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1288\n        },\n        __self: this\n      }, \"Aave (AAVE)\"), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1289\n        },\n        __self: this\n      }, this.state.aaveTokenBalance), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1290\n        },\n        __self: this\n      }, this.state.aaveTokenBalanceBnb))))))))), React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1303\n        },\n        __self: this\n      }, React.createElement(Card.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1304\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          width: \"900px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1305\n        },\n        __self: this\n      }, React.createElement(Card.Content, {\n        style: {\n          background: \"#406ccd\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1306\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        style: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1307\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          color: \"#C0C0C0\",\n          \"font-weight\": \"bold\",\n          \"text-align\": \"right\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1308\n        },\n        __self: this\n      }, \"APY: YY%\"), \"Top 5 Metaverse Tokens\"), React.createElement(Card.Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1311\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1312\n        },\n        __self: this\n      }, \"Rate: In return of investing 1 BNB you will receive 1 META Token.\"), React.createElement(Form, {\n        onSubmit: this.investNFTMainnet,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1314\n        },\n        __self: this\n      }, React.createElement(Input, {\n        style: {\n          width: \"300px\",\n          padding: 3\n        },\n        required: true,\n        type: \"text\",\n        placeholder: \"BNB amount to create\",\n        name: \"nftToMintMainnet\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1315\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"green\",\n        type: \"submit\",\n        style: {\n          margin: \"20px\",\n          width: \"150px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1316\n        },\n        __self: this\n      }, \"Create\")), React.createElement(Form, {\n        onSubmit: this.withdrawNFTMainnet,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1319\n        },\n        __self: this\n      }, React.createElement(Input, {\n        style: {\n          width: \"300px\",\n          padding: 3\n        },\n        required: true,\n        type: \"text\",\n        placeholder: \"META amount to redeem\",\n        name: \"withdrawValueNFT\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1320\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"green\",\n        style: {\n          margin: \"20px\",\n          width: \"150px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1321\n        },\n        __self: this\n      }, \"Redeem\")), React.createElement(Table, {\n        style: {\n          \"margin-left\": \"auto\",\n          \"margin-right\": \"auto\"\n        },\n        basic: \"very\",\n        celled: true,\n        collapsing: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1324\n        },\n        __self: this\n      }, React.createElement(Table.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1325\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1326\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        style: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1327\n        },\n        __self: this\n      }, \"Token\"), React.createElement(Table.HeaderCell, {\n        style: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1328\n        },\n        __self: this\n      }, \"Balance\"), React.createElement(Table.HeaderCell, {\n        style: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1329\n        },\n        __self: this\n      }, \"Balance in BUSD\"))), React.createElement(Table.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1333\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1334\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1335\n        },\n        __self: this\n      }, \"Metaverse Token\"), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1336\n        },\n        __self: this\n      }, this.state.nftTokenBalance), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1337\n        },\n        __self: this\n      }, \"-\")), React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1339\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1340\n        },\n        __self: this\n      }, \"Axie Infinity (AXS)\"), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1341\n        },\n        __self: this\n      }, this.state.axsTokenBalance), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1342\n        },\n        __self: this\n      }, this.state.axsTokenBalanceBnb)), React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1344\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1345\n        },\n        __self: this\n      }, \"Radio Caca (RACA)\"), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1346\n        },\n        __self: this\n      }, this.state.racaTokenBalance), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1347\n        },\n        __self: this\n      }, this.state.racaTokenBalanceBnb)), React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1349\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1350\n        },\n        __self: this\n      }, \"MOBOX (MBOX)\"), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1351\n        },\n        __self: this\n      }, this.state.mboxTokenBalance), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1352\n        },\n        __self: this\n      }, this.state.mboxTokenBalanceBnb)), React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1354\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1355\n        },\n        __self: this\n      }, \"Merit Circle (MC)\"), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1356\n        },\n        __self: this\n      }, this.state.mcTokenBalance), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1357\n        },\n        __self: this\n      }, \"-\")), React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1359\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1360\n        },\n        __self: this\n      }, \"MyNeighborAlice (ALICE)\"), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1361\n        },\n        __self: this\n      }, this.state.aliceTokenBalance), React.createElement(Table.Cell, {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1362\n        },\n        __self: this\n      }, this.state.aliceTokenBalanceBnb))))))))))));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1380\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1381\n      },\n      __self: this\n    }, React.createElement(Message, {\n      negative: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1382\n      },\n      __self: this\n    }, React.createElement(Message.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1383\n      },\n      __self: this\n    }, \"The project is in the alpha stage, proceed at your own risk.\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1386\n      },\n      __self: this\n    }), React.createElement(Image, {\n      src: velvet,\n      size: \"medium\",\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1388\n      },\n      __self: this\n    }), button, buttonSwitch, mainnet, testnet);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/navinalang/prototype-mainnet-testnet/src/App.js"],"names":["React","Component","IndexSwap","IndexToken","NFTSwap","IndexSwap2","IndexToken2","NFTSwap2","IERC","pancakeSwapRouter","detectEthereumProvider","Web3","Grid","Button","Card","Form","Input","Image","Message","Table","velvet","swal","ReactGA","axios","require","networks","bscTestnet","chainId","Number","toString","chainName","nativeCurrency","name","symbol","decimals","rpcUrls","blockExplorerUrls","bsc","App","constructor","props","handleNetworkSwitch","networkName","changeNetwork","handleInputChange","event","target","value","type","checked","setState","connectWallet","window","ethereum","web3","enable","console","log","connected","alert","loadBlockchainData","location","reload","investNFTMainnet","v","state","nftToMintMainnet","valueInWei","utils","toWei","NFTPortfolioContract","methods","resp","investInFundNFT","send","from","account","once","receipt","catch","err","status","calcTokenBalancesNFTMainnet","investDeFiMainnet","defiToMintMainnet","SwapContract","investInFundDefi","calcTokenBalancesDeFiMainnet","approveNFTTokensMainnet","contractAddress","aXSTokenConntract","eth","Contract","abi","approve","rACATokenConntract","mBOXTokenConntract","mCTokenConntract","aLICETokenConntract","approveDeFiTokensMainnet","BTCTokenConntract","ETHTokenConntract","SHIBATokenConntract","XRPTokenConntract","LTCTokenConntract","DAITokenConntract","MAKERTokenConntract","LINKTokenConntract","UNITokenConntract","AAVETokenConntract","withdrawDeFiMainnet","vault","withdrawAmt","withdrawValueDefi","withdrawAmountInWei","DeFiTokenContract","amount","sAmount","withdrawFromFundTOPTokens","withdrawNFTMainnet","withdrawValueNFT","NFTTokenContract","withdrawFromFundNFT","getExchangeRateMainnet","amountIn","address","pancakeRouter","path","er","getAmountsOut","call","defiTokenBalanceRes","balanceOf","defiTokenBalance","fromWei","btcTokenBalanceRes","btcBalance","helperBtc","btcTokenBalanceBnb","btcTokenBalance","ethTokenBalanceRes","ethBalance","helperEth","ethTokenBalanceBnb","ethTokenBalance","shibaTokenBalanceRes","shibaBalance","helperShib","shibaTokenBalanceBnb","shibaTokenBalance","xrpTokenBalanceRes","xrpBalance","helperXrp","xrpTokenBalanceBnb","xrpTokenBalance","ltcTokenBalanceRes","ltcBalance","helperLtc","ltcTokenBalanceBnb","ltcTokenBalance","daiTokenBalanceRes","daiBalance","helperDai","daiTokenBalanceBnb","daiTokenBalance","makerTokenBalanceRes","makerBalance","helperMaker","makerTokenBalanceBnb","makerTokenBalance","linkTokenBalanceRes","linkBalance","helperLink","linkTokenBalanceBnb","linkTokenBalance","uniTokenBalanceRes","uniBalance","helperUni","uniTokenBalanceBnb","uniTokenBalance","aaveTokenBalanceRes","aaveBalance","helperAave","aaveTokenBalanceBnb","aaveTokenBalance","nftTokenBalanceRes","nftTokenBalance","axsTokenBalanceRes","axsBalance","helperAxs","axsTokenBalanceBnb","axsTokenBalance","racaTokenBalanceRes","racaBalance","helperRaca","racaTokenBalanceBnb","racaTokenBalance","mboxTokenBalanceRes","mboxBalance","helperMbox","mboxTokenBalanceBnb","mboxTokenBalance","mcTokenBalanceRes","mcBalance","mcTokenBalanceBnb","mcTokenBalance","aliceTokenBalanceRes","aliceBalance","helperAlice","aliceTokenBalanceBnb","aliceTokenBalance","investNFT","nftToMint","NFTPortfolioContract2","calcTokenNFTBalances","investDeFi","defiToMint","SwapContract2","calcTokenDeFiBalances","approveNFTTokens","mANATokenConntract","sANDTokenConntract","tHETATokenConntract","fLOWTokenConntract","xTZTokenConntract","gALATokenConntract","cHZTokenConntract","eNJTokenConntract","rOSETokenConntract","approveDeFiTokens","LUNATokenConntract","STETHTokenConntract","withdrawDeFi","defiBalance","DeFiTokenContract2","percentage","percentageFinal","Math","round","withdrawNFT","nftBalance","NFTTokenContract2","getExchangeRate","lunaTokenBalanceRes","lunaBalance","helperLuna","lunaTokenBalanceBnb","lunaTokenBalance","stethTokenBalanceRes","stethBalance","helperSteth","stethTokenBalanceBnb","stethTokenBalance","manaTokenBalanceRes","manaBalance","helperMana","manaTokenBalanceBnb","manaTokenBalance","sandTokenBalanceRes","sandBalance","helperSand","sandTokenBalanceBnb","sandTokenBalance","thetaTokenBalanceRes","thetaBalance","helperTheate","thetaTokenBalanceBnb","thetaTokenBalance","flowTokenBalanceRes","flowalance","helperFlow","flowTokenBalanceBnb","flowTokenBalance","xtzTokenBalanceRes","xtzBalance","helperXtz","xtzTokenBalanceBnb","xtzTokenBalance","galaTokenBalanceRes","galaBalance","helperGala","galaTokenBalanceBnb","galaTokenBalance","chzTokenBalanceRes","chzBalance","helperChz","chzTokenBalanceBnb","chzTokenBalance","enjTokenBalanceRes","enjBalance","helperEnj","enjTokenBalanceBnb","enjTokenBalance","roseTokenBalanceRes","roseBalance","helperRose","roseTokenBalanceBnb","roseTokenBalance","rate","componentDidMount","loadWeb3","chainIdDec","getChainId","provider","accounts","getAccounts","Error","request","method","params","render","addEventListener","on","networkId","warn","providers","HttpProvider","button","position","top","right","metamask","color","testnet","margin","width","background","padding","buttonSwitch","mainnet"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\n// Mainnet\nimport IndexSwap from \"./abis/IndexSwap.json\";\nimport IndexToken from \"./abis/indexToken.json\";\nimport NFTSwap from \"./abis/NFTPortfolio.json\";\n\n// Testnet\nimport IndexSwap2 from \"./abis2/IndexSwap.json\";\nimport IndexToken2 from \"./abis2/indexToken.json\";\nimport NFTSwap2 from \"./abis2/NFTPortfolio.json\";\n\nimport IERC from \"./abis/IERC20.json\";\nimport pancakeSwapRouter from \"./abis/IPancakeRouter02.json\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport Web3 from 'web3';\nimport { Grid, Button, Card, Form, Input, Image, Message, Table } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport velvet from \"./velvet.png\";\nimport metamask from \"./metamask-fox.svg\";\nimport swal from 'sweetalert';\nimport ReactGA from 'react-ga';\n\nimport \"./App.css\";\n\nconst axios = require('axios');\n\nconst networks = {\n  bscTestnet: {\n    chainId: `0x${Number(97).toString(16)}`,\n    chainName: \"BSC Testnet\",\n    nativeCurrency: {\n      name: \"Binance Chain Native Token\",\n      symbol: \"BNB\",\n      decimals: 18\n    },\n    rpcUrls: [\n      \"https://data-seed-prebsc-1-s1.binance.org:8545/\",\n      \"https://data-seed-prebsc-2-s1.binance.org:8545/\",\n      \"https://data-seed-prebsc-1-s2.binance.org:8545/\",\n      \"https://data-seed-prebsc-2-s2.binance.org:8545/\",\n      \"https://data-seed-prebsc-1-s3.binance.org:8545/\",\n      \"https://data-seed-prebsc-2-s3.binance.org:8545/\"\n    ],\n    blockExplorerUrls: [\"https://polygonscan.com/\"]\n  },\n  bsc: {\n    chainId: `0x${Number(56).toString(16)}`,\n    chainName: \"Binance Smart Chain Mainnet\",\n    nativeCurrency: {\n      name: \"Binance Chain Native Token\",\n      symbol: \"BNB\",\n      decimals: 18\n    },\n    rpcUrls: [\n      \"https://bsc-dataseed1.binance.org\",\n      \"https://bsc-dataseed2.binance.org\",\n      \"https://bsc-dataseed3.binance.org\",\n      \"https://bsc-dataseed4.binance.org\",\n      \"https://bsc-dataseed1.defibit.io\",\n      \"https://bsc-dataseed2.defibit.io\",\n      \"https://bsc-dataseed3.defibit.io\",\n      \"https://bsc-dataseed4.defibit.io\",\n      \"https://bsc-dataseed1.ninicoin.io\",\n      \"https://bsc-dataseed2.ninicoin.io\",\n      \"https://bsc-dataseed3.ninicoin.io\",\n      \"https://bsc-dataseed4.ninicoin.io\",\n      \"wss://bsc-ws-node.nariox.org\"\n    ],\n    blockExplorerUrls: [\"https://testnet.bscscan.com/\"]\n  }\n};\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      \n      account: '',\n      SwapContract: null,\n      NFTTokenContract: null,\n      DeFiTokenContract: null,\n      NFTPortfolioContract: null,\n\n      SwapContract2: null,\n      NFTTokenContract2: null,\n      DeFiTokenContract2: null,\n      NFTPortfolioContract2: null,\n\n      address: \"\",\n      connected: false,\n      \n      chainId: \"\",\n\n      defiToMintMainnet: 0,\n      nftToMintMainnet: 0,\n\n      withdrawValueDefi: 0,\n      withdrawValueNFT: 0,\n\n      nftTokenBalance: 0,\n      defiTokenBalance: 0,\n\n      btcTokenBalance: 0,\n      ethTokenBalance: 0,\n      shibaTokenBalance: 0,\n      xrpTokenBalance: 0,\n      ltcTokenBalance: 0,\n      daiTokenBalance: 0,\n      makerTokenBalance: 0,\n      linkTokenBalance: 0,\n      uniTokenBalance: 0,\n      aaveTokenBalance: 0,\n\n      btcTokenBalanceBnb: 0,\n      ethTokenBalanceBnb: 0,\n      shibaTokenBalanceBnb: 0,\n      xrpTokenBalanceBnb: 0,\n      ltcTokenBalanceBnb: 0,\n      daiTokenBalanceBnb: 0,\n      makerTokenBalanceBnb: 0,\n      linkTokenBalanceBnb: 0,\n      uniTokenBalanceBnb: 0,\n      aaveTokenBalanceBnb: 0,\n\n      axsTokenBalance: 0,\n      racaTokenBalance: 0,\n      mboxTokenBalance: 0,\n      mcTokenBalance: 0,\n      aliceTokenBalance: 0,\n      xtzTokenBalance: 0,\n      galaTokenBalance: 0,\n      chzTokenBalance: 0,\n      enjTokenBalance: 0,\n      roseTokenBalance: 0,\n\n      axsTokenBalanceBnb: 0,\n      racaTokenBalanceBnb: 0,\n      mboxTokenBalanceBnb: 0,\n      mcTokenBalanceBnb: 0,\n      aliceTokenBalanceBnb: 0,\n      xtzTokenBalanceBnb: 0,\n      galaTokenBalanceBnb: 0,\n      chzTokenBalanceBnb: 0,\n      enjTokenBalanceBnb: 0,\n      roseTokenBalanceBnb: 0,\n\n      lunaTokenBalance: 0,\n      stethTokenBalance: 0,\n\n      btcTokenBalanceBnb: 0,\n      lunaTokenBalanceBnb: 0,\n\n      sandTokenBalance: 0,\n      thetaTokenBalance: 0,\n      flowTokenBalance: 0,\n      xtzTokenBalance: 0,\n      galaTokenBalance: 0,\n      chzTokenBalance: 0,\n      enjTokenBalance: 0,\n      roseTokenBalance: 0,\n\n      manaTokenBalance: 0,\n      sandTokenBalance: 0,\n      thetaTokenBalance: 0,\n      flowTokenBalance: 0,\n      xtzTokenBalance: 0,\n      galaTokenBalance: 0,\n      chzTokenBalance: 0,\n      enjTokenBalance: 0,\n      roseTokenBalance: 0,\n\n      manaTokenBalanceBnb: 0,\n      sandTokenBalanceBnb: 0,\n      thetaTokenBalanceBnb: 0,\n      flowTokenBalanceBnb: 0,\n      xtzTokenBalanceBnb: 0,\n      galaTokenBalanceBnb: 0,\n      chzTokenBalanceBnb: 0,\n      enjTokenBalanceBnb: 0,\n      roseTokenBalanceBnb: 0,\n\n      rate: 0\n    }\n  }\n\n  async componentDidMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n    //await this.getRate();\n    //swal(\"The project is in the alpha stage, proceed at your own risk\");\n\n    const web3 = window.web3;\n    const chainIdDec = await web3.eth.getChainId();\n\n    this.setState({chainId: chainIdDec})\n   \n    if(chainIdDec == \"56\") {\n      await this.calcTokenBalancesDeFiMainnet();\n      await this.calcTokenBalancesNFTMainnet();\n    } else if(chainIdDec == \"97\") {\n      await this.calcTokenDeFiBalances();\n      await this.calcTokenNFTBalances();\n    }  \n\n    this.setState({chainId: chainIdDec});\n  }\n\n  // first up is to detect ethereum provider\n  async loadWeb3() {\n    const provider = await detectEthereumProvider();\n\n    // modern browsers\n    if (provider) {\n      console.log('MetaMask is connected');\n\n      window.web3 = new Web3(provider);\n    } else {\n      console.log('No ethereum wallet detected');\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const chainIdDec = await web3.eth.getChainId();\n    const accounts = await window.web3.eth.getAccounts();\n    this.setState({account: accounts[0]});\n    if(accounts[0]) {\n      this.setState({ connected: true })\n    }\n    if(chainIdDec == \"56\") {\n      this.setState({ account: accounts[0]}) \n      const SwapContract = new web3.eth.Contract(IndexSwap.abi, \"0x380d2b6742AAD7ae97f199a109c1F81A34E1cb86\");\n      const NFTPortfolioContract = new web3.eth.Contract(NFTSwap.abi, \"0x40A367c5320440a1aa78aCBC5af0A017Ed1F3772\"); \n      const NFTTokenContract = new web3.eth.Contract(IndexToken.abi, \"0x16dBB234A9a595967DdC2ea1bb53379752f09Ad4\"); \n      const DeFiTokenContract = new web3.eth.Contract(IndexToken.abi, \"0x6E49456f284e3da7f1515eEE120E2706cab69fD5\");\n      this.setState({ SwapContract, DeFiTokenContract, NFTPortfolioContract, NFTTokenContract});\n    } else if (chainIdDec == \"97\") {\n      const SwapContract2 = new web3.eth.Contract(IndexSwap2.abi, \"0xC773887b60191926d9995DB3072D212478ce235A\");\n      const NFTPortfolioContract2 = new web3.eth.Contract(NFTSwap2.abi, \"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\");\n      const NFTTokenContract2 = new web3.eth.Contract(IndexToken2.abi, \"0x817ea2A5Fd281d15CA70B05abB5E094356C42996\");\n      const DeFiTokenContract2 = new web3.eth.Contract(IndexToken2.abi, \"0xF70538622598232a95B1EC1914Fc878d28EBAE68\");\n      this.setState({ SwapContract2, DeFiTokenContract2, NFTPortfolioContract2, NFTTokenContract2});\n    }\n  }\n\n    async changeNetwork (networkName) {\n      try {\n        if (!window.ethereum) throw new Error(\"No crypto wallet found\");\n        await window.ethereum.request({\n          method: \"wallet_addEthereumChain\",\n          params: [\n            {\n              ...networks[networkName]\n            }\n          ]\n        });\n      } catch (err) {\n        console.log(err);\n      }\n      window.location.reload();\n      const web3 = window.web3;\n      const chainIdDec = await web3.eth.getChainId();\n      this.setState({chainId: chainIdDec});\n      await this.loadBlockchainData();\n\n      if(chainIdDec == \"97\") {\n        await this.calcTokenBalancesDeFiMainnet();\n        await this.calcTokenBalancesNFTMainnet();\n      } else {\n        await this.calcTokenDeFiBalances();\n        await this.calcTokenNFTBalances();\n      }\n      \n    };\n\n    handleNetworkSwitch = async (networkName) => {\n      await this.changeNetwork(networkName);\n    };\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    })\n  }\n\n  connectWallet = async () => {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n      console.log(\"Connected\");\n      this.setState({\n        connected: true\n      })\n\n    } else {\n      alert(\"Metamask not found\");\n    }\n\n    this.loadBlockchainData();\n    window.location.reload();\n  }\n\n  \n\n  investNFTMainnet = async () => {\n    const web3 = new Web3(window.ethereum);\n    const v = this.state.nftToMintMainnet;\n    const valueInWei = web3.utils.toWei(v, 'ether');\n    console.log(this.state.NFTPortfolioContract.methods);\n    \n    const resp = await this.state.NFTPortfolioContract.methods.investInFundNFT().send({ from: this.state.account, value: valueInWei\n    }).once(\"receipt\", (receipt) => {\n      console.log(receipt);\n    })\n      .catch((err) => {\n        console.log(err);\n      });\n    if (resp.status) {\n      swal(\"Investment successfull!\", `You invested ${v} BNB into the portfolio.`, \"success\");\n    } else {\n      swal(\"Investment failed!\");\n    }\n\n    this.calcTokenBalancesNFTMainnet();\n  }\n\n  investDeFiMainnet = async () => {\n    const web3 = new Web3(window.ethereum);    \n    const v = this.state.defiToMintMainnet;\n    const valueInWei = web3.utils.toWei(v, 'ether');\n    \n    const resp = await this.state.SwapContract.methods.investInFundDefi().send({ from: this.state.account, value: valueInWei })\n    .once(\"receipt\", (receipt) => {\n      console.log(receipt);\n\n    })\n      .catch((err) => {\n        console.log(err);\n      });\n\n      if (resp.status) {\n        swal(\"Investment successfull!\", `You invested ${v} BNB into the portfolio.`, \"success\");\n        //window.location.reload();\n      } else {\n        swal(\"Investment failed!\");\n      }\n\n    this.calcTokenBalancesDeFiMainnet();\n\n  }\n\n  approveNFTTokensMainnet = async() => {\n    const web3 = new Web3(window.ethereum);\n    \n    const contractAddress = \"0x40A367c5320440a1aa78aCBC5af0A017Ed1F3772\"; \n\n    const aXSTokenConntract = new web3.eth.Contract(IERC.abi, \"0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0\");\n    await aXSTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\" });\n\n    const rACATokenConntract = new web3.eth.Contract(IERC.abi, \"0x12BB890508c125661E03b09EC06E404bc9289040\");\n    await rACATokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\" });\n\n    const mBOXTokenConntract = new web3.eth.Contract(IERC.abi, \"0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377\");\n    await mBOXTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\" });\n\n    const mCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x949D48EcA67b17269629c7194F4b727d4Ef9E5d6\");\n    await mCTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\" });\n\n    const aLICETokenConntract = new web3.eth.Contract(IERC.abi, \"0xAC51066d7bEC65Dc4589368da368b212745d63E8\");\n    await aLICETokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\" });\n  }\n\n  approveDeFiTokensMainnet = async() => {\n    const web3 = new Web3(window.ethereum);\n    \n    const contractAddress = \"0x380d2b6742AAD7ae97f199a109c1F81A34E1cb86\"; \n\n    const BTCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c\");\n    BTCTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\" });\n\n    const ETHTokenConntract = new web3.eth.Contract(IERC.abi, \"0x2170Ed0880ac9A755fd29B2688956BD959F933F8\"); \n    ETHTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\" });\n\n    const SHIBATokenConntract = new web3.eth.Contract(IERC.abi, \"0x2859e4544C4bB03966803b044A93563Bd2D0DD4D\");\n    SHIBATokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\" });\n\n    const XRPTokenConntract = new web3.eth.Contract(IERC.abi, \"0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE\");\n    XRPTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\" });\n\n    const LTCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x4338665CBB7B2485A8855A139b75D5e34AB0DB94\");\n    LTCTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\" });\n\n    const DAITokenConntract = new web3.eth.Contract(IERC.abi, \"0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3\");\n    DAITokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\" });\n\n    const MAKERTokenConntract = new web3.eth.Contract(IERC.abi, \"0x5f0Da599BB2ccCfcf6Fdfd7D81743B6020864350\");\n    MAKERTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\" });\n\n    const LINKTokenConntract = new web3.eth.Contract(IERC.abi, \"0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD\");\n    LINKTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\" });\n\n    const UNITokenConntract = new web3.eth.Contract(IERC.abi, \"0xBf5140A22578168FD562DCcF235E5D43A02ce9B1\");\n    UNITokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\" });\n\n    const AAVETokenConntract = new web3.eth.Contract(IERC.abi, \"0xfb6115445Bff7b52FeB98650C87f44907E58f802\");\n    AAVETokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\" });\n  }\n\n  withdrawDeFiMainnet = async () => {\n    const vault = \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\";\n\n    const web3 = new Web3(window.ethereum);\n\n    var withdrawAmt = this.state.withdrawValueDefi;\n    var withdrawAmountInWei = web3.utils.toWei(withdrawAmt, 'ether');\n\n    await this.state.DeFiTokenContract.methods.approve(\"0x380d2b6742AAD7ae97f199a109c1F81A34E1cb86\", \"7787357773333787487837458347754874574837458374\")\n    .send({from: this.state.account});\n\n\n    var amount = withdrawAmountInWei / 10;\n    var sAmount = amount.toString();\n\n    await this.state.SwapContract.methods.withdrawFromFundTOPTokens(sAmount\n    ).send({\n      from: this.state.account, value: 0\n    }).once(\"receipt\", (receipt) => {\n      swal(\"Withdrawal successfull!\", \"The withdrawal was successful!\", \"success\");\n      console.log(receipt);\n    })\n      .catch((err) => {\n        console.log(err);\n      });\n\n      this.calcTokenBalancesDeFiMainnet();\n  }\n\n  withdrawNFTMainnet = async () => {\n      const vault = \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\";\n  \n      const web3 = new Web3(window.ethereum);\n  \n      console.log(this.state.DeFiTokenContract);\n  \n      var withdrawAmt = this.state.withdrawValueNFT;\n      var withdrawAmountInWei = web3.utils.toWei(withdrawAmt, 'ether');\n  \n  \n      await this.state.NFTTokenContract.methods.approve(\"0x40A367c5320440a1aa78aCBC5af0A017Ed1F3772\", \"7787357773333787487837458347754874574837458374\")\n      .send({from: this.state.account});\n  \n      var amount = withdrawAmountInWei / 10;\n      var sAmount = amount.toString();\n  \n      await this.state.NFTPortfolioContract.methods.withdrawFromFundNFT(sAmount\n      ).send({\n        from: this.state.account, value: 0\n      }).once(\"receipt\", (receipt) => {\n        swal(\"Withdrawal successfull!\", \"The withdrawal was successful!\", \"success\");\n        console.log(receipt);\n      })\n        .catch((err) => {\n          console.log(err);\n        });\n\n        this.calcTokenBalancesNFTMainnet();\n  }\n\n  getExchangeRateMainnet = async (amountIn, address) => {\n    const web3 = window.web3;\n    const pancakeRouter = new web3.eth.Contract(pancakeSwapRouter.abi, \"0x10ED43C718714eb63d5aA57B78B54704E256024E\");\n\n    var path = [];\n    path[0] = address;\n    path[1] = \"0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56\";\n\n    const er = await pancakeRouter.methods.getAmountsOut(amountIn, path).call();\n    return er[1];\n  }\n\n  calcTokenBalancesDeFiMainnet = async () => {\n    const web3 = window.web3;\n\n    const defiTokenBalanceRes = await this.state.DeFiTokenContract.methods.balanceOf(this.state.account).call();\n    const defiTokenBalance = web3.utils.fromWei(defiTokenBalanceRes, \"ether\");\n\n    // DeFi\n    const btcTokenBalanceRes = await this.state.SwapContract.methods.btcBalance(this.state.account).call();\n    const helperBtc = await this.getExchangeRateMainnet(btcTokenBalanceRes, \"0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c\");\n    const btcTokenBalanceBnb = web3.utils.fromWei(helperBtc, \"ether\");\n    const btcTokenBalance = web3.utils.fromWei(btcTokenBalanceRes, \"ether\");\n\n    const ethTokenBalanceRes = await this.state.SwapContract.methods.ethBalance(this.state.account).call();\n    const helperEth = await this.getExchangeRateMainnet(ethTokenBalanceRes, \"0x2170Ed0880ac9A755fd29B2688956BD959F933F8\");\n    const ethTokenBalanceBnb = web3.utils.fromWei(helperEth, \"ether\");\n    const ethTokenBalance = web3.utils.fromWei(ethTokenBalanceRes, \"ether\");\n\n    const shibaTokenBalanceRes = await this.state.SwapContract.methods.shibaBalance(this.state.account).call();\n    const helperShib = await this.getExchangeRateMainnet(shibaTokenBalanceRes, \"0x2859e4544C4bB03966803b044A93563Bd2D0DD4D\");\n    const shibaTokenBalanceBnb = web3.utils.fromWei(helperShib, \"ether\");\n    const shibaTokenBalance = web3.utils.fromWei(shibaTokenBalanceRes, \"ether\");\n\n    const xrpTokenBalanceRes = await this.state.SwapContract.methods.xrpBalance(this.state.account).call();\n    const helperXrp = await this.getExchangeRateMainnet(xrpTokenBalanceRes, \"0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE\");\n    const xrpTokenBalanceBnb = web3.utils.fromWei(helperXrp, \"ether\");\n    const xrpTokenBalance = web3.utils.fromWei(xrpTokenBalanceRes, \"ether\");\n\n    const ltcTokenBalanceRes = await this.state.SwapContract.methods.ltcBalance(this.state.account).call();\n    const helperLtc = await this.getExchangeRateMainnet(ltcTokenBalanceRes, \"0x4338665CBB7B2485A8855A139b75D5e34AB0DB94\");\n    const ltcTokenBalanceBnb = web3.utils.fromWei(helperLtc, \"ether\");\n    const ltcTokenBalance = web3.utils.fromWei(ltcTokenBalanceRes, \"ether\");\n\n    const daiTokenBalanceRes = await this.state.SwapContract.methods.daiBalance(this.state.account).call();\n    const helperDai = await this.getExchangeRateMainnet(daiTokenBalanceRes, \"0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3\");\n    const daiTokenBalanceBnb = web3.utils.fromWei(helperDai, \"ether\");\n    const daiTokenBalance = web3.utils.fromWei(daiTokenBalanceRes, \"ether\");\n\n    const makerTokenBalanceRes = await this.state.SwapContract.methods.makerBalance(this.state.account).call();\n    const helperMaker = await this.getExchangeRateMainnet(makerTokenBalanceRes, \"0x5f0Da599BB2ccCfcf6Fdfd7D81743B6020864350\");\n    const makerTokenBalanceBnb = web3.utils.fromWei(helperMaker, \"ether\");\n    const makerTokenBalance = web3.utils.fromWei(makerTokenBalanceRes, \"ether\");\n\n    const linkTokenBalanceRes = await this.state.SwapContract.methods.linkBalance(this.state.account).call();\n    const helperLink = await this.getExchangeRateMainnet(linkTokenBalanceRes, \"0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD\");\n    const linkTokenBalanceBnb = web3.utils.fromWei(helperLink, \"ether\");\n    const linkTokenBalance = web3.utils.fromWei(linkTokenBalanceRes, \"ether\");\n\n    const uniTokenBalanceRes = await this.state.SwapContract.methods.uniBalance(this.state.account).call();\n    const helperUni = await this.getExchangeRateMainnet(uniTokenBalanceRes, \"0xBf5140A22578168FD562DCcF235E5D43A02ce9B1\");\n    const uniTokenBalanceBnb = web3.utils.fromWei(helperUni, \"ether\");\n    const uniTokenBalance = web3.utils.fromWei(uniTokenBalanceRes, \"ether\");\n\n\n    const aaveTokenBalanceRes = await this.state.SwapContract.methods.aaveBalance(this.state.account).call();\n    const helperAave = await this.getExchangeRateMainnet(aaveTokenBalanceRes, \"0xfb6115445Bff7b52FeB98650C87f44907E58f802\");\n    const aaveTokenBalanceBnb = web3.utils.fromWei(helperAave, \"ether\");\n    const aaveTokenBalance = web3.utils.fromWei(aaveTokenBalanceRes, \"ether\");\n\n    this.setState({\n      defiTokenBalance,\n      btcTokenBalance, ethTokenBalance, shibaTokenBalance, xrpTokenBalance, ltcTokenBalance,\n      btcTokenBalanceBnb, ethTokenBalanceBnb, shibaTokenBalanceBnb, xrpTokenBalanceBnb, ltcTokenBalanceBnb,\n      daiTokenBalance, makerTokenBalance, linkTokenBalance, uniTokenBalance, aaveTokenBalance,\n      daiTokenBalanceBnb, makerTokenBalanceBnb, linkTokenBalanceBnb, uniTokenBalanceBnb, aaveTokenBalanceBnb,\n    });\n  }\n\n    calcTokenBalancesNFTMainnet = async () => {\n    // NFT\n\n    const web3 = window.web3;\n\n    const nftTokenBalanceRes = await this.state.NFTTokenContract.methods.balanceOf(this.state.account).call();\n    const nftTokenBalance = web3.utils.fromWei(nftTokenBalanceRes, \"ether\");\n\n    const axsTokenBalanceRes = await this.state.NFTPortfolioContract.methods.axsBalance(this.state.account).call();\n    const helperAxs = await this.getExchangeRateMainnet(axsTokenBalanceRes, \"0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0\");\n    const axsTokenBalanceBnb = web3.utils.fromWei(helperAxs, \"ether\");\n    const axsTokenBalance = web3.utils.fromWei(axsTokenBalanceRes, \"ether\");\n    console.log(\"axs\", axsTokenBalance);\n\n    const racaTokenBalanceRes = await this.state.NFTPortfolioContract.methods.racaBalance(this.state.account).call();\n    const helperRaca = await this.getExchangeRateMainnet(racaTokenBalanceRes, \"0x12BB890508c125661E03b09EC06E404bc9289040\");\n    const racaTokenBalanceBnb = web3.utils.fromWei(helperRaca, \"ether\");\n    const racaTokenBalance = web3.utils.fromWei(racaTokenBalanceRes, \"ether\");\n    console.log(\"raca\", racaTokenBalance);\n\n    const mboxTokenBalanceRes = await this.state.NFTPortfolioContract.methods.mboxBalance(this.state.account).call();\n    const helperMbox = await this.getExchangeRateMainnet(mboxTokenBalanceRes, \"0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377\");\n    const mboxTokenBalanceBnb = web3.utils.fromWei(helperMbox, \"ether\");\n    const mboxTokenBalance = web3.utils.fromWei(mboxTokenBalanceRes, \"ether\");\n    console.log(\"mbox\", mboxTokenBalance);\n\n    const mcTokenBalanceRes = await this.state.NFTPortfolioContract.methods.mcBalance(this.state.account).call();\n    //const helperMc = await this.getExchangeRateMainnet(mcTokenBalanceRes, \"0x949D48EcA67b17269629c7194F4b727d4Ef9E5d6\");\n    const mcTokenBalanceBnb = web3.utils.fromWei(mcTokenBalanceRes, \"ether\");\n    const mcTokenBalance = web3.utils.fromWei(mcTokenBalanceRes, \"ether\");\n    console.log(\"mc\", mcTokenBalance);\n\n    const aliceTokenBalanceRes = await this.state.NFTPortfolioContract.methods.aliceBalance(this.state.account).call();\n    const helperAlice = await this.getExchangeRateMainnet(aliceTokenBalanceRes, \"0xAC51066d7bEC65Dc4589368da368b212745d63E8\");\n    const aliceTokenBalanceBnb = web3.utils.fromWei(helperAlice, \"ether\");\n    const aliceTokenBalance = web3.utils.fromWei(aliceTokenBalanceRes, \"ether\");\n\n    this.setState({\n      nftTokenBalance,\n      axsTokenBalance, racaTokenBalance, mboxTokenBalance, mcTokenBalance, aliceTokenBalance,\n      axsTokenBalanceBnb, racaTokenBalanceBnb, mboxTokenBalanceBnb, mcTokenBalanceBnb, aliceTokenBalanceBnb,\n    });\n  }\n\n  /*getRate = async () => {\n    const rateObj = await this.state.SwapContract.methods.currentRate().call();\n    const rate = rateObj.numerator / rateObj.denominator;\n    this.setState({ rate });\n  }*/\n\n\n  // TESTNET\n\n  investNFT = async () => {\n    const web3 = new Web3(window.ethereum);\n    const v = this.state.nftToMint;\n    const valueInWei = web3.utils.toWei(v, 'ether');\n    \n    const resp = await this.state.NFTPortfolioContract2.methods.investInFundDefi().send({ from: this.state.account, value: valueInWei\n    }).once(\"receipt\", (receipt) => {\n      console.log(receipt);\n    })\n      .catch((err) => {\n        console.log(err);\n      });\n    if (resp.status) {\n      swal(\"Investment successfull!\", `You invested ${v} BNB into the portfolio.`, \"success\");\n    } else {\n      swal(\"Investment failed!\");\n    }\n\n    this.calcTokenNFTBalances();\n  }\n\n  investDeFi = async () => {\n    const web3 = new Web3(window.ethereum);    \n    const v = this.state.defiToMint;\n    const valueInWei = web3.utils.toWei(v, 'ether');\n    \n    const resp = await this.state.SwapContract2.methods.investInFundDefi().send({ from: this.state.account, value: valueInWei })\n    .once(\"receipt\", (receipt) => {\n      console.log(receipt);\n\n    })\n      .catch((err) => {\n        console.log(err);\n      });\n\n      if (resp.status) {\n        swal(\"Investment successfull!\", `You invested ${v} BNB into the portfolio.`, \"success\");\n        //window.location.reload();\n      } else {\n        swal(\"Investment failed!\");\n      }\n\n    this.calcTokenDeFiBalances();\n\n  }\n\n  approveNFTTokens = async() => {\n    const web3 = new Web3(window.ethereum);  \n\n    const aXSTokenConntract = new web3.eth.Contract(IERC.abi, \"0xf34D883EcdE3238B153f38230987a0F4c221a48F\");\n    await aXSTokenConntract.methods.approve(\"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\" });\n\n    const mANATokenConntract = new web3.eth.Contract(IERC.abi, \"0x8bf2dF0Ff8528088475183a68678bd1Cd7691b69\");\n    await mANATokenConntract.methods.approve(\"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\" });\n\n    const sANDTokenConntract = new web3.eth.Contract(IERC.abi, \"0x1631A54AC95Ecb0085dB6b8ACf80c4Cee72AEB06\");\n    await sANDTokenConntract.methods.approve(\"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\" });\n\n    const tHETATokenConntract = new web3.eth.Contract(IERC.abi, \"0x19A5E53eC7B385dbE2E587Ba989eA2AB8F7EaF1e\");\n    await tHETATokenConntract.methods.approve(\"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\" });\n\n    const fLOWTokenConntract = new web3.eth.Contract(IERC.abi, \"0xe5c48084E1974a971Bd5dF4d9B01daCCA86d5567\");\n    await fLOWTokenConntract.methods.approve(\"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\" });\n\n    const xTZTokenConntract = new web3.eth.Contract(IERC.abi, \"0xC5De9d5B0BA5b408a3e9530A1BC310d8F2dCC26a\");\n    await xTZTokenConntract.methods.approve(\"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\" });\n\n    const gALATokenConntract = new web3.eth.Contract(IERC.abi, \"0x4bf1CE8E4c4c86126E57Fa9fc3f1a9631661641c\");\n    await gALATokenConntract.methods.approve(\"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\" });\n\n    const cHZTokenConntract = new web3.eth.Contract(IERC.abi, \"0xdeEC6f0C22970b9b8a47069bE619bfAe646dEe26\");\n    await cHZTokenConntract.methods.approve(\"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\" });\n\n    const eNJTokenConntract = new web3.eth.Contract(IERC.abi, \"0xb08A1959f57b9cC8e5A5F1d329EfD90EE3438F65\");\n    await eNJTokenConntract.methods.approve(\"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\" });\n\n    const rOSETokenConntract = new web3.eth.Contract(IERC.abi, \"0x30c1AC77F4068A063648B549ffF96Ddb9d151325\");\n    await rOSETokenConntract.methods.approve(\"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\" });\n  }\n\n  approveDeFiTokens = async() => {\n    const web3 = new Web3(window.ethereum);  \n    const contractAddress = \"0xC773887b60191926d9995DB3072D212478ce235A\";\n    const vault = \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\";\n\n    const BTCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x4b1851167f74FF108A994872A160f1D6772d474b\");\n    BTCTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: vault });\n\n    const ETHTokenConntract = new web3.eth.Contract(IERC.abi, \"0x8BaBbB98678facC7342735486C851ABD7A0d17Ca\");\n    ETHTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: vault });\n\n    const SHIBATokenConntract = new web3.eth.Contract(IERC.abi, \"0xBf0646Fa5ABbFf6Af50a9C40D5E621835219d384\");\n    SHIBATokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: vault });\n\n    const XRPTokenConntract = new web3.eth.Contract(IERC.abi, \"0xCc00177908830cE1644AEB4aD507Fda3789128Af\");\n    XRPTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: vault });\n\n    const LTCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x2F9fd65E3BB89b68a8e2Abd68Db25F5C348F68Ee\");\n    LTCTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: vault });\n\n    const DAITokenConntract = new web3.eth.Contract(IERC.abi, \"0x8a9424745056Eb399FD19a0EC26A14316684e274\");\n    DAITokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: vault });\n\n    const LUNATokenConntract = new web3.eth.Contract(IERC.abi, \"0x0bBF12a9Ccd7cD0E23dA21eFd3bb16ba807ab069\");\n    LUNATokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: vault });\n\n    const LINKTokenConntract = new web3.eth.Contract(IERC.abi, \"0x8D908A42FD847c80Eeb4498dE43469882436c8FF\");\n    LINKTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: vault });\n\n    const UNITokenConntract = new web3.eth.Contract(IERC.abi, \"0x62955C6cA8Cd74F8773927B880966B7e70aD4567\");\n    UNITokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: vault });\n\n    const STETHTokenConntract = new web3.eth.Contract(IERC.abi, \"0xb7a58582Df45DBa8Ad346c6A51fdb796D64e0898\");\n    STETHTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: vault });\n  }\n\n  withdrawDeFi = async () => {\n    var vault = \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\";\n\n    const web3 = new Web3(window.ethereum);\n\n    var withdrawAmt = this.state.withdrawValueDefi;\n    var withdrawAmountInWei = web3.utils.toWei(withdrawAmt, 'ether');\n\n    const defiBalance = await this.state.DeFiTokenContract2.methods.balanceOf(this.state.account).call();\n    if(defiBalance == 0) {\n      swal(\"Withdrawal amount exceeds balance!\");\n      return;\n    }\n\n    var percentage = (withdrawAmountInWei * 100) / defiBalance ;\n    var percentageFinal = Math.round(percentage);\n    console.log(Math.round(percentage));\n\n    await this.state.DeFiTokenContract2.methods.approve(\"0xC773887b60191926d9995DB3072D212478ce235A\", \"7787357773333787487837458347754874574837458374\")\n    .send({from: this.state.account});\n\n    var amount = withdrawAmountInWei;\n    var sAmount = amount.toString();\n\n    await this.state.SwapContract2.methods.withdrawFromFundTOPTokens(sAmount, percentageFinal\n    ).send({\n      from: this.state.account, value: 0\n    }).once(\"receipt\", (receipt) => {\n      swal(\"Withdrawal successfull!\", \"The withdrawal was successful!\", \"success\");\n      console.log(receipt);\n    })\n      .catch((err) => {\n        console.log(err);\n      });\n\n      this.calcTokenDeFiBalances();\n  }\n\n  withdrawNFT = async () => {\n    var vault = \"0x6056773C28c258425Cf9BC8Ba5f86B8031863164\";\n\n    const web3 = new Web3(window.ethereum);\n\n    var withdrawAmt = this.state.withdrawValueNFT;\n    var withdrawAmountInWei = web3.utils.toWei(withdrawAmt, 'ether');\n\n    const nftBalance = await this.state.NFTTokenContract2.methods.balanceOf(this.state.account).call();\n    if(nftBalance == 0) {\n      swal(\"Withdrawal amount exceeds balance!\");\n      return;\n    }\n\n    var percentage = (withdrawAmountInWei * 100) / nftBalance ;\n    var percentageFinal = Math.round(percentage);\n    console.log(Math.round(percentage));\n  \n    await this.state.NFTTokenContract2.methods.approve(\"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\", \"7787357773333787487837458347754874574837458374\")\n    .send({from: this.state.account});\n\n    var amount = withdrawAmountInWei;\n    var sAmount = amount.toString();\n\n    await this.state.NFTPortfolioContract2.methods.withdrawFromFundNFT(sAmount, percentageFinal\n    ).send({\n      from: this.state.account, value: 0\n    }).once(\"receipt\", (receipt) => {\n      swal(\"Withdrawal successfull!\", \"The withdrawal was successful!\", \"success\");\n      console.log(receipt);\n    })\n      .catch((err) => {\n        console.log(err);\n      });\n\n      this.calcTokenNFTBalances();\n  }\n\n  getExchangeRate = async (amountIn, address) => {\n    const web3 = window.web3;\n    const pancakeRouter = new web3.eth.Contract(pancakeSwapRouter.abi, \"0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3\");\n\n    var path = [];\n    path[0] = address;\n    path[1] = \"0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd\";\n\n    const er = await pancakeRouter.methods.getAmountsOut(amountIn, path).call();\n    return er[1];\n  }\n\n  calcTokenDeFiBalances = async () => {\n    const web3 = window.web3;\n\n    const defiTokenBalanceRes = await this.state.DeFiTokenContract2.methods.balanceOf(this.state.account).call();\n    const defiTokenBalance = web3.utils.fromWei(defiTokenBalanceRes, \"ether\");\n    \n    const btcTokenBalanceRes = await this.state.SwapContract2.methods.btcBalance(this.state.account).call();\n    const helperBtc = await this.getExchangeRate(btcTokenBalanceRes, \"0x4b1851167f74FF108A994872A160f1D6772d474b\");\n    const btcTokenBalanceBnb = web3.utils.fromWei(helperBtc, \"ether\");\n    const btcTokenBalance = web3.utils.fromWei(btcTokenBalanceRes, \"ether\");\n\n    const ethTokenBalanceRes = await this.state.SwapContract2.methods.ethBalance(this.state.account).call();\n    const helperEth = await this.getExchangeRate(ethTokenBalanceRes, \"0x8BaBbB98678facC7342735486C851ABD7A0d17Ca\");\n    const ethTokenBalanceBnb = web3.utils.fromWei(helperEth, \"ether\");\n    const ethTokenBalance = web3.utils.fromWei(ethTokenBalanceRes, \"ether\");\n    console.log(\"eth\", ethTokenBalance);\n\n    const shibaTokenBalanceRes = await this.state.SwapContract2.methods.shibaBalance(this.state.account).call();\n    const helperShib = await this.getExchangeRate(shibaTokenBalanceRes, \"0xBf0646Fa5ABbFf6Af50a9C40D5E621835219d384\");\n    const shibaTokenBalanceBnb = web3.utils.fromWei(helperShib, \"ether\");\n    const shibaTokenBalance = web3.utils.fromWei(shibaTokenBalanceRes, \"ether\");\n\n    const xrpTokenBalanceRes = await this.state.SwapContract2.methods.xrpBalance(this.state.account).call();\n    const helperXrp = await this.getExchangeRate(xrpTokenBalanceRes, \"0xCc00177908830cE1644AEB4aD507Fda3789128Af\");\n    const xrpTokenBalanceBnb = web3.utils.fromWei(helperXrp, \"ether\");\n    const xrpTokenBalance = web3.utils.fromWei(xrpTokenBalanceRes, \"ether\");\n\n    const ltcTokenBalanceRes = await this.state.SwapContract2.methods.ltcBalance(this.state.account).call();\n    const helperLtc = await this.getExchangeRate(ltcTokenBalanceRes, \"0x2F9fd65E3BB89b68a8e2Abd68Db25F5C348F68Ee\");\n    const ltcTokenBalanceBnb = web3.utils.fromWei(helperLtc, \"ether\");\n    const ltcTokenBalance = web3.utils.fromWei(ltcTokenBalanceRes, \"ether\");\n\n    const daiTokenBalanceRes = await this.state.SwapContract2.methods.daiBalance(this.state.account).call();\n    const helperDai = await this.getExchangeRate(daiTokenBalanceRes, \"0x8a9424745056Eb399FD19a0EC26A14316684e274\");\n    const daiTokenBalanceBnb = web3.utils.fromWei(helperDai, \"ether\");\n    const daiTokenBalance = web3.utils.fromWei(daiTokenBalanceRes, \"ether\");\n\n    const lunaTokenBalanceRes = await this.state.SwapContract2.methods.lunaBalance(this.state.account).call();\n    const helperLuna = await this.getExchangeRate(lunaTokenBalanceRes, \"0x0bBF12a9Ccd7cD0E23dA21eFd3bb16ba807ab069\");\n    const lunaTokenBalanceBnb = web3.utils.fromWei(helperLuna, \"ether\");\n    const lunaTokenBalance = web3.utils.fromWei(lunaTokenBalanceRes, \"ether\");\n\n    const linkTokenBalanceRes = await this.state.SwapContract2.methods.linkBalance(this.state.account).call();\n    const helperLink = await this.getExchangeRate(linkTokenBalanceRes, \"0x8D908A42FD847c80Eeb4498dE43469882436c8FF\");\n    const linkTokenBalanceBnb = web3.utils.fromWei(helperLink, \"ether\");\n    const linkTokenBalance = web3.utils.fromWei(linkTokenBalanceRes, \"ether\");\n\n    const uniTokenBalanceRes = await this.state.SwapContract2.methods.uniBalance(this.state.account).call();\n    const helperUni = await this.getExchangeRate(uniTokenBalanceRes, \"0x62955C6cA8Cd74F8773927B880966B7e70aD4567\");\n    const uniTokenBalanceBnb = web3.utils.fromWei(helperUni, \"ether\");\n    const uniTokenBalance = web3.utils.fromWei(uniTokenBalanceRes, \"ether\");\n\n\n    const stethTokenBalanceRes = await this.state.SwapContract2.methods.stethBalance(this.state.account).call();\n    const helperSteth = await this.getExchangeRate(stethTokenBalanceRes, \"0xb7a58582Df45DBa8Ad346c6A51fdb796D64e0898\");\n    const stethTokenBalanceBnb = web3.utils.fromWei(helperSteth, \"ether\");\n    const stethTokenBalance = web3.utils.fromWei(stethTokenBalanceRes, \"ether\");\n    console.log(\"steth\", stethTokenBalance);\n\n    this.setState({\n      defiTokenBalance,\n      btcTokenBalance, ethTokenBalance, shibaTokenBalance, xrpTokenBalance, ltcTokenBalance,\n      btcTokenBalanceBnb, ethTokenBalanceBnb, shibaTokenBalanceBnb, xrpTokenBalanceBnb, ltcTokenBalanceBnb,\n      daiTokenBalance, lunaTokenBalance, linkTokenBalance, uniTokenBalance, stethTokenBalance,\n      daiTokenBalanceBnb, lunaTokenBalanceBnb, linkTokenBalanceBnb, uniTokenBalanceBnb, stethTokenBalanceBnb,\n    });\n  }\n\n    calcTokenNFTBalances = async () => {\n      const web3 = window.web3;\n\n      const nftTokenBalanceRes = await this.state.NFTTokenContract2.methods.balanceOf(this.state.account).call();\n      const nftTokenBalance = web3.utils.fromWei(nftTokenBalanceRes, \"ether\");\n    \n      const axsTokenBalanceRes = await this.state.NFTPortfolioContract2.methods.axsBalance(this.state.account).call();\n      const helperAxs = await this.getExchangeRate(axsTokenBalanceRes, \"0xf34D883EcdE3238B153f38230987a0F4c221a48F\");\n      const axsTokenBalanceBnb = web3.utils.fromWei(helperAxs, \"ether\");\n      const axsTokenBalance = web3.utils.fromWei(axsTokenBalanceRes, \"ether\");\n\n      const manaTokenBalanceRes = await this.state.NFTPortfolioContract2.methods.manaBalance(this.state.account).call();\n      const helperMana = await this.getExchangeRate(manaTokenBalanceRes, \"0x8bf2dF0Ff8528088475183a68678bd1Cd7691b69\");\n      const manaTokenBalanceBnb = web3.utils.fromWei(helperMana, \"ether\");\n      const manaTokenBalance = web3.utils.fromWei(manaTokenBalanceRes, \"ether\");\n\n      const sandTokenBalanceRes = await this.state.NFTPortfolioContract2.methods.sandBalance(this.state.account).call();\n      const helperSand = await this.getExchangeRate(sandTokenBalanceRes, \"0x1631A54AC95Ecb0085dB6b8ACf80c4Cee72AEB06\");\n      const sandTokenBalanceBnb = web3.utils.fromWei(helperSand, \"ether\");\n      const sandTokenBalance = web3.utils.fromWei(sandTokenBalanceRes, \"ether\");\n\n      const thetaTokenBalanceRes = await this.state.NFTPortfolioContract2.methods.thetaBalance(this.state.account).call();\n      const helperTheate = await this.getExchangeRate(thetaTokenBalanceRes, \"0x19A5E53eC7B385dbE2E587Ba989eA2AB8F7EaF1e\");\n      const thetaTokenBalanceBnb = web3.utils.fromWei(helperTheate, \"ether\");\n      const thetaTokenBalance = web3.utils.fromWei(thetaTokenBalanceRes, \"ether\");\n\n      const flowTokenBalanceRes = await this.state.NFTPortfolioContract2.methods.flowalance(this.state.account).call();\n      const helperFlow = await this.getExchangeRate(flowTokenBalanceRes, \"0xe5c48084E1974a971Bd5dF4d9B01daCCA86d5567\");\n      const flowTokenBalanceBnb = web3.utils.fromWei(helperFlow, \"ether\");\n      const flowTokenBalance = web3.utils.fromWei(flowTokenBalanceRes, \"ether\");\n\n      console.log(flowTokenBalanceRes);\n\n      const xtzTokenBalanceRes = await this.state.NFTPortfolioContract2.methods.xtzBalance(this.state.account).call();\n      const helperXtz = await this.getExchangeRate(xtzTokenBalanceRes, \"0xC5De9d5B0BA5b408a3e9530A1BC310d8F2dCC26a\");\n      const xtzTokenBalanceBnb = web3.utils.fromWei(helperXtz, \"ether\");\n      const xtzTokenBalance = web3.utils.fromWei(xtzTokenBalanceRes, \"ether\");\n\n      const galaTokenBalanceRes = await this.state.NFTPortfolioContract2.methods.galaBalance(this.state.account).call();\n      const helperGala = await this.getExchangeRate(galaTokenBalanceRes, \"0x4bf1CE8E4c4c86126E57Fa9fc3f1a9631661641c\");\n      const galaTokenBalanceBnb = web3.utils.fromWei(helperGala, \"ether\");\n      const galaTokenBalance = web3.utils.fromWei(galaTokenBalanceRes, \"ether\");\n\n      const chzTokenBalanceRes = await this.state.NFTPortfolioContract2.methods.chzBalance(this.state.account).call();\n      const helperChz = await this.getExchangeRate(chzTokenBalanceRes, \"0xdeEC6f0C22970b9b8a47069bE619bfAe646dEe26\");\n      const chzTokenBalanceBnb = web3.utils.fromWei(helperChz, \"ether\");\n      const chzTokenBalance = web3.utils.fromWei(chzTokenBalanceRes, \"ether\");\n\n      const enjTokenBalanceRes = await this.state.NFTPortfolioContract2.methods.enjBalance(this.state.account).call();\n      const helperEnj = await this.getExchangeRate(enjTokenBalanceRes, \"0xb08A1959f57b9cC8e5A5F1d329EfD90EE3438F65\");\n      const enjTokenBalanceBnb = web3.utils.fromWei(helperEnj, \"ether\");\n      const enjTokenBalance = web3.utils.fromWei(enjTokenBalanceRes, \"ether\");\n\n      const roseTokenBalanceRes = await this.state.NFTPortfolioContract2.methods.roseBalance(this.state.account).call();\n      const helperRose = await this.getExchangeRate(roseTokenBalanceRes, \"0x30c1AC77F4068A063648B549ffF96Ddb9d151325\");\n      const roseTokenBalanceBnb = web3.utils.fromWei(helperRose, \"ether\");\n      const roseTokenBalance = web3.utils.fromWei(roseTokenBalanceRes, \"ether\");\n      console.log(\"rose\", roseTokenBalance);\n\n      this.setState({\n        nftTokenBalance,\n        axsTokenBalance, manaTokenBalance, sandTokenBalance, thetaTokenBalance, flowTokenBalance,\n        axsTokenBalanceBnb, manaTokenBalanceBnb, sandTokenBalanceBnb, thetaTokenBalanceBnb, flowTokenBalanceBnb,\n        xtzTokenBalance, galaTokenBalance, chzTokenBalance, enjTokenBalance, roseTokenBalance,\n        xtzTokenBalanceBnb, galaTokenBalanceBnb, chzTokenBalanceBnb, enjTokenBalanceBnb, roseTokenBalanceBnb\n      });\n  }\n\n  render() {\n\n    window.addEventListener(\"load\", function() {\n      if (window.ethereum) {\n        // use MetaMask's provider\n        App.web3 = new Web3(window.ethereum);\n        window.ethereum.enable(); // get permission to access accounts\n    \n        // detect Metamask account change\n        window.ethereum.on('accountsChanged', function (accounts) {\n          console.log('accountsChanges',accounts);\n    \n        });\n    \n         // detect Network account change\n        window.ethereum.on('networkChanged', function(networkId){\n          console.log('networkChanged',networkId);\n        });\n\n      } else {\n        console.warn(\n          \"No web3 detected. Falling back to http://127.0.0.1:8545. You should remove this fallback when you deploy live\",\n        );\n        // fallback - use your fallback strategy (local node / hosted node + in-dapp id mgmt / fail)\n        App.web3 = new Web3(\n          new Web3.providers.HttpProvider(\"http://127.0.0.1:7545\"),\n        );\n      }\n    });\n\n    const web3 = window.web3;\n\n    let button;\n    if (!this.state.connected) {\n      button = <Button style={{ position: \"absolute\", top: \"60px\", right: \"20px\" }} onClick={this.connectWallet} color=\"orange\">\n          <Image style={{ \"padding-top\": \"7px\" }} floated=\"left\" size=\"mini\" src={metamask} />\n          <p>Connect to MetaMask</p>\n        </Button>\n    } else {\n      button = <p style={{ position: \"absolute\", top: \"110px\", right: \"20px\", color: \"#C0C0C0\" }}><b>Account:</b> {this.state.account}</p>\n    }\n\n    let testnet;\n    if(this.state.chainId == \"97\") {\n      testnet = <Grid divided='vertically'>\n        <Grid.Row columns={2} style={{ margin: \"20px\" }}>\n          <Grid.Column>\n\n            <Card.Group>\n              <Card style={{ width: \"900px\" }}>\n                <Card.Content style={{ background: \"#406ccd\" }}>\n                <Card.Header style={{ color: \"white\" }}>\n                  <p style={{ color: \"#C0C0C0\", \"font-weight\": \"bold\", \"text-align\": \"right\" }}>APY: XX%</p>\n                    Top 10 Tokens\n                    </Card.Header>\n                  <Card.Description>\n\n                    <p style={{ color: \"#C0C0C0\" }}>Rate: In return of investing 1 BNB you will receive 1 Top10 Token.</p>\n\n                    <Form onSubmit={this.investDeFi}>\n                      <Input style={{ width: \"300px\", padding: 3 }} required type=\"text\" placeholder=\"BNB amount to create\" name=\"defiToMint\" onChange={this.handleInputChange}></Input>\n                      <Button color=\"green\" type=\"submit\" style={{ margin: \"20px\", width: \"150px\" }}>Create</Button>\n                    </Form>\n\n                    <Form onSubmit={this.withdrawDeFi}>\n                      <Input style={{ width: \"300px\", padding: 3 }} required type=\"text\" placeholder=\"Top10 amount to redeem\" name=\"withdrawValueDefi\" onChange={this.handleInputChange}></Input>\n                      <Button color=\"green\" style={{ margin: \"20px\", width: \"150px\" }}>Redeem</Button>\n                    </Form>\n\n                    <Table style={{ \"margin-left\": \"auto\", \"margin-right\": \"auto\" }} basic='very' celled collapsing>\n                      <Table.Header>\n                        <Table.Row>\n                          <Table.HeaderCell style={{ color: \"white\" }}>Token</Table.HeaderCell>\n                          <Table.HeaderCell style={{ color: \"white\" }}>Balance</Table.HeaderCell>\n                          <Table.HeaderCell style={{ color: \"white\" }}>Balance in WBNB</Table.HeaderCell>\n                        </Table.Row>\n                      </Table.Header>\n\n                      <Table.Body>\n                        <Table.Row>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>Top10 Token</Table.Cell>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.defiTokenBalance}</Table.Cell>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>-</Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>Bitcoin (BTC)</Table.Cell>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.btcTokenBalance}</Table.Cell>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.btcTokenBalanceBnb}</Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>Ethereum (ETH)</Table.Cell>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.ethTokenBalance}</Table.Cell>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.ethTokenBalanceBnb}</Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>Shiba Ibu (SHIB)</Table.Cell>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.shibaTokenBalance}</Table.Cell>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.shibaTokenBalanceBnb}</Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>Ripple (XRP)</Table.Cell>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.xrpTokenBalance}</Table.Cell>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.xrpTokenBalanceBnb}</Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>Litecoin (LTC)</Table.Cell>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.ltcTokenBalance}</Table.Cell>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.ltcTokenBalanceBnb}</Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>Dai (DAI)</Table.Cell>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.daiTokenBalance}</Table.Cell>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.daiTokenBalanceBnb}</Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>Terra (LUNA)</Table.Cell>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.lunaTokenBalance}</Table.Cell>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.lunaTokenBalanceBnb}</Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>Chainlink (LINK)</Table.Cell>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.linkTokenBalance}</Table.Cell>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.linkTokenBalanceBnb}</Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>Uniswap (UNI)</Table.Cell>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.uniTokenBalance}</Table.Cell>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.uniTokenBalanceBnb}</Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>Lido Staked Ether (STETH)</Table.Cell>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.stethTokenBalance}</Table.Cell>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.stethTokenBalanceBnb}</Table.Cell>\n                        </Table.Row>\n                      </Table.Body>\n\n                    </Table>\n\n                  </Card.Description>\n                </Card.Content>\n              </Card>\n            </Card.Group>\n          </Grid.Column>\n\n\n          <Grid.Column>\n            <Card.Group>\n              <Card style={{ width: \"900px\" }}>\n                <Card.Content style={{ background: \"#406ccd\" }}>\n                <Card.Header style={{ color: \"white\" }}>\n                    <p style={{ color: \"#C0C0C0\", \"font-weight\": \"bold\", \"text-align\": \"right\" }}>APY: YY%</p>\n                    Top 10 Metaverse Tokens\n                    </Card.Header>\n                  <Card.Description>\n\n                    <p style={{ color: \"#C0C0C0\" }}>Rate: In return of investing 1 BNB you will receive 1 META Token.</p>\n\n                    <Form onSubmit={this.investNFT}>\n                      <Input style={{ width: \"300px\", padding: 3 }} required type=\"text\" placeholder=\"BNB amount to create\" name=\"nftToMint\" onChange={this.handleInputChange}></Input>\n                      <Button color=\"green\" type=\"submit\" style={{ margin: \"20px\", width: \"150px\" }}>Create</Button>\n                    </Form>\n\n                    <Form onSubmit={this.withdrawNFT}>\n                      <Input style={{ width: \"300px\", padding: 3 }} required type=\"text\" placeholder=\"META amount to redeem\" name=\"withdrawValueNFT\" onChange={this.handleInputChange}></Input>\n                      <Button color=\"green\" style={{ margin: \"20px\", width: \"150px\" }}>Redeem</Button>\n                    </Form>\n\n                    <Table style={{ \"margin-left\": \"auto\", \"margin-right\": \"auto\" }} basic='very' celled collapsing>\n                      <Table.Header>\n                        <Table.Row>\n                          <Table.HeaderCell style={{ color: \"white\" }}>Token</Table.HeaderCell>\n                          <Table.HeaderCell style={{ color: \"white\" }}>Balance</Table.HeaderCell>\n                          <Table.HeaderCell style={{ color: \"white\" }}>Balance in WBNB</Table.HeaderCell>\n                        </Table.Row>\n                      </Table.Header>\n\n                      <Table.Body>\n                        <Table.Row>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>Metaverse Token</Table.Cell>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.nftTokenBalance}</Table.Cell>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>-</Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>Axie Infinity (AXS)</Table.Cell>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.axsTokenBalance}</Table.Cell>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.axsTokenBalanceBnb}</Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>Decentraland (MANA)</Table.Cell>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.manaTokenBalance}</Table.Cell>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.manaTokenBalanceBnb}</Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>The Sandbox (SAND)</Table.Cell>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.sandTokenBalance}</Table.Cell>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.sandTokenBalanceBnb}</Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>Theta Network (THETA)</Table.Cell>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.thetaTokenBalance}</Table.Cell>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.thetaTokenBalanceBnb}</Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>Flow (FLOW)</Table.Cell>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.flowTokenBalance}</Table.Cell>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.flowTokenBalanceBnb}</Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>Tezos (XTZ)</Table.Cell>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.xtzTokenBalance}</Table.Cell>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.xtzTokenBalanceBnb}</Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>Gala (GALA)</Table.Cell>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.galaTokenBalance}</Table.Cell>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.galaTokenBalanceBnb}</Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>Chiliz (CHZ)</Table.Cell>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.chzTokenBalance}</Table.Cell>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.chzTokenBalanceBnb}</Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>Enjin Coin (ENJ)</Table.Cell>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.enjTokenBalance}</Table.Cell>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.ethTokenBalanceBnb}</Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>Oasis Network (ROSE)</Table.Cell>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.roseTokenBalance}</Table.Cell>\n                          <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.roseTokenBalanceBnb}</Table.Cell>\n                        </Table.Row>\n\n                      </Table.Body>\n                    </Table>\n\n                  </Card.Description>\n                </Card.Content>\n              </Card>\n            </Card.Group>\n\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    }\n\n      let buttonSwitch;\n      if(this.state.chainId == \"56\" && this.state.connected) {\n        buttonSwitch = <Button style={{ position: \"absolute\", top: \"60px\", right: \"20px\" }} onClick={() => this.handleNetworkSwitch(\"bscTestnet\")} color=\"orange\" type=\"submit\" >Change to Testnet</Button>\n      } else if (this.state.connected) {\n        buttonSwitch = <Button style={{ position: \"absolute\", top: \"30px\", right: \"20px\" }} onClick={() => this.handleNetworkSwitch(\"bsc\")} color=\"orange\" type=\"submit\" >Change to Mainnet</Button>\n      }\n      \n      let mainnet;\n      if(this.state.chainId != \"97\") {\n        mainnet = \n        <div>\n        <Grid divided='vertically'>\n          <Grid.Row columns={2} style={{ margin: \"20px\" }}>\n            <Grid.Column>\n\n              <Card.Group>\n                <Card style={{ width: \"900px\" }}>\n                  <Card.Content style={{ background: \"#406ccd\" }}>\n                    <Card.Header style={{ color: \"white\" }}>\n                    <p style={{ color: \"#C0C0C0\", \"font-weight\": \"bold\", \"text-align\": \"right\" }}>APY: XX%</p>\n                      Top 10 Tokens\n                      </Card.Header>\n                    <Card.Description>\n                      <p style={{ color: \"#C0C0C0\" }}>Rate: In return of investing 1 BNB you will receive 1 Top10 Token.</p>\n\n                      <Form onSubmit={this.investDeFiMainnet}>\n                        <Input style={{ width: \"300px\", padding: 3 }} required type=\"text\" placeholder=\"BNB amount to create\" name=\"defiToMintMainnet\" onChange={this.handleInputChange}></Input>\n                        <Button color=\"green\" type=\"submit\" style={{ margin: \"20px\", width: \"150px\" }}>Create</Button>\n                      </Form>\n\n                      <Form onSubmit={this.withdrawDeFiMainnet}>\n                        <Input style={{ width: \"300px\", padding: 3 }} required type=\"text\" placeholder=\"TOP15 amount to redeem\" name=\"withdrawValueDefi\" onChange={this.handleInputChange}></Input>\n                        <Button color=\"green\" style={{ margin: \"20px\", width: \"150px\" }}>Redeem</Button>\n                      </Form>\n\n                      <Table role=\"grid\" style={{ \"margin-left\": \"auto\", \"margin-right\": \"auto\" }} basic='very' celled collapsing>\n                        <Table.Header>\n                          <Table.Row>\n                            <Table.HeaderCell style={{ color: \"white\" }}>Token</Table.HeaderCell>\n                            <Table.HeaderCell style={{ color: \"white\" }}>Balance</Table.HeaderCell>\n                            <Table.HeaderCell style={{ color: \"white\" }}>Balance in BUSD</Table.HeaderCell>\n                          </Table.Row>\n                        </Table.Header>\n\n                        <Table.Body>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Top10 Token</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.defiTokenBalance}</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>-</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Bitcoin (BTC)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.btcTokenBalance}</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.btcTokenBalanceBnb}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Ethereum (ETH)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.ethTokenBalance}</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.ethTokenBalanceBnb}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Shiba Ibu (SHIB)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.shibaTokenBalance}</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.shibaTokenBalanceBnb}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Ripple (XRP)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.xrpTokenBalance}</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.xrpTokenBalanceBnb}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Litecoin (LTC)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.ltcTokenBalance}</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.ltcTokenBalanceBnb}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Dai (DAI)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.daiTokenBalance}</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.daiTokenBalanceBnb}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Maker (MKR)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.makerTokenBalance}</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.makerTokenBalanceBnb}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Chainlink (LINK)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.linkTokenBalance}</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.linkTokenBalanceBnb}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Uniswap (UNI)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.uniTokenBalance}</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.uniTokenBalanceBnb}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Aave (AAVE)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.aaveTokenBalance}</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.aaveTokenBalanceBnb}</Table.Cell>\n                          </Table.Row>\n\n                        \n                        </Table.Body>\n                      </Table>\n\n                    </Card.Description>\n                  </Card.Content>\n                </Card>\n              </Card.Group>\n            </Grid.Column>\n\n            <Grid.Column>\n              <Card.Group>\n                <Card style={{ width: \"900px\" }}>\n                  <Card.Content style={{ background: \"#406ccd\" }}>\n                    <Card.Header style={{ color: \"white\" }}>\n                      <p style={{ color: \"#C0C0C0\", \"font-weight\": \"bold\", \"text-align\": \"right\" }}>APY: YY%</p>\n                      Top 5 Metaverse Tokens\n                      </Card.Header>\n                    <Card.Description>\n                      <p style={{ color: \"#C0C0C0\" }}>Rate: In return of investing 1 BNB you will receive 1 META Token.</p>\n\n                      <Form onSubmit={this.investNFTMainnet}>\n                        <Input style={{ width: \"300px\", padding: 3 }} required type=\"text\" placeholder=\"BNB amount to create\" name=\"nftToMintMainnet\" onChange={this.handleInputChange}></Input>\n                        <Button color=\"green\" type=\"submit\" style={{ margin: \"20px\", width: \"150px\" }}>Create</Button>\n                      </Form>\n\n                      <Form onSubmit={this.withdrawNFTMainnet}>\n                        <Input style={{ width: \"300px\", padding: 3 }} required type=\"text\" placeholder=\"META amount to redeem\" name=\"withdrawValueNFT\" onChange={this.handleInputChange}></Input>\n                        <Button color=\"green\" style={{ margin: \"20px\", width: \"150px\" }}>Redeem</Button>\n                      </Form>\n\n                      <Table style={{ \"margin-left\": \"auto\", \"margin-right\": \"auto\" }} basic='very' celled collapsing>\n                        <Table.Header>\n                          <Table.Row>\n                            <Table.HeaderCell style={{ color: \"white\" }}>Token</Table.HeaderCell>\n                            <Table.HeaderCell style={{ color: \"white\" }}>Balance</Table.HeaderCell>\n                            <Table.HeaderCell style={{ color: \"white\" }}>Balance in BUSD</Table.HeaderCell>\n                          </Table.Row>\n                        </Table.Header>\n\n                        <Table.Body >\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Metaverse Token</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.nftTokenBalance}</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>-</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Axie Infinity (AXS)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.axsTokenBalance}</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.axsTokenBalanceBnb}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Radio Caca (RACA)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.racaTokenBalance}</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.racaTokenBalanceBnb}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>MOBOX (MBOX)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.mboxTokenBalance}</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.mboxTokenBalanceBnb}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Merit Circle (MC)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.mcTokenBalance}</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>-</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>MyNeighborAlice (ALICE)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.aliceTokenBalance}</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.aliceTokenBalanceBnb}</Table.Cell>\n                          </Table.Row>\n\n                        </Table.Body>\n                      </Table>\n\n                    </Card.Description>\n                  </Card.Content>\n                </Card>\n              </Card.Group>\n\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        </div>\n      }\n\n    return (\n      <div className=\"App\">\n        <div>\n        <Message negative>\n          <Message.Header>The project is in the alpha stage, proceed at your own risk.</Message.Header>\n        </Message>\n      </div>\n        <br></br>\n\n        <Image src={velvet} size=\"medium\" verticalAlign='middle'></Image>\n\n        {button}\n        {buttonSwitch}\n        \n        {mainnet}\n        \n        {testnet}\n\n      </div >\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}