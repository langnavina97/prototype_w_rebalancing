{"ast":null,"code":"var _jsxFileName = \"/Users/navinalang/Navina-workgroup/05_create_and_burn_copy/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport IndexSwap from \"./abis/IndexSwap.json\";\nimport IndexToken from \"./abis/indexToken.json\";\nimport IERC from \"./abis/IERC20.json\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport Web3 from 'web3';\nimport { Grid, Button, Card, Header, HeaderSubheader, Form, Input } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = event => {\n      const target = event.target;\n      const value = target.type === \"checkbox\" ? target.checked : target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.investNFT = async () => {\n      const v = this.state.nftToMint;\n      const resp = await this.state.SwapContract.methods.investInFundNFT().send({\n        from: this.state.account,\n        value: v\n      });\n\n      if (resp.status) {\n        window.alert(\"Investment successful!\");\n      } else {\n        window.alert(\"Investment failed!\");\n      }\n    };\n\n    this.investDeFi = async () => {\n      const v = this.state.defiToMint;\n      const resp = await this.state.SwapContract.methods.investInFundDeFi().send({\n        from: this.state.account,\n        value: v\n      });\n\n      if (resp.status) {\n        window.alert(\"Investment successful!\");\n      } else {\n        window.alert(\"Investment failed!\");\n      }\n    };\n\n    this.calcTokenBalances = async () => {\n      const nftTokenBalance = await this.state.NFTTokenContract.methods.balanceOf(this.state.account).call();\n      const defiTokenBalance = await this.state.DeFiTokenContract.methods.balanceOf(this.state.account).call();\n      const web3 = window.web3;\n      const USDTokenConntract = new web3.eth.Contract(IERC.abi, \"0x7ef95a0FEE0Dd31b22626fA2e10Ee6A223F8a684\");\n      const usdtTokenBalance = await USDTokenConntract.methods.balanceOf(this.state.account).call();\n      const BUSDTokenConntract = new web3.eth.Contract(IERC.abi, \"0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7\");\n      const busdTokenBalance = await BUSDTokenConntract.methods.balanceOf(this.state.account).call();\n      const DAITokenConntract = new web3.eth.Contract(IERC.abi, \"0x8a9424745056Eb399FD19a0EC26A14316684e274\");\n      const daiTokenBalance = await DAITokenConntract.methods.balanceOf(this.state.account).call();\n      this.setState({\n        nftTokenBalance,\n        defiTokenBalance,\n        usdtTokenBalance,\n        busdTokenBalance\n      });\n    };\n\n    this.state = {\n      account: '',\n      SwapContract: null,\n      NFTTokenContract: null,\n      DeFiTokenContract: null,\n      address: \"\",\n      defiToMint: 0,\n      nftToMint: 0,\n      defiBalance: 0,\n      nftBalance: 0,\n      nftTokenBalance: 0,\n      defiTokenBalance: 0,\n      usdtTokenBalance: 0,\n      busdTokenBalance: 0,\n      daiTokenBalance: 0\n    };\n  }\n\n  async componentDidMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  } // first up is to detect ethereum provider\n\n\n  async loadWeb3() {\n    const provider = await detectEthereumProvider(); // modern browsers\n\n    if (provider) {\n      console.log('Ethereum wallet is connected');\n      window.web3 = new Web3(provider);\n    } else {\n      console.log('No ethereum wallet detected');\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const accounts = await window.web3.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    });\n    const SwapContract = new web3.eth.Contract(IndexSwap.abi, \"0x38F6EDad57B87e412f4AdF0119d4f735E46DD802\");\n    const NFTTokenContract = new web3.eth.Contract(IndexToken.abi, \"0x64a9057A0DbddDfB8A81b69ccf7536E4bAde0AbE\");\n    const DeFiTokenContract = new web3.eth.Contract(IndexToken.abi, \"0xFd22F799B90888973dc841a11E6ED0cf24f0b7e4\");\n    this.setState({\n      SwapContract,\n      NFTTokenContract,\n      DeFiTokenContract\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(Header, {\n      as: \"h1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Velvet.Capital\"), React.createElement(Grid, {\n      divided: \"vertically\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      columns: 2,\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Card.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: \"900px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      style: {\n        background: \"#406ccd\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"DeFi\"), React.createElement(Card.Meta, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Top 5 DeFi tokens\"), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.investDeFi,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Input, {\n      style: {\n        width: \"300px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"Amount to mint\",\n      name: \"defiToMint\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"green\",\n      type: \"submit\",\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Invest!\")), React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Balances\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.calcTokenBalances,\n      color: \"green\",\n      type: \"submit\",\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Get Balance!\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"DeFi Token: \", this.state.defiTokenBalance), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"USDT Token: \", this.state.usdtTokenBalance)))))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(Card.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: \"900px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      style: {\n        background: \"#406ccd\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"NFT\"), React.createElement(Card.Meta, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Top 5 NFT tokens\"), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.investNFT,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Input, {\n      style: {\n        width: \"300px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"Amount to mint\",\n      name: \"nftToMint\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"green\",\n      type: \"submit\",\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Invest!\")), React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Balances\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"NFT Token: \", this.state.nftTokenBalance)))))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/navinalang/Navina-workgroup/05_create_and_burn_copy/client/src/App.js"],"names":["React","Component","IndexSwap","IndexToken","IERC","detectEthereumProvider","Web3","Grid","Button","Card","Header","HeaderSubheader","Form","Input","App","constructor","props","handleInputChange","event","target","value","type","checked","name","setState","investNFT","v","state","nftToMint","resp","SwapContract","methods","investInFundNFT","send","from","account","status","window","alert","investDeFi","defiToMint","investInFundDeFi","calcTokenBalances","nftTokenBalance","NFTTokenContract","balanceOf","call","defiTokenBalance","DeFiTokenContract","web3","USDTokenConntract","eth","Contract","abi","usdtTokenBalance","BUSDTokenConntract","busdTokenBalance","DAITokenConntract","daiTokenBalance","address","defiBalance","nftBalance","componentDidMount","loadWeb3","loadBlockchainData","provider","console","log","accounts","getAccounts","render","margin","width","background","padding"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport IndexSwap from \"./abis/IndexSwap.json\";\nimport IndexToken from \"./abis/indexToken.json\";\nimport IERC from \"./abis/IERC20.json\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport Web3 from 'web3';\nimport { Grid, Button, Card, Header, HeaderSubheader, Form, Input } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\n\n\nimport \"./App.css\";\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '',\n      SwapContract: null,\n      NFTTokenContract: null,\n      DeFiTokenContract: null,\n      address: \"\",\n\n      defiToMint: 0,\n      nftToMint: 0,\n      defiBalance: 0,\n      nftBalance: 0,\n\n      nftTokenBalance: 0,\n      defiTokenBalance: 0,\n      usdtTokenBalance: 0,\n      busdTokenBalance: 0,\n      daiTokenBalance: 0\n    }\n  }\n\n  async componentDidMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n\n  // first up is to detect ethereum provider\n  async loadWeb3() {\n    const provider = await detectEthereumProvider();\n\n    // modern browsers\n    if (provider) {\n      console.log('Ethereum wallet is connected');\n\n      window.web3 = new Web3(provider);\n    } else {\n      console.log('No ethereum wallet detected');\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const accounts = await window.web3.eth.getAccounts();\n    this.setState({ account: accounts[0] })\n    const SwapContract = new web3.eth.Contract(IndexSwap.abi, \"0x38F6EDad57B87e412f4AdF0119d4f735E46DD802\");\n    const NFTTokenContract = new web3.eth.Contract(IndexToken.abi, \"0x64a9057A0DbddDfB8A81b69ccf7536E4bAde0AbE\");\n    const DeFiTokenContract = new web3.eth.Contract(IndexToken.abi, \"0xFd22F799B90888973dc841a11E6ED0cf24f0b7e4\");\n    this.setState({ SwapContract, NFTTokenContract, DeFiTokenContract });\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    })\n  }\n\n  investNFT = async() => {\n    const v = this.state.nftToMint;\n    const resp = await this.state.SwapContract.methods.investInFundNFT().send({from: this.state.account, value: v});\n    if(resp.status) {\n      window.alert(\"Investment successful!\");\n    } else {\n      window.alert(\"Investment failed!\");\n    }\n  }\n\n  investDeFi = async() => {\n    const v = this.state.defiToMint;\n    const resp = await this.state.SwapContract.methods.investInFundDeFi().send({from: this.state.account, value: v});\n    if(resp.status) {\n      window.alert(\"Investment successful!\");\n    } else {\n      window.alert(\"Investment failed!\");\n    }\n  }\n\n  calcTokenBalances = async() => {\n    const nftTokenBalance = await this.state.NFTTokenContract.methods.balanceOf(this.state.account).call();\n    const defiTokenBalance = await this.state.DeFiTokenContract.methods.balanceOf(this.state.account).call();\n    \n    const web3 = window.web3;\n\n    const USDTokenConntract = new web3.eth.Contract(IERC.abi, \"0x7ef95a0FEE0Dd31b22626fA2e10Ee6A223F8a684\");\n    const usdtTokenBalance = await USDTokenConntract.methods.balanceOf(this.state.account).call();\n\n    const BUSDTokenConntract = new web3.eth.Contract(IERC.abi, \"0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7\");\n    const busdTokenBalance = await BUSDTokenConntract.methods.balanceOf(this.state.account).call();\n\n    const DAITokenConntract = new web3.eth.Contract(IERC.abi, \"0x8a9424745056Eb399FD19a0EC26A14316684e274\");\n    const daiTokenBalance = await DAITokenConntract.methods.balanceOf(this.state.account).call();\n    \n    this.setState({ nftTokenBalance, defiTokenBalance, usdtTokenBalance, busdTokenBalance });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <br></br>\n        <Header as='h1'>Velvet.Capital</Header>\n\n        <Grid divided='vertically'>\n          <Grid.Row columns={2} style={{ margin: \"20px\" }}>\n            <Grid.Column>\n\n              <Card.Group>\n                <Card style={{ width: \"900px\" }}>\n                  <Card.Content style={{ background: \"#406ccd\" }}>\n                    <Card.Header>DeFi</Card.Header>\n                    <Card.Meta>Top 5 DeFi tokens</Card.Meta>\n                    <Card.Description>\n\n                      <Form onSubmit={this.investDeFi}>\n                        <Input style={{ width: \"300px\", padding: 3 }} required type=\"text\" placeholder=\"Amount to mint\" name=\"defiToMint\" onChange={this.handleInputChange}></Input><br></br>\n                        <Button color=\"green\" type=\"submit\" style={{ margin: \"20px\" }}>Invest!</Button>\n                      </Form>\n\n                      <Card.Header>Balances</Card.Header><br></br>\n\n                      <Button onClick={this.calcTokenBalances} color=\"green\" type=\"submit\" style={{ margin: \"20px\" }}>Get Balance!</Button>\n                      <p>DeFi Token: {this.state.defiTokenBalance}</p>\n                      <p>USDT Token: {this.state.usdtTokenBalance}</p>\n            \n                    </Card.Description>\n                  </Card.Content>\n                </Card>\n              </Card.Group>\n            </Grid.Column>\n\n\n            <Grid.Column>\n              <Card.Group>\n                <Card style={{ width: \"900px\" }}>\n                  <Card.Content style={{ background: \"#406ccd\" }}>\n                    <Card.Header>NFT</Card.Header>\n                    <Card.Meta>Top 5 NFT tokens</Card.Meta>\n                    <Card.Description>\n\n                      <Form onSubmit={this.investNFT}>\n                        <Input style={{ width: \"300px\", padding: 3 }} required type=\"text\" placeholder=\"Amount to mint\" name=\"nftToMint\" onChange={this.handleInputChange}></Input><br></br>\n                        <Button color=\"green\" type=\"submit\" style={{ margin: \"20px\" }}>Invest!</Button>\n                      </Form>\n\n                      <Card.Header>Balances</Card.Header><br></br>\n                      <p>NFT Token: {this.state.nftTokenBalance}</p>\n\n                    </Card.Description>\n                  </Card.Content>\n                </Card>\n              </Card.Group>\n\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div >\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}