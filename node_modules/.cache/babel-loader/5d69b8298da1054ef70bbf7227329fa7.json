{"ast":null,"code":"var _jsxFileName = \"/Users/navinalang/Navina-workgroup/05_create_and_burn_copy/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport LiquidityPool from \"./abis/LiquidityPool.json\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport Web3 from 'web3';\nimport { Grid, Button, Form, Input, Label, Card, Header } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = event => {\n      const target = event.target;\n      const value = target.type === \"checkbox\" ? target.checked : target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.createPair = async () => {\n      await this.state.LPContract.methods.createNewPair().send({\n        from: this.state.account\n      });\n    };\n\n    this.approveRouter = async () => {\n      await this.state.LPContract.methods.approveRouter(10000).send({\n        from: this.state.account\n      });\n    };\n\n    this.mint = async () => {\n      await this.state.LPContract.methods.mint(10000).send({\n        from: this.state.account\n      });\n    };\n\n    this.addLiquidity = async () => {\n      await this.state.LPContract.methods.addLiquidity(10000).send({\n        from: this.state.account\n      });\n    };\n\n    this.state = {\n      account: '',\n      LPContract: null,\n      address: \"\",\n      tokenA: \"\",\n      tokenB: \"\",\n      pairAddress: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  } // first up is to detect ethereum provider\n\n\n  async loadWeb3() {\n    const provider = await detectEthereumProvider(); // modern browsers\n\n    if (provider) {\n      console.log('Ethereum wallet is connected');\n      window.web3 = new Web3(provider);\n    } else {\n      console.log('No ethereum wallet detected');\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const accounts = await window.web3.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    });\n    const LPContract = new web3.eth.Contract(LiquidityPool.abi, \"0x207315B508E44FF6Cf4384426b5E3356b1E6E281\");\n    this.setState({\n      LPContract\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Header, {\n      as: \"h1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Velvet.Capital\"), React.createElement(HeaderSubheader, {\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Create and Burn\"), React.createElement(Button, {\n      onClick: this.createPair,\n      color: \"green\",\n      type: \"submit\",\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Create Pool!\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.mint,\n      color: \"green\",\n      type: \"submit\",\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Mint!\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.approveRouter,\n      color: \"green\",\n      type: \"submit\",\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Approve!\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.addLiquidity,\n      color: \"green\",\n      type: \"submit\",\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Add Liquidity!\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      divided: \"vertically\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      columns: 2,\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Card.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: \"900px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, this.state.name, \" (\", this.state.symbol, \")\"), React.createElement(Card.Meta, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Total number of Tokens\"), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.createPair,\n      color: \"green\",\n      type: \"submit\",\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Create Pool!\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.mint,\n      color: \"green\",\n      type: \"submit\",\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Mint!\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.approveRouter,\n      color: \"green\",\n      type: \"submit\",\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Approve!\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.addLiquidity,\n      color: \"green\",\n      type: \"submit\",\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Add Liquidity!\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })))))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Card.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: \"900px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Add beneficiary\"), React.createElement(Card.Meta, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"text\",\n      name: \"addressToAdd\",\n      value: this.state.addressToAdd,\n      onChange: this.handleInputChange,\n      style: {\n        width: \"400px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.createPair,\n      color: \"green\",\n      type: \"submit\",\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Create Pool!\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.mint,\n      color: \"green\",\n      type: \"submit\",\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Mint!\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.approveRouter,\n      color: \"green\",\n      type: \"submit\",\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Approve!\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.addLiquidity,\n      color: \"green\",\n      type: \"submit\",\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Add Liquidity!\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })))))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/navinalang/Navina-workgroup/05_create_and_burn_copy/client/src/App.js"],"names":["React","Component","LiquidityPool","detectEthereumProvider","Web3","Grid","Button","Form","Input","Label","Card","Header","App","constructor","props","handleInputChange","event","target","value","type","checked","name","setState","createPair","state","LPContract","methods","createNewPair","send","from","account","approveRouter","mint","addLiquidity","address","tokenA","tokenB","pairAddress","componentDidMount","loadWeb3","loadBlockchainData","provider","console","log","window","web3","accounts","eth","getAccounts","Contract","abi","render","margin","width","symbol","addressToAdd"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport LiquidityPool from \"./abis/LiquidityPool.json\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport Web3 from 'web3';\nimport { Grid, Button, Form, Input, Label, Card, Header } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\n\n\nimport \"./App.css\";\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '',\n      LPContract: null,\n      address: \"\",\n      tokenA: \"\",\n      tokenB: \"\",\n      pairAddress: \"\",\n    }\n  }\n\n  async componentDidMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n\n  // first up is to detect ethereum provider\n  async loadWeb3() {\n    const provider = await detectEthereumProvider();\n\n    // modern browsers\n    if (provider) {\n      console.log('Ethereum wallet is connected');\n\n      window.web3 = new Web3(provider);\n    } else {\n      console.log('No ethereum wallet detected');\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const accounts = await window.web3.eth.getAccounts();\n    this.setState({ account: accounts[0] })\n    const LPContract = new web3.eth.Contract(LiquidityPool.abi, \"0x207315B508E44FF6Cf4384426b5E3356b1E6E281\");\n    this.setState({ LPContract });\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    })\n  }\n\n  createPair = async() => {\n    await this.state.LPContract.methods.createNewPair().send({from: this.state.account});\n  }\n\n  approveRouter = async() => {\n    await this.state.LPContract.methods.approveRouter(10000).send({from: this.state.account});\n  }\n\n  mint = async() => {\n    await this.state.LPContract.methods.mint(10000).send({from: this.state.account});\n  }\n\n  addLiquidity = async() => {\n    await this.state.LPContract.methods.addLiquidity(10000).send({from: this.state.account});\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <br></br>\n        <Header as='h1'>Velvet.Capital</Header>\n        <HeaderSubheader as='h2'>Create and Burn</HeaderSubheader>\n\n        <Button onClick={this.createPair} color=\"green\" type=\"submit\" style={{ margin: \"20px\" }}>Create Pool!</Button><br></br>\n        <Button onClick={this.mint} color=\"green\" type=\"submit\" style={{ margin: \"20px\" }}>Mint!</Button><br></br>\n        <Button onClick={this.approveRouter} color=\"green\" type=\"submit\" style={{ margin: \"20px\" }}>Approve!</Button><br></br>\n        <Button onClick={this.addLiquidity} color=\"green\" type=\"submit\" style={{ margin: \"20px\" }}>Add Liquidity!</Button><br></br>\n\n        <Grid divided='vertically'>\n          <Grid.Row columns={2} style={{ margin: \"20px\" }}>\n            <Grid.Column>\n\n              <Card.Group>\n                <Card style={{ width: \"900px\" }}>\n                  <Card.Content>\n                    <Card.Header>{this.state.name} ({this.state.symbol})</Card.Header>\n                    <Card.Meta>Total number of Tokens</Card.Meta>\n                    <Card.Description>\n                      <Button onClick={this.createPair} color=\"green\" type=\"submit\" style={{ margin: \"20px\" }}>Create Pool!</Button><br></br>\n                      <Button onClick={this.mint} color=\"green\" type=\"submit\" style={{ margin: \"20px\" }}>Mint!</Button><br></br>\n                      <Button onClick={this.approveRouter} color=\"green\" type=\"submit\" style={{ margin: \"20px\" }}>Approve!</Button><br></br>\n                      <Button onClick={this.addLiquidity} color=\"green\" type=\"submit\" style={{ margin: \"20px\" }}>Add Liquidity!</Button><br></br>\n                    </Card.Description>\n                  </Card.Content>\n                </Card>\n              </Card.Group>\n            </Grid.Column>\n\n\n            <Grid.Column>\n              <Card.Group>\n                <Card style={{ width: \"900px\" }}>\n                  <Card.Content>\n                    <Card.Header>Add beneficiary</Card.Header>\n                    <Card.Meta><Input type=\"text\" name=\"addressToAdd\" value={this.state.addressToAdd} onChange={this.handleInputChange} style={{ width: \"400px\" }}></Input></Card.Meta>\n                    <Card.Description>\n                      <Button onClick={this.createPair} color=\"green\" type=\"submit\" style={{ margin: \"20px\" }}>Create Pool!</Button><br></br>\n                      <Button onClick={this.mint} color=\"green\" type=\"submit\" style={{ margin: \"20px\" }}>Mint!</Button><br></br>\n                      <Button onClick={this.approveRouter} color=\"green\" type=\"submit\" style={{ margin: \"20px\" }}>Approve!</Button><br></br>\n                      <Button onClick={this.addLiquidity} color=\"green\" type=\"submit\" style={{ margin: \"20px\" }}>Add Liquidity!</Button><br></br>\n                    </Card.Description>\n                  </Card.Content>\n                </Card>\n              </Card.Group>\n\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div >\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}