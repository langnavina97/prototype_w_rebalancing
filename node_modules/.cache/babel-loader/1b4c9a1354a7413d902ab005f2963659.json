{"ast":null,"code":"var _jsxFileName = \"/Users/navinalang/prototype/src/App.js\";\nimport React, { Component } from \"react\";\nimport IndexSwap from \"./abis/IndexSwap.json\";\nimport IndexToken from \"./abis/indexToken.json\";\nimport IERC from \"./abis/IERC20.json\";\nimport pancakeSwapRouter from \"./abis/IPancakeRouter02.json\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport Web3 from 'web3';\nimport { Grid, Button, Card, Form, Input, Image, Label, Menu, Table } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport velvet from \"./velvet.png\";\nimport metamask from \"./metamask-fox.svg\";\nimport swal from 'sweetalert';\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = event => {\n      const target = event.target;\n      const value = target.type === \"checkbox\" ? target.checked : target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.connectWallet = async () => {\n      if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum);\n        await window.ethereum.enable();\n        console.log(\"Connected\");\n        this.setState({\n          connected: true\n        });\n      } else {\n        alert(\"Metamask not found\");\n      }\n\n      this.loadBlockchainData();\n      window.location.reload();\n    };\n\n    this.investNFT = async () => {\n      const web3 = window.web3;\n      const v = this.state.nftToMint;\n      const amount = web3.utils.toWei(v, \"ether\");\n      const resp = await this.state.SwapContract.methods.investInFundNFT().send({\n        from: this.state.account,\n        value: amount\n      });\n\n      if (resp.status) {\n        swal(\"Investment successfull!\", \"You invested \".concat(v, \" BNB into the portfolio.\"), \"success\");\n      } else {\n        swal(\"Investment failed!\");\n      }\n\n      this.calcTokenBalances();\n    };\n\n    this.investDeFi = async () => {\n      const web3 = window.web3;\n      const v = this.state.defiToMint;\n      const amount = web3.utils.toWei(v, \"ether\");\n      const resp = await this.state.SwapContract.methods.investInFundDefi().send({\n        from: this.state.account,\n        value: amount\n      });\n\n      if (resp.status) {\n        swal(\"Investment successfull!\", \"You invested \".concat(v, \" BNB into the portfolio.\"), \"success\");\n      } else {\n        swal(\"Investment failed!\");\n      }\n\n      this.calcTokenBalances();\n    };\n\n    this.getExchangeRate = async (amountIn, address) => {\n      const web3 = window.web3;\n      const pancakeRouter = new web3.eth.Contract(pancakeSwapRouter.abi, \"0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3\");\n      var path = [];\n      path[0] = address;\n      path[1] = \"0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd\";\n      const er = await pancakeRouter.methods.getAmountsOut(amountIn, path).call();\n      return er[1];\n    };\n\n    this.calcTokenBalances = async () => {\n      const web3 = window.web3;\n      const nftTokenBalanceRes = await this.state.NFTTokenContract.methods.balanceOf(this.state.account).call();\n      const nftTokenBalance = web3.utils.fromWei(nftTokenBalanceRes, \"ether\");\n      const defiTokenBalanceRes = await this.state.DeFiTokenContract.methods.balanceOf(this.state.account).call();\n      const defiTokenBalance = web3.utils.fromWei(defiTokenBalanceRes, \"ether\");\n      const BTCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x4b1851167f74FF108A994872A160f1D6772d474b\");\n      const btcTokenBalanceRes = await BTCTokenConntract.methods.balanceOf(this.state.account).call();\n      const helperBtc = await this.getExchangeRate(btcTokenBalanceRes, \"0x4b1851167f74FF108A994872A160f1D6772d474b\");\n      const btcTokenBalance = web3.utils.fromWei(helperBtc, \"ether\");\n      const ETHTokenConntract = new web3.eth.Contract(IERC.abi, \"0x8BaBbB98678facC7342735486C851ABD7A0d17Ca\");\n      const ethTokenBalanceRes = await ETHTokenConntract.methods.balanceOf(this.state.account).call();\n      const helperEth = await this.getExchangeRate(ethTokenBalanceRes, \"0x8BaBbB98678facC7342735486C851ABD7A0d17Ca\");\n      const ethTokenBalanceBnb = web3.utils.fromWei(helperEth, \"ether\");\n      const ethTokenBalance = web3.utils.fromWei(ethTokenBalanceRes, \"ether\");\n      const SHIBATokenConntract = new web3.eth.Contract(IERC.abi, \"0xBf0646Fa5ABbFf6Af50a9C40D5E621835219d384\");\n      const shibaTokenBalanceRes = await SHIBATokenConntract.methods.balanceOf(this.state.account).call();\n      const helperShib = await this.getExchangeRate(shibaTokenBalanceRes, \"0xBf0646Fa5ABbFf6Af50a9C40D5E621835219d384\");\n      const shibaTokenBalanceBnb = web3.utils.fromWei(helperShib, \"ether\");\n      const shibaTokenBalance = web3.utils.fromWei(shibaTokenBalanceRes, \"ether\");\n      const XRPTokenConntract = new web3.eth.Contract(IERC.abi, \"0xCc00177908830cE1644AEB4aD507Fda3789128Af\");\n      const xrpTokenBalanceRes = await XRPTokenConntract.methods.balanceOf(this.state.account).call();\n      const helperXrp = await this.getExchangeRate(xrpTokenBalanceRes, \"0xCc00177908830cE1644AEB4aD507Fda3789128Af\");\n      const xrpTokenBalanceBnb = web3.utils.fromWei(helperXrp, \"ether\");\n      const xrpTokenBalance = web3.utils.fromWei(xrpTokenBalanceRes, \"ether\");\n      const LTCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x2F9fd65E3BB89b68a8e2Abd68Db25F5C348F68Ee\");\n      const ltcTokenBalanceRes = await LTCTokenConntract.methods.balanceOf(this.state.account).call();\n      const helperLtc = await this.getExchangeRate(ltcTokenBalanceRes, \"0x2F9fd65E3BB89b68a8e2Abd68Db25F5C348F68Ee\");\n      const ltcTokenBalanceBnb = web3.utils.fromWei(helperLtc, \"ether\");\n      const ltcTokenBalance = web3.utils.fromWei(ltcTokenBalanceRes, \"ether\");\n      const DAITokenConntract = new web3.eth.Contract(IERC.abi, \"0x8a9424745056Eb399FD19a0EC26A14316684e274\");\n      const daiTokenBalanceRes = await DAITokenConntract.methods.balanceOf(this.state.account).call();\n      const helperDai = await this.getExchangeRate(daiTokenBalanceRes, \"0x8a9424745056Eb399FD19a0EC26A14316684e274\");\n      const daiTokenBalanceBnb = web3.utils.fromWei(helperDai, \"ether\");\n      const daiTokenBalance = web3.utils.fromWei(daiTokenBalanceRes, \"ether\");\n      const LUNATokenConntract = new web3.eth.Contract(IERC.abi, \"0x0bBF12a9Ccd7cD0E23dA21eFd3bb16ba807ab069\");\n      const lunaTokenBalanceRes = await LUNATokenConntract.methods.balanceOf(this.state.account).call();\n      const helperLuna = await this.getExchangeRate(lunaTokenBalanceRes, \"0x0bBF12a9Ccd7cD0E23dA21eFd3bb16ba807ab069\");\n      const lunaTokenBalanceBnb = web3.utils.fromWei(helperLuna, \"ether\");\n      const lunaTokenBalance = web3.utils.fromWei(lunaTokenBalanceRes, \"ether\");\n      const LINKTokenConntract = new web3.eth.Contract(IERC.abi, \"0x8D908A42FD847c80Eeb4498dE43469882436c8FF\");\n      const linkTokenBalanceRes = await LINKTokenConntract.methods.balanceOf(this.state.account).call();\n      const helperLink = await this.getExchangeRate(linkTokenBalanceRes, \"0x8D908A42FD847c80Eeb4498dE43469882436c8FF\");\n      const linkTokenBalanceBnb = web3.utils.fromWei(helperLink, \"ether\");\n      const linkTokenBalance = web3.utils.fromWei(linkTokenBalanceRes, \"ether\");\n      const UNITokenConntract = new web3.eth.Contract(IERC.abi, \"0x62955C6cA8Cd74F8773927B880966B7e70aD4567\");\n      const uniTokenBalanceRes = await UNITokenConntract.methods.balanceOf(this.state.account).call();\n      const helperUni = await this.getExchangeRate(uniTokenBalanceRes, \"0x62955C6cA8Cd74F8773927B880966B7e70aD4567\");\n      const uniTokenBalanceBnb = web3.utils.fromWei(helperUni, \"ether\");\n      const uniTokenBalance = web3.utils.fromWei(uniTokenBalanceRes, \"ether\");\n      const STETHTokenConntract = new web3.eth.Contract(IERC.abi, \"0xb7a58582Df45DBa8Ad346c6A51fdb796D64e0898\");\n      const stethTokenBalanceRes = await STETHTokenConntract.methods.balanceOf(this.state.account).call();\n      const helperSteth = await this.getExchangeRate(stethTokenBalanceRes, \"0xb7a58582Df45DBa8Ad346c6A51fdb796D64e0898\");\n      const stethTokenBalanceBnb = web3.utils.fromWei(helperSteth, \"ether\");\n      const stethTokenBalance = web3.utils.fromWei(stethTokenBalanceRes, \"ether\");\n      const AXSTokenConntract = new web3.eth.Contract(IERC.abi, \"0xf34D883EcdE3238B153f38230987a0F4c221a48F\");\n      const axsTokenBalanceRes = await AXSTokenConntract.methods.balanceOf(this.state.account).call();\n      const helperAxs = await this.getExchangeRate(axsTokenBalanceRes, \"0xf34D883EcdE3238B153f38230987a0F4c221a48F\");\n      const axsTokenBalance = web3.utils.fromWei(helperAxs, \"ether\");\n      const MANATokenConntract = new web3.eth.Contract(IERC.abi, \"0x1631A54AC95Ecb0085dB6b8ACf80c4Cee72AEB06\");\n      const manaTokenBalanceRes = await MANATokenConntract.methods.balanceOf(this.state.account).call();\n      const helperMana = await this.getExchangeRate(manaTokenBalanceRes, \"0x1631A54AC95Ecb0085dB6b8ACf80c4Cee72AEB06\");\n      const manaTokenBalance = web3.utils.fromWei(helperMana, \"ether\");\n      const SANDTokenConntract = new web3.eth.Contract(IERC.abi, \"0x1631A54AC95Ecb0085dB6b8ACf80c4Cee72AEB06\");\n      const sandTokenBalanceRes = await SANDTokenConntract.methods.balanceOf(this.state.account).call();\n      const helperSand = await this.getExchangeRate(sandTokenBalanceRes, \"0x1631A54AC95Ecb0085dB6b8ACf80c4Cee72AEB06\");\n      const sandTokenBalance = web3.utils.fromWei(helperSand, \"ether\");\n      const THETATokenConntract = new web3.eth.Contract(IERC.abi, \"0x19A5E53eC7B385dbE2E587Ba989eA2AB8F7EaF1e\");\n      const thetaTokenBalanceRes = await THETATokenConntract.methods.balanceOf(this.state.account).call();\n      const helperTheate = await this.getExchangeRate(thetaTokenBalanceRes, \"0x19A5E53eC7B385dbE2E587Ba989eA2AB8F7EaF1e\");\n      const thetaTokenBalance = web3.utils.fromWei(helperTheate, \"ether\");\n      const FLOWTokenConntract = new web3.eth.Contract(IERC.abi, \"0xe5c48084E1974a971Bd5dF4d9B01daCCA86d5567\");\n      const flowTokenBalanceRes = await FLOWTokenConntract.methods.balanceOf(this.state.account).call();\n      const helperFlow = await this.getExchangeRate(flowTokenBalanceRes, \"0xe5c48084E1974a971Bd5dF4d9B01daCCA86d5567\");\n      const flowTokenBalance = web3.utils.fromWei(helperFlow, \"ether\");\n      const XTZTokenConntract = new web3.eth.Contract(IERC.abi, \"0xC5De9d5B0BA5b408a3e9530A1BC310d8F2dCC26a\");\n      const xtzTokenBalanceRes = await XTZTokenConntract.methods.balanceOf(this.state.account).call();\n      const helperXtz = await this.getExchangeRate(xtzTokenBalanceRes, \"0xC5De9d5B0BA5b408a3e9530A1BC310d8F2dCC26a\");\n      const xtzTokenBalance = web3.utils.fromWei(helperXtz, \"ether\");\n      const GALATokenConntract = new web3.eth.Contract(IERC.abi, \"0x4bf1CE8E4c4c86126E57Fa9fc3f1a9631661641c\");\n      const galaTokenBalanceRes = await GALATokenConntract.methods.balanceOf(this.state.account).call();\n      const helperGala = await this.getExchangeRate(galaTokenBalanceRes, \"0x4bf1CE8E4c4c86126E57Fa9fc3f1a9631661641c\");\n      const galaTokenBalance = web3.utils.fromWei(helperGala, \"ether\");\n      const CHZTokenConntract = new web3.eth.Contract(IERC.abi, \"0xdeEC6f0C22970b9b8a47069bE619bfAe646dEe26\");\n      const chzTokenBalanceRes = await CHZTokenConntract.methods.balanceOf(this.state.account).call();\n      const helperChz = await this.getExchangeRate(chzTokenBalanceRes, \"0xdeEC6f0C22970b9b8a47069bE619bfAe646dEe26\");\n      const chzTokenBalance = web3.utils.fromWei(helperChz, \"ether\");\n      const ENJTokenConntract = new web3.eth.Contract(IERC.abi, \"0xb08A1959f57b9cC8e5A5F1d329EfD90EE3438F65\");\n      const enjTokenBalanceRes = await ENJTokenConntract.methods.balanceOf(this.state.account).call();\n      const helperEnj = await this.getExchangeRate(enjTokenBalanceRes, \"0xb08A1959f57b9cC8e5A5F1d329EfD90EE3438F65\");\n      const enjTokenBalance = web3.utils.fromWei(helperEnj, \"ether\");\n      const ROSETokenConntract = new web3.eth.Contract(IERC.abi, \"0x30c1AC77F4068A063648B549ffF96Ddb9d151325\");\n      const roseTokenBalanceRes = await ROSETokenConntract.methods.balanceOf(this.state.account).call();\n      const helperRose = await this.getExchangeRate(roseTokenBalanceRes, \"0x30c1AC77F4068A063648B549ffF96Ddb9d151325\");\n      const roseTokenBalance = web3.utils.fromWei(helperRose, \"ether\");\n      this.setState({\n        nftTokenBalance,\n        defiTokenBalance,\n        btcTokenBalance,\n        ethTokenBalance,\n        shibaTokenBalance,\n        xrpTokenBalance,\n        ltcTokenBalance,\n        ethTokenBalanceBnb,\n        ethTokenBalanceBnb,\n        shibaTokenBalanceBnb,\n        xrpTokenBalanceBnb,\n        ltcTokenBalanceBnb,\n        daiTokenBalance,\n        lunaTokenBalance,\n        linkTokenBalance,\n        uniTokenBalance,\n        stethTokenBalance,\n        axsTokenBalance,\n        manaTokenBalance,\n        sandTokenBalance,\n        thetaTokenBalance,\n        flowTokenBalance,\n        xtzTokenBalance,\n        galaTokenBalance,\n        chzTokenBalance,\n        enjTokenBalance,\n        roseTokenBalance\n      });\n    };\n\n    this.getRate = async () => {\n      const rateObj = await this.state.SwapContract.methods.currentRate().call();\n      const rate = rateObj.numerator / rateObj.denominator;\n      this.setState({\n        rate\n      });\n    };\n\n    this.state = {\n      account: '',\n      SwapContract: null,\n      NFTTokenContract: null,\n      DeFiTokenContract: null,\n      address: \"\",\n      connected: false,\n      defiToMint: 0,\n      nftToMint: 0,\n      defiBalance: 0,\n      nftBalance: 0,\n      nftTokenBalance: 0,\n      defiTokenBalance: 0,\n      btcTokenBalance: 0,\n      ethTokenBalance: 0,\n      shibaTokenBalance: 0,\n      xrpTokenBalance: 0,\n      ltcTokenBalance: 0,\n      daiTokenBalance: 0,\n      lunaTokenBalance: 0,\n      linkTokenBalance: 0,\n      uniTokenBalance: 0,\n      stethTokenBalance: 0,\n      btcTokenBalanceBnb: 0,\n      ethTokenBalanceBnb: 0,\n      shibaTokenBalanceBnb: 0,\n      xrpTokenBalanceBnb: 0,\n      ltcTokenBalanceBnb: 0,\n      daiTokenBalanceBnb: 0,\n      lunaTokenBalanceBnb: 0,\n      linkTokenBalanceBnb: 0,\n      uniTokenBalanceBnb: 0,\n      stethTokenBalanceBnb: 0,\n      axsTokenBalance: 0,\n      manaTokenBalance: 0,\n      sandTokenBalance: 0,\n      thetaTokenBalance: 0,\n      flowTokenBalance: 0,\n      xtzTokenBalance: 0,\n      galaTokenBalance: 0,\n      chzTokenBalance: 0,\n      enjTokenBalance: 0,\n      roseTokenBalance: 0,\n      axsTokenBalanceBnb: 0,\n      manaTokenBalanceBnb: 0,\n      sandTokenBalanceBnb: 0,\n      thetaTokenBalanceBnb: 0,\n      flowTokenBalanceBnb: 0,\n      xtzTokenBalanceBnb: 0,\n      galaTokenBalanceBnb: 0,\n      chzTokenBalanceBnb: 0,\n      enjTokenBalanceBnb: 0,\n      roseTokenBalanceBnb: 0,\n      rate: 0\n    };\n  }\n\n  async componentDidMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n    await this.calcTokenBalances();\n    await this.getRate();\n  } // first up is to detect ethereum provider\n\n\n  async loadWeb3() {\n    const provider = await detectEthereumProvider(); // modern browsers\n\n    if (window.ethereum.selectedAddress) {\n      console.log('MetaMask is connected');\n\n      if (this.state.account) {\n        this.setState({\n          connected: true\n        });\n      }\n\n      window.web3 = new Web3(provider);\n    } else {\n      console.log('No ethereum wallet detected');\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const accounts = await window.web3.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    });\n    const SwapContract = new web3.eth.Contract(IndexSwap.abi, \"0x8cE8fB2E9D3A957a54236C627084aB2440117abb\");\n    const NFTTokenContract = new web3.eth.Contract(IndexToken.abi, \"0xE870b73661Cc3De504FE26111748c08224EDBf63\");\n    const DeFiTokenContract = new web3.eth.Contract(IndexToken.abi, \"0xAe24BD25B1Aba33f69e97074aF954b1BF84B72Cb\");\n    this.setState({\n      SwapContract,\n      NFTTokenContract,\n      DeFiTokenContract,\n      connected: true\n    });\n  }\n\n  render() {\n    let button;\n\n    if (!this.state.connected) {\n      button = React.createElement(Button, {\n        style: {\n          position: \"absolute\",\n          top: \"30px\",\n          right: \"20px\"\n        },\n        onClick: this.connectWallet,\n        color: \"orange\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, React.createElement(Image, {\n        style: {\n          \"padding-top\": \"7px\"\n        },\n        floated: \"left\",\n        size: \"mini\",\n        src: metamask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, \"Connect to MetaMask\"));\n    } else {\n      button = React.createElement(\"p\", {\n        style: {\n          position: \"absolute\",\n          top: \"90px\",\n          right: \"20px\",\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, \"Account:\"), \" \", this.state.account);\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }), React.createElement(Image, {\n      src: velvet,\n      size: \"medium\",\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }), button, React.createElement(Grid, {\n      divided: \"vertically\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      columns: 2,\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, React.createElement(Card.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: \"900px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      style: {\n        background: \"#406ccd\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, \"Top 10 Tokens\"), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, \"Rate: In return of investing 1 BNB you will receive \", this.state.rate, \" Top10 Token.\"), React.createElement(Form, {\n      onSubmit: this.investDeFi,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, React.createElement(Input, {\n      style: {\n        width: \"300px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"BNB amount to create\",\n      name: \"defiToMint\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"green\",\n      type: \"submit\",\n      style: {\n        margin: \"20px\",\n        width: \"150px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, \"Create\")), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, React.createElement(Input, {\n      disabled: true,\n      style: {\n        width: \"300px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"BNB amount to redeem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }), React.createElement(Button, {\n      disabled: true,\n      color: \"green\",\n      style: {\n        margin: \"20px\",\n        width: \"150px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, \"Redeem\")), React.createElement(Table, {\n      style: {\n        \"margin-left\": \"auto\",\n        \"margin-right\": \"auto\"\n      },\n      basic: \"very\",\n      celled: true,\n      collapsing: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, React.createElement(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, \"Token\"), React.createElement(Table.HeaderCell, {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, \"Balance in BNB\"))), React.createElement(Table.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, \"Top10 Token\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, this.state.defiTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, \"Bitcoin (BTC)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, this.state.btcTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, \"Ethereum (ETH)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, this.state.ethTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, \"Shiba Ibu (SHIB)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, this.state.shibaTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, \"Ripple (XRP)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, this.state.xrpTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, \"Litecoin (LTC)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, this.state.ltcTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, \"Dai (DAI)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, this.state.daiTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }, \"Terra (LUNA)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }, this.state.lunaTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, \"Chainlink (LINK)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, this.state.linkTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, \"Uniswap (UNI)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }, this.state.uniTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }, \"Lido Staked Ether (STETH)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }, this.state.stethTokenBalance))))))))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }, React.createElement(Card.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: \"900px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      style: {\n        background: \"#406ccd\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }, \"Top 10 Metaverse Tokens\"), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }, \"Rate: In return of investing 1 BNB you will receive \", this.state.rate, \" Metaverse Token.\"), React.createElement(Form, {\n      onSubmit: this.investNFT,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }, React.createElement(Input, {\n      style: {\n        width: \"300px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"BNB amount to create\",\n      name: \"nftToMint\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"green\",\n      type: \"submit\",\n      style: {\n        margin: \"20px\",\n        width: \"150px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }, \"Create\")), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442\n      },\n      __self: this\n    }, React.createElement(Input, {\n      disabled: true,\n      style: {\n        width: \"300px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"BNB amount to redeem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }), React.createElement(Button, {\n      disabled: true,\n      color: \"green\",\n      style: {\n        margin: \"20px\",\n        width: \"150px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    }, \"Redeem\")), React.createElement(Table, {\n      style: {\n        \"margin-left\": \"auto\",\n        \"margin-right\": \"auto\"\n      },\n      basic: \"very\",\n      celled: true,\n      collapsing: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }, React.createElement(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    }, \"Token\"), React.createElement(Table.HeaderCell, {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    }, \"Balance in BNB\"))), React.createElement(Table.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }, \"Metaverse Token\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458\n      },\n      __self: this\n    }, this.state.nftTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461\n      },\n      __self: this\n    }, \"Axie Infinity (AXS)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }, this.state.axsTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465\n      },\n      __self: this\n    }, \"Decentraland (MANA)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466\n      },\n      __self: this\n    }, this.state.manaTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    }, \"The Sandbox (SAND)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470\n      },\n      __self: this\n    }, this.state.sandTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473\n      },\n      __self: this\n    }, \"Theta Network (THETA)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474\n      },\n      __self: this\n    }, this.state.thetaTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477\n      },\n      __self: this\n    }, \"Flow (FLOW)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }, this.state.flowTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481\n      },\n      __self: this\n    }, \"Tezos (XTZ)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482\n      },\n      __self: this\n    }, this.state.xtzTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485\n      },\n      __self: this\n    }, \"Gala (GALA)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486\n      },\n      __self: this\n    }, this.state.galaTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489\n      },\n      __self: this\n    }, \"Chiliz (CHZ)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }, this.state.chzTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493\n      },\n      __self: this\n    }, \"Enjin Coin (ENJ)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494\n      },\n      __self: this\n    }, this.state.enjTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497\n      },\n      __self: this\n    }, \"Oasis Network (ROSE)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498\n      },\n      __self: this\n    }, this.state.roseTokenBalance))))))))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/navinalang/prototype/src/App.js"],"names":["React","Component","IndexSwap","IndexToken","IERC","pancakeSwapRouter","detectEthereumProvider","Web3","Grid","Button","Card","Form","Input","Image","Label","Menu","Table","velvet","swal","App","constructor","props","handleInputChange","event","target","value","type","checked","name","setState","connectWallet","window","ethereum","web3","enable","console","log","connected","alert","loadBlockchainData","location","reload","investNFT","v","state","nftToMint","amount","utils","toWei","resp","SwapContract","methods","investInFundNFT","send","from","account","status","calcTokenBalances","investDeFi","defiToMint","investInFundDefi","getExchangeRate","amountIn","address","pancakeRouter","eth","Contract","abi","path","er","getAmountsOut","call","nftTokenBalanceRes","NFTTokenContract","balanceOf","nftTokenBalance","fromWei","defiTokenBalanceRes","DeFiTokenContract","defiTokenBalance","BTCTokenConntract","btcTokenBalanceRes","helperBtc","btcTokenBalance","ETHTokenConntract","ethTokenBalanceRes","helperEth","ethTokenBalanceBnb","ethTokenBalance","SHIBATokenConntract","shibaTokenBalanceRes","helperShib","shibaTokenBalanceBnb","shibaTokenBalance","XRPTokenConntract","xrpTokenBalanceRes","helperXrp","xrpTokenBalanceBnb","xrpTokenBalance","LTCTokenConntract","ltcTokenBalanceRes","helperLtc","ltcTokenBalanceBnb","ltcTokenBalance","DAITokenConntract","daiTokenBalanceRes","helperDai","daiTokenBalanceBnb","daiTokenBalance","LUNATokenConntract","lunaTokenBalanceRes","helperLuna","lunaTokenBalanceBnb","lunaTokenBalance","LINKTokenConntract","linkTokenBalanceRes","helperLink","linkTokenBalanceBnb","linkTokenBalance","UNITokenConntract","uniTokenBalanceRes","helperUni","uniTokenBalanceBnb","uniTokenBalance","STETHTokenConntract","stethTokenBalanceRes","helperSteth","stethTokenBalanceBnb","stethTokenBalance","AXSTokenConntract","axsTokenBalanceRes","helperAxs","axsTokenBalance","MANATokenConntract","manaTokenBalanceRes","helperMana","manaTokenBalance","SANDTokenConntract","sandTokenBalanceRes","helperSand","sandTokenBalance","THETATokenConntract","thetaTokenBalanceRes","helperTheate","thetaTokenBalance","FLOWTokenConntract","flowTokenBalanceRes","helperFlow","flowTokenBalance","XTZTokenConntract","xtzTokenBalanceRes","helperXtz","xtzTokenBalance","GALATokenConntract","galaTokenBalanceRes","helperGala","galaTokenBalance","CHZTokenConntract","chzTokenBalanceRes","helperChz","chzTokenBalance","ENJTokenConntract","enjTokenBalanceRes","helperEnj","enjTokenBalance","ROSETokenConntract","roseTokenBalanceRes","helperRose","roseTokenBalance","getRate","rateObj","currentRate","rate","numerator","denominator","defiBalance","nftBalance","btcTokenBalanceBnb","axsTokenBalanceBnb","manaTokenBalanceBnb","sandTokenBalanceBnb","thetaTokenBalanceBnb","flowTokenBalanceBnb","xtzTokenBalanceBnb","galaTokenBalanceBnb","chzTokenBalanceBnb","enjTokenBalanceBnb","roseTokenBalanceBnb","componentDidMount","loadWeb3","provider","selectedAddress","accounts","getAccounts","render","button","position","top","right","metamask","color","margin","width","background","padding"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport IndexSwap from \"./abis/IndexSwap.json\";\nimport IndexToken from \"./abis/indexToken.json\";\nimport IERC from \"./abis/IERC20.json\";\nimport pancakeSwapRouter from \"./abis/IPancakeRouter02.json\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport Web3 from 'web3';\nimport { Grid, Button, Card, Form, Input, Image, Label, Menu, Table } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport velvet from \"./velvet.png\";\nimport metamask from \"./metamask-fox.svg\";\nimport swal from 'sweetalert';\n\nimport \"./App.css\";\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '',\n      SwapContract: null,\n      NFTTokenContract: null,\n      DeFiTokenContract: null,\n      address: \"\",\n      connected: false,\n\n      defiToMint: 0,\n      nftToMint: 0,\n      defiBalance: 0,\n      nftBalance: 0,\n\n      nftTokenBalance: 0,\n      defiTokenBalance: 0,\n\n      btcTokenBalance: 0,\n      ethTokenBalance: 0,\n      shibaTokenBalance: 0,\n      xrpTokenBalance: 0,\n      ltcTokenBalance: 0,\n      daiTokenBalance: 0,\n      lunaTokenBalance: 0,\n      linkTokenBalance: 0,\n      uniTokenBalance: 0,\n      stethTokenBalance: 0,\n\n      btcTokenBalanceBnb: 0,\n      ethTokenBalanceBnb: 0,\n      shibaTokenBalanceBnb: 0,\n      xrpTokenBalanceBnb: 0,\n      ltcTokenBalanceBnb: 0,\n      daiTokenBalanceBnb: 0,\n      lunaTokenBalanceBnb: 0,\n      linkTokenBalanceBnb: 0,\n      uniTokenBalanceBnb: 0,\n      stethTokenBalanceBnb: 0,\n\n      axsTokenBalance: 0,\n      manaTokenBalance: 0,\n      sandTokenBalance: 0,\n      thetaTokenBalance: 0,\n      flowTokenBalance: 0,\n      xtzTokenBalance: 0,\n      galaTokenBalance: 0,\n      chzTokenBalance: 0,\n      enjTokenBalance: 0,\n      roseTokenBalance: 0,\n\n      axsTokenBalanceBnb: 0,\n      manaTokenBalanceBnb: 0,\n      sandTokenBalanceBnb: 0,\n      thetaTokenBalanceBnb: 0,\n      flowTokenBalanceBnb: 0,\n      xtzTokenBalanceBnb: 0,\n      galaTokenBalanceBnb: 0,\n      chzTokenBalanceBnb: 0,\n      enjTokenBalanceBnb: 0,\n      roseTokenBalanceBnb: 0,\n\n      rate: 0\n    }\n  }\n\n  async componentDidMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n    await this.calcTokenBalances();\n    await this.getRate();\n  }\n\n  // first up is to detect ethereum provider\n  async loadWeb3() {\n    const provider = await detectEthereumProvider();\n\n    // modern browsers\n    if (window.ethereum.selectedAddress) {\n      console.log('MetaMask is connected');\n      if(this.state.account){\n        this.setState({\n          connected: true\n        });\n      } \n\n      window.web3 = new Web3(provider);\n    } else {\n      console.log('No ethereum wallet detected');\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const accounts = await window.web3.eth.getAccounts();\n    this.setState({ account: accounts[0] })\n    const SwapContract = new web3.eth.Contract(IndexSwap.abi, \"0x8cE8fB2E9D3A957a54236C627084aB2440117abb\");\n    const NFTTokenContract = new web3.eth.Contract(IndexToken.abi, \"0xE870b73661Cc3De504FE26111748c08224EDBf63\");\n    const DeFiTokenContract = new web3.eth.Contract(IndexToken.abi, \"0xAe24BD25B1Aba33f69e97074aF954b1BF84B72Cb\");\n    this.setState({ SwapContract, NFTTokenContract, DeFiTokenContract, connected: true });\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    })\n  }\n\n  connectWallet = async () => {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n      console.log(\"Connected\");\n      this.setState({\n        connected: true\n      })\n\n    } else {\n      alert(\"Metamask not found\");\n    }\n\n    this.loadBlockchainData();\n    window.location.reload()\n  }\n\n  investNFT = async () => {\n    const web3 = window.web3;\n    const v = this.state.nftToMint;\n    const amount = web3.utils.toWei(v, \"ether\");\n    const resp = await this.state.SwapContract.methods.investInFundNFT().send({ from: this.state.account, value: amount });\n    if (resp.status) {\n      swal(\"Investment successfull!\", `You invested ${v} BNB into the portfolio.`, \"success\");\n\n    } else {\n      swal(\"Investment failed!\");\n    }\n\n    this.calcTokenBalances();\n  }\n\n  investDeFi = async () => {\n    const web3 = window.web3;\n    const v = this.state.defiToMint;\n    const amount = web3.utils.toWei(v, \"ether\");\n    const resp = await this.state.SwapContract.methods.investInFundDefi().send({ from: this.state.account, value: amount });\n    if (resp.status) {\n      swal(\"Investment successfull!\", `You invested ${v} BNB into the portfolio.`, \"success\");\n\n    } else {\n      swal(\"Investment failed!\");\n    }\n\n    this.calcTokenBalances();\n  }\n\n  getExchangeRate = async (amountIn, address) => {\n    const web3 = window.web3;\n    const pancakeRouter = new web3.eth.Contract(pancakeSwapRouter.abi, \"0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3\");\n\n    var path = [];\n    path[0] = address;\n    path[1] = \"0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd\";\n\n    const er = await pancakeRouter.methods.getAmountsOut(amountIn, path).call();\n    return er[1];\n  }\n\n  calcTokenBalances = async () => {\n    const web3 = window.web3;\n\n    const nftTokenBalanceRes = await this.state.NFTTokenContract.methods.balanceOf(this.state.account).call();\n    const nftTokenBalance = web3.utils.fromWei(nftTokenBalanceRes, \"ether\");\n\n    const defiTokenBalanceRes = await this.state.DeFiTokenContract.methods.balanceOf(this.state.account).call();\n    const defiTokenBalance = web3.utils.fromWei(defiTokenBalanceRes, \"ether\");\n\n    const BTCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x4b1851167f74FF108A994872A160f1D6772d474b\");\n    const btcTokenBalanceRes = await BTCTokenConntract.methods.balanceOf(this.state.account).call();\n    const helperBtc = await this.getExchangeRate(btcTokenBalanceRes, \"0x4b1851167f74FF108A994872A160f1D6772d474b\");\n    const btcTokenBalance = web3.utils.fromWei(helperBtc, \"ether\");\n\n    const ETHTokenConntract = new web3.eth.Contract(IERC.abi, \"0x8BaBbB98678facC7342735486C851ABD7A0d17Ca\");\n    const ethTokenBalanceRes = await ETHTokenConntract.methods.balanceOf(this.state.account).call();\n    const helperEth = await this.getExchangeRate(ethTokenBalanceRes, \"0x8BaBbB98678facC7342735486C851ABD7A0d17Ca\");\n    const ethTokenBalanceBnb = web3.utils.fromWei(helperEth, \"ether\");\n    const ethTokenBalance = web3.utils.fromWei(ethTokenBalanceRes, \"ether\");\n\n    const SHIBATokenConntract = new web3.eth.Contract(IERC.abi, \"0xBf0646Fa5ABbFf6Af50a9C40D5E621835219d384\");\n    const shibaTokenBalanceRes = await SHIBATokenConntract.methods.balanceOf(this.state.account).call();\n    const helperShib = await this.getExchangeRate(shibaTokenBalanceRes, \"0xBf0646Fa5ABbFf6Af50a9C40D5E621835219d384\");\n    const shibaTokenBalanceBnb = web3.utils.fromWei(helperShib, \"ether\");\n    const shibaTokenBalance = web3.utils.fromWei(shibaTokenBalanceRes, \"ether\");\n\n    const XRPTokenConntract = new web3.eth.Contract(IERC.abi, \"0xCc00177908830cE1644AEB4aD507Fda3789128Af\");\n    const xrpTokenBalanceRes = await XRPTokenConntract.methods.balanceOf(this.state.account).call();\n    const helperXrp = await this.getExchangeRate(xrpTokenBalanceRes, \"0xCc00177908830cE1644AEB4aD507Fda3789128Af\");\n    const xrpTokenBalanceBnb = web3.utils.fromWei(helperXrp, \"ether\");\n    const xrpTokenBalance = web3.utils.fromWei(xrpTokenBalanceRes, \"ether\");\n\n    const LTCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x2F9fd65E3BB89b68a8e2Abd68Db25F5C348F68Ee\");\n    const ltcTokenBalanceRes = await LTCTokenConntract.methods.balanceOf(this.state.account).call();\n    const helperLtc = await this.getExchangeRate(ltcTokenBalanceRes, \"0x2F9fd65E3BB89b68a8e2Abd68Db25F5C348F68Ee\");\n    const ltcTokenBalanceBnb = web3.utils.fromWei(helperLtc, \"ether\");\n    const ltcTokenBalance = web3.utils.fromWei(ltcTokenBalanceRes, \"ether\");\n\n    const DAITokenConntract = new web3.eth.Contract(IERC.abi, \"0x8a9424745056Eb399FD19a0EC26A14316684e274\");\n    const daiTokenBalanceRes = await DAITokenConntract.methods.balanceOf(this.state.account).call();\n    const helperDai = await this.getExchangeRate(daiTokenBalanceRes, \"0x8a9424745056Eb399FD19a0EC26A14316684e274\");\n    const daiTokenBalanceBnb = web3.utils.fromWei(helperDai, \"ether\");\n    const daiTokenBalance = web3.utils.fromWei(daiTokenBalanceRes, \"ether\");\n\n    const LUNATokenConntract = new web3.eth.Contract(IERC.abi, \"0x0bBF12a9Ccd7cD0E23dA21eFd3bb16ba807ab069\");\n    const lunaTokenBalanceRes = await LUNATokenConntract.methods.balanceOf(this.state.account).call();\n    const helperLuna = await this.getExchangeRate(lunaTokenBalanceRes, \"0x0bBF12a9Ccd7cD0E23dA21eFd3bb16ba807ab069\");\n    const lunaTokenBalanceBnb = web3.utils.fromWei(helperLuna, \"ether\");\n    const lunaTokenBalance = web3.utils.fromWei(lunaTokenBalanceRes, \"ether\");\n\n    const LINKTokenConntract = new web3.eth.Contract(IERC.abi, \"0x8D908A42FD847c80Eeb4498dE43469882436c8FF\");\n    const linkTokenBalanceRes = await LINKTokenConntract.methods.balanceOf(this.state.account).call();\n    const helperLink = await this.getExchangeRate(linkTokenBalanceRes, \"0x8D908A42FD847c80Eeb4498dE43469882436c8FF\");\n    const linkTokenBalanceBnb = web3.utils.fromWei(helperLink, \"ether\");\n    const linkTokenBalance = web3.utils.fromWei(linkTokenBalanceRes, \"ether\");\n\n    const UNITokenConntract = new web3.eth.Contract(IERC.abi, \"0x62955C6cA8Cd74F8773927B880966B7e70aD4567\");\n    const uniTokenBalanceRes = await UNITokenConntract.methods.balanceOf(this.state.account).call();\n    const helperUni = await this.getExchangeRate(uniTokenBalanceRes, \"0x62955C6cA8Cd74F8773927B880966B7e70aD4567\");\n    const uniTokenBalanceBnb = web3.utils.fromWei(helperUni, \"ether\");\n    const uniTokenBalance = web3.utils.fromWei(uniTokenBalanceRes, \"ether\");\n\n\n    const STETHTokenConntract = new web3.eth.Contract(IERC.abi, \"0xb7a58582Df45DBa8Ad346c6A51fdb796D64e0898\");\n    const stethTokenBalanceRes = await STETHTokenConntract.methods.balanceOf(this.state.account).call();\n    const helperSteth = await this.getExchangeRate(stethTokenBalanceRes, \"0xb7a58582Df45DBa8Ad346c6A51fdb796D64e0898\");\n    const stethTokenBalanceBnb = web3.utils.fromWei(helperSteth, \"ether\");\n    const stethTokenBalance = web3.utils.fromWei(stethTokenBalanceRes, \"ether\");\n\n\n    const AXSTokenConntract = new web3.eth.Contract(IERC.abi, \"0xf34D883EcdE3238B153f38230987a0F4c221a48F\");\n    const axsTokenBalanceRes = await AXSTokenConntract.methods.balanceOf(this.state.account).call();\n    const helperAxs = await this.getExchangeRate(axsTokenBalanceRes, \"0xf34D883EcdE3238B153f38230987a0F4c221a48F\");\n    const axsTokenBalance = web3.utils.fromWei(helperAxs, \"ether\");\n\n    const MANATokenConntract = new web3.eth.Contract(IERC.abi, \"0x1631A54AC95Ecb0085dB6b8ACf80c4Cee72AEB06\");\n    const manaTokenBalanceRes = await MANATokenConntract.methods.balanceOf(this.state.account).call();\n    const helperMana = await this.getExchangeRate(manaTokenBalanceRes, \"0x1631A54AC95Ecb0085dB6b8ACf80c4Cee72AEB06\");\n    const manaTokenBalance = web3.utils.fromWei(helperMana, \"ether\");\n\n    const SANDTokenConntract = new web3.eth.Contract(IERC.abi, \"0x1631A54AC95Ecb0085dB6b8ACf80c4Cee72AEB06\");\n    const sandTokenBalanceRes = await SANDTokenConntract.methods.balanceOf(this.state.account).call();\n    const helperSand = await this.getExchangeRate(sandTokenBalanceRes, \"0x1631A54AC95Ecb0085dB6b8ACf80c4Cee72AEB06\");\n    const sandTokenBalance = web3.utils.fromWei(helperSand, \"ether\");\n\n    const THETATokenConntract = new web3.eth.Contract(IERC.abi, \"0x19A5E53eC7B385dbE2E587Ba989eA2AB8F7EaF1e\");\n    const thetaTokenBalanceRes = await THETATokenConntract.methods.balanceOf(this.state.account).call();\n    const helperTheate = await this.getExchangeRate(thetaTokenBalanceRes, \"0x19A5E53eC7B385dbE2E587Ba989eA2AB8F7EaF1e\");\n    const thetaTokenBalance = web3.utils.fromWei(helperTheate, \"ether\");\n\n    const FLOWTokenConntract = new web3.eth.Contract(IERC.abi, \"0xe5c48084E1974a971Bd5dF4d9B01daCCA86d5567\");\n    const flowTokenBalanceRes = await FLOWTokenConntract.methods.balanceOf(this.state.account).call();\n    const helperFlow = await this.getExchangeRate(flowTokenBalanceRes, \"0xe5c48084E1974a971Bd5dF4d9B01daCCA86d5567\");\n    const flowTokenBalance = web3.utils.fromWei(helperFlow, \"ether\");\n\n    const XTZTokenConntract = new web3.eth.Contract(IERC.abi, \"0xC5De9d5B0BA5b408a3e9530A1BC310d8F2dCC26a\");\n    const xtzTokenBalanceRes = await XTZTokenConntract.methods.balanceOf(this.state.account).call();\n    const helperXtz = await this.getExchangeRate(xtzTokenBalanceRes, \"0xC5De9d5B0BA5b408a3e9530A1BC310d8F2dCC26a\");\n    const xtzTokenBalance = web3.utils.fromWei(helperXtz, \"ether\");\n\n    const GALATokenConntract = new web3.eth.Contract(IERC.abi, \"0x4bf1CE8E4c4c86126E57Fa9fc3f1a9631661641c\");\n    const galaTokenBalanceRes = await GALATokenConntract.methods.balanceOf(this.state.account).call();\n    const helperGala = await this.getExchangeRate(galaTokenBalanceRes, \"0x4bf1CE8E4c4c86126E57Fa9fc3f1a9631661641c\");\n    const galaTokenBalance = web3.utils.fromWei(helperGala, \"ether\");\n\n    const CHZTokenConntract = new web3.eth.Contract(IERC.abi, \"0xdeEC6f0C22970b9b8a47069bE619bfAe646dEe26\");\n    const chzTokenBalanceRes = await CHZTokenConntract.methods.balanceOf(this.state.account).call();\n    const helperChz = await this.getExchangeRate(chzTokenBalanceRes, \"0xdeEC6f0C22970b9b8a47069bE619bfAe646dEe26\");\n    const chzTokenBalance = web3.utils.fromWei(helperChz, \"ether\");\n\n    const ENJTokenConntract = new web3.eth.Contract(IERC.abi, \"0xb08A1959f57b9cC8e5A5F1d329EfD90EE3438F65\");\n    const enjTokenBalanceRes = await ENJTokenConntract.methods.balanceOf(this.state.account).call();\n    const helperEnj = await this.getExchangeRate(enjTokenBalanceRes, \"0xb08A1959f57b9cC8e5A5F1d329EfD90EE3438F65\");\n    const enjTokenBalance = web3.utils.fromWei(helperEnj, \"ether\");\n\n    const ROSETokenConntract = new web3.eth.Contract(IERC.abi, \"0x30c1AC77F4068A063648B549ffF96Ddb9d151325\");\n    const roseTokenBalanceRes = await ROSETokenConntract.methods.balanceOf(this.state.account).call();\n    const helperRose = await this.getExchangeRate(roseTokenBalanceRes, \"0x30c1AC77F4068A063648B549ffF96Ddb9d151325\");\n    const roseTokenBalance = web3.utils.fromWei(helperRose, \"ether\");\n\n    this.setState({\n      nftTokenBalance, defiTokenBalance,\n      btcTokenBalance, ethTokenBalance, shibaTokenBalance, xrpTokenBalance, ltcTokenBalance,\n      ethTokenBalanceBnb, ethTokenBalanceBnb, shibaTokenBalanceBnb, xrpTokenBalanceBnb, ltcTokenBalanceBnb,\n      daiTokenBalance, lunaTokenBalance, linkTokenBalance, uniTokenBalance, stethTokenBalance,\n      axsTokenBalance, manaTokenBalance, sandTokenBalance, thetaTokenBalance, flowTokenBalance,\n      xtzTokenBalance, galaTokenBalance, chzTokenBalance, enjTokenBalance, roseTokenBalance\n    });\n  }\n\n  getRate = async () => {\n    const rateObj = await this.state.SwapContract.methods.currentRate().call();\n    const rate = rateObj.numerator / rateObj.denominator;\n    this.setState({ rate });\n  }\n\n  render() {\n    let button;\n    if (!this.state.connected) {\n      button = <Button style={{ position: \"absolute\", top: \"30px\", right: \"20px\" }} onClick={this.connectWallet} color=\"orange\">\n          <Image style={{ \"padding-top\": \"7px\" }} floated=\"left\" size=\"mini\" src={metamask} />\n          <p>Connect to MetaMask</p>\n        </Button>\n    } else {\n      button = <p style={{ position: \"absolute\", top: \"90px\", right: \"20px\", color: \"#C0C0C0\" }}><b>Account:</b> {this.state.account}</p>\n    }\n\n    return (\n      <div className=\"App\">\n        <br></br>\n        <Image src={velvet} size=\"medium\" verticalAlign='middle'></Image>\n\n        {button}\n\n        <Grid divided='vertically'>\n          <Grid.Row columns={2} style={{ margin: \"20px\" }}>\n            <Grid.Column>\n\n              <Card.Group>\n                <Card style={{ width: \"900px\" }}>\n                  <Card.Content style={{ background: \"#406ccd\" }}>\n                    <Card.Header style={{ color: \"white\" }}>Top 10 Tokens</Card.Header>\n                    <Card.Description>\n\n                      <p style={{ color: \"#C0C0C0\" }}>Rate: In return of investing 1 BNB you will receive {this.state.rate} Top10 Token.</p>\n\n                      <Form onSubmit={this.investDeFi}>\n                        <Input style={{ width: \"300px\", padding: 3 }} required type=\"text\" placeholder=\"BNB amount to create\" name=\"defiToMint\" onChange={this.handleInputChange}></Input>\n                        <Button color=\"green\" type=\"submit\" style={{ margin: \"20px\", width: \"150px\" }}>Create</Button>\n                      </Form>\n\n                      <Form>\n                        <Input disabled style={{ width: \"300px\", padding: 3 }} required type=\"text\" placeholder=\"BNB amount to redeem\"></Input>\n                        <Button disabled color=\"green\" style={{ margin: \"20px\", width: \"150px\" }}>Redeem</Button>\n                      </Form>\n\n                      <Table style={{ \"margin-left\": \"auto\", \"margin-right\": \"auto\" }} basic='very' celled collapsing>\n                        <Table.Header>\n                          <Table.Row>\n                            <Table.HeaderCell style={{ color: \"white\" }}>Token</Table.HeaderCell>\n                            <Table.HeaderCell style={{ color: \"white\" }}>Balance in BNB</Table.HeaderCell>\n                          </Table.Row>\n                        </Table.Header>\n\n                        <Table.Body>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Top10 Token</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.defiTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Bitcoin (BTC)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.btcTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Ethereum (ETH)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.ethTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Shiba Ibu (SHIB)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.shibaTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Ripple (XRP)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.xrpTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Litecoin (LTC)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.ltcTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Dai (DAI)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.daiTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Terra (LUNA)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.lunaTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Chainlink (LINK)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.linkTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Uniswap (UNI)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.uniTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Lido Staked Ether (STETH)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.stethTokenBalance}</Table.Cell>\n                          </Table.Row>\n                        </Table.Body>\n\n                      </Table>\n\n                    </Card.Description>\n                  </Card.Content>\n                </Card>\n              </Card.Group>\n            </Grid.Column>\n\n\n            <Grid.Column>\n              <Card.Group>\n                <Card style={{ width: \"900px\" }}>\n                  <Card.Content style={{ background: \"#406ccd\" }}>\n                    <Card.Header style={{ color: \"white\" }}>Top 10 Metaverse Tokens</Card.Header>\n                    <Card.Description>\n\n                      <p style={{ color: \"#C0C0C0\" }}>Rate: In return of investing 1 BNB you will receive {this.state.rate} Metaverse Token.</p>\n\n                      <Form onSubmit={this.investNFT}>\n                        <Input style={{ width: \"300px\", padding: 3 }} required type=\"text\" placeholder=\"BNB amount to create\" name=\"nftToMint\" onChange={this.handleInputChange}></Input>\n                        <Button color=\"green\" type=\"submit\" style={{ margin: \"20px\", width: \"150px\" }}>Create</Button>\n                      </Form>\n\n                      <Form>\n                        <Input disabled style={{ width: \"300px\", padding: 3 }} required type=\"text\" placeholder=\"BNB amount to redeem\"></Input>\n                        <Button disabled color=\"green\" style={{ margin: \"20px\", width: \"150px\" }}>Redeem</Button>\n                      </Form>\n\n                      <Table style={{ \"margin-left\": \"auto\", \"margin-right\": \"auto\" }} basic='very' celled collapsing>\n                        <Table.Header>\n                          <Table.Row>\n                            <Table.HeaderCell style={{ color: \"white\" }}>Token</Table.HeaderCell>\n                            <Table.HeaderCell style={{ color: \"white\" }}>Balance in BNB</Table.HeaderCell>\n                          </Table.Row>\n                        </Table.Header>\n\n                        <Table.Body>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Metaverse Token</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.nftTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Axie Infinity (AXS)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.axsTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Decentraland (MANA)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.manaTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>The Sandbox (SAND)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.sandTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Theta Network (THETA)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.thetaTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Flow (FLOW)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.flowTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Tezos (XTZ)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.xtzTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Gala (GALA)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.galaTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Chiliz (CHZ)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.chzTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Enjin Coin (ENJ)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.enjTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Oasis Network (ROSE)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.roseTokenBalance}</Table.Cell>\n                          </Table.Row>\n\n                        </Table.Body>\n                      </Table>\n\n                    </Card.Description>\n                  </Card.Content>\n                </Card>\n              </Card.Group>\n\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div >\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}