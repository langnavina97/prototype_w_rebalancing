{"ast":null,"code":"var _jsxFileName = \"/Users/navinalang/prototype/src/App.js\";\nimport React, { Component } from \"react\";\nimport IndexSwap from \"./abis/IndexSwap.json\";\nimport IndexToken from \"./abis/indexToken.json\";\nimport IERC from \"./abis/IERC20.json\";\nimport pancakeSwapRouter from \"./abis/IPancakeRouter02.json\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport Web3 from 'web3';\nimport { Grid, Button, Card, Form, Input, Image, Label, Menu, Table } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport velvet from \"./velvet.png\";\nimport metamask from \"./metamask-fox.svg\";\nimport swal from 'sweetalert';\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = event => {\n      const target = event.target;\n      const value = target.type === \"checkbox\" ? target.checked : target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.connectWallet = async () => {\n      if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum);\n        await window.ethereum.enable();\n        console.log(\"Connected\");\n      } else {\n        alert(\"Metamask not found\");\n      }\n\n      this.loadBlockchainData();\n      window.location.reload();\n    };\n\n    this.investNFT = async () => {\n      const web3 = window.web3;\n      const v = this.state.nftToMint;\n      const amount = web3.utils.toWei(v, \"ether\");\n      const resp = await this.state.SwapContract.methods.investInFundNFT().send({\n        from: this.state.account,\n        value: amount\n      });\n\n      if (resp.status) {\n        swal(\"Investment successfull!\", \"You invested \".concat(v, \" BNB into the portfolio.\"), \"success\");\n      } else {\n        swal(\"Investment failed!\");\n      }\n\n      this.calcTokenBalances();\n    };\n\n    this.investDeFi = async () => {\n      const web3 = window.web3;\n      const v = this.state.defiToMint;\n      const amount = web3.utils.toWei(v, \"ether\");\n      const resp = await this.state.SwapContract.methods.investInFundDefi().send({\n        from: this.state.account,\n        value: amount\n      });\n\n      if (resp.status) {\n        swal(\"Investment successfull!\", \"You invested \".concat(v, \" BNB into the portfolio.\"), \"success\");\n      } else {\n        swal(\"Investment failed!\");\n      }\n\n      this.calcTokenBalances();\n    };\n\n    this.getExchangeRate = async (amountIn, address) => {\n      const web3 = window.web3;\n      const pancakeRouter = new web3.eth.Contract(pancakeSwapRouter.abi, \"0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3\");\n      var path = [];\n      path[0] = address;\n      path[1] = \"0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd\";\n      const er = await pancakeRouter.methods.getAmountsOut(amountIn, path).call();\n      return er[1];\n    };\n\n    this.getExchangeRateTEST = async () => {\n      const web3 = window.web3;\n      const pancakeRouter = new web3.eth.Contract(pancakeSwapRouter.abi, \"0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3\");\n      var path = [];\n      path[0] = \"0x62955C6cA8Cd74F8773927B880966B7e70aD4567\";\n      path[1] = \"0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd\";\n      console.log(\"hahahhahallo\");\n      const er = await pancakeRouter.methods.getAmountsOut(\"199990600000008692882\", path).call();\n      return er[1];\n    };\n\n    this.calcTokenBalances = async () => {\n      const web3 = window.web3;\n      const nftTokenBalanceRes = await this.state.NFTTokenContract.methods.balanceOf(this.state.account).call();\n      const nftTokenBalance = web3.utils.fromWei(nftTokenBalanceRes, \"ether\");\n      const defiTokenBalanceRes = await this.state.DeFiTokenContract.methods.balanceOf(this.state.account).call();\n      const defiTokenBalance = web3.utils.fromWei(defiTokenBalanceRes, \"ether\");\n      const BTCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x4b1851167f74FF108A994872A160f1D6772d474b\");\n      const btcTokenBalanceRes = await BTCTokenConntract.methods.balanceOf(this.state.account).call();\n      const helperBtc = await this.getExchangeRate(btcTokenBalanceRes, \"0x4b1851167f74FF108A994872A160f1D6772d474b\");\n      const btcTokenBalance = web3.utils.fromWei(helperBtc, \"ether\");\n      const ETHTokenConntract = new web3.eth.Contract(IERC.abi, \"0x8BaBbB98678facC7342735486C851ABD7A0d17Ca\");\n      const ethTokenBalanceRes = await ETHTokenConntract.methods.balanceOf(this.state.account).call();\n      const helperEth = await this.getExchangeRate(ethTokenBalanceRes, \"0x8BaBbB98678facC7342735486C851ABD7A0d17Ca\");\n      const ethTokenBalance = web3.utils.fromWei(helperEth, \"ether\");\n      const SHIBATokenConntract = new web3.eth.Contract(IERC.abi, \"0xBf0646Fa5ABbFf6Af50a9C40D5E621835219d384\");\n      const shibaTokenBalanceRes = await SHIBATokenConntract.methods.balanceOf(this.state.account).call();\n      const helperShib = await this.getExchangeRate(shibaTokenBalanceRes, \"0xBf0646Fa5ABbFf6Af50a9C40D5E621835219d384\");\n      const shibaTokenBalance = web3.utils.fromWei(helperShib, \"ether\");\n      const XRPTokenConntract = new web3.eth.Contract(IERC.abi, \"0xCc00177908830cE1644AEB4aD507Fda3789128Af\");\n      const xrpTokenBalanceRes = await XRPTokenConntract.methods.balanceOf(this.state.account).call();\n      const xrpTokenBalance = web3.utils.fromWei(xrpTokenBalanceRes, \"ether\");\n      const LTCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x2F9fd65E3BB89b68a8e2Abd68Db25F5C348F68Ee\");\n      const ltcTokenBalanceRes = await LTCTokenConntract.methods.balanceOf(this.state.account).call();\n      const ltcTokenBalance = web3.utils.fromWei(ltcTokenBalanceRes, \"ether\");\n      const DAITokenConntract = new web3.eth.Contract(IERC.abi, \"0x8a9424745056Eb399FD19a0EC26A14316684e274\");\n      const daiTokenBalanceRes = await DAITokenConntract.methods.balanceOf(this.state.account).call();\n      const daiTokenBalance = web3.utils.fromWei(daiTokenBalanceRes, \"ether\");\n      const LUNATokenConntract = new web3.eth.Contract(IERC.abi, \"0x0bBF12a9Ccd7cD0E23dA21eFd3bb16ba807ab069\");\n      const lunaTokenBalanceRes = await LUNATokenConntract.methods.balanceOf(this.state.account).call();\n      const lunaTokenBalance = web3.utils.fromWei(lunaTokenBalanceRes, \"ether\");\n      const LINKTokenConntract = new web3.eth.Contract(IERC.abi, \"0x8D908A42FD847c80Eeb4498dE43469882436c8FF\");\n      const linkTokenBalanceRes = await LINKTokenConntract.methods.balanceOf(this.state.account).call();\n      const linkTokenBalance = web3.utils.fromWei(linkTokenBalanceRes, \"ether\");\n      const UNITokenConntract = new web3.eth.Contract(IERC.abi, \"0x62955C6cA8Cd74F8773927B880966B7e70aD4567\");\n      const uniTokenBalanceRes = await UNITokenConntract.methods.balanceOf(this.state.account).call();\n      const helperUni = await this.getExchangeRate(uniTokenBalanceRes, \"0x62955C6cA8Cd74F8773927B880966B7e70aD4567\");\n      const uniTokenBalance = web3.utils.fromWei(helperUni, \"ether\");\n      const STETHTokenConntract = new web3.eth.Contract(IERC.abi, \"0xb7a58582Df45DBa8Ad346c6A51fdb796D64e0898\");\n      const stethTokenBalanceRes = await STETHTokenConntract.methods.balanceOf(this.state.account).call();\n      const helperSteth = await this.getExchangeRate(stethTokenBalanceRes, \"0xb7a58582Df45DBa8Ad346c6A51fdb796D64e0898\");\n      const stethTokenBalance = web3.utils.fromWei(helperSteth, \"ether\");\n      const AXSTokenConntract = new web3.eth.Contract(IERC.abi, \"0xf34D883EcdE3238B153f38230987a0F4c221a48F\");\n      const axsTokenBalanceRes = await AXSTokenConntract.methods.balanceOf(this.state.account).call();\n      const helperAxs = await this.getExchangeRate(axsTokenBalanceRes, \"0xf34D883EcdE3238B153f38230987a0F4c221a48F\");\n      const axsTokenBalance = web3.utils.fromWei(helperAxs, \"ether\");\n      const MANATokenConntract = new web3.eth.Contract(IERC.abi, \"0x1631A54AC95Ecb0085dB6b8ACf80c4Cee72AEB06\");\n      const manaTokenBalanceRes = await MANATokenConntract.methods.balanceOf(this.state.account).call();\n      const helperMana = await this.getExchangeRate(manaTokenBalanceRes, \"0x1631A54AC95Ecb0085dB6b8ACf80c4Cee72AEB06\");\n      const manaTokenBalance = web3.utils.fromWei(helperMana, \"ether\");\n      const SANDTokenConntract = new web3.eth.Contract(IERC.abi, \"0x1631A54AC95Ecb0085dB6b8ACf80c4Cee72AEB06\");\n      const sandTokenBalanceRes = await SANDTokenConntract.methods.balanceOf(this.state.account).call();\n      const helperSand = await this.getExchangeRate(sandTokenBalanceRes, \"0x1631A54AC95Ecb0085dB6b8ACf80c4Cee72AEB06\");\n      const sandTokenBalance = web3.utils.fromWei(helperSand, \"ether\");\n      const THETATokenConntract = new web3.eth.Contract(IERC.abi, \"0x19A5E53eC7B385dbE2E587Ba989eA2AB8F7EaF1e\");\n      const thetaTokenBalanceRes = await THETATokenConntract.methods.balanceOf(this.state.account).call();\n      const helperTheate = await this.getExchangeRate(thetaTokenBalanceRes, \"0x19A5E53eC7B385dbE2E587Ba989eA2AB8F7EaF1e\");\n      const thetaTokenBalance = web3.utils.fromWei(helperTheate, \"ether\");\n      const FLOWTokenConntract = new web3.eth.Contract(IERC.abi, \"0xe5c48084E1974a971Bd5dF4d9B01daCCA86d5567\");\n      const flowTokenBalanceRes = await FLOWTokenConntract.methods.balanceOf(this.state.account).call();\n      const helperFlow = await this.getExchangeRate(flowTokenBalanceRes, \"0xe5c48084E1974a971Bd5dF4d9B01daCCA86d5567\");\n      const flowTokenBalance = web3.utils.fromWei(helperFlow, \"ether\");\n      const XTZTokenConntract = new web3.eth.Contract(IERC.abi, \"0xC5De9d5B0BA5b408a3e9530A1BC310d8F2dCC26a\");\n      const xtzTokenBalanceRes = await XTZTokenConntract.methods.balanceOf(this.state.account).call();\n      const helperXtz = await this.getExchangeRate(xtzTokenBalanceRes, \"0xC5De9d5B0BA5b408a3e9530A1BC310d8F2dCC26a\");\n      const xtzTokenBalance = web3.utils.fromWei(helperXtz, \"ether\");\n      const GALATokenConntract = new web3.eth.Contract(IERC.abi, \"0x4bf1CE8E4c4c86126E57Fa9fc3f1a9631661641c\");\n      const galaTokenBalanceRes = await GALATokenConntract.methods.balanceOf(this.state.account).call();\n      const helperGala = await this.getExchangeRate(galaTokenBalanceRes, \"0x4bf1CE8E4c4c86126E57Fa9fc3f1a9631661641c\");\n      const galaTokenBalance = web3.utils.fromWei(helperGala, \"ether\");\n      const CHZTokenConntract = new web3.eth.Contract(IERC.abi, \"0xdeEC6f0C22970b9b8a47069bE619bfAe646dEe26\");\n      const chzTokenBalanceRes = await CHZTokenConntract.methods.balanceOf(this.state.account).call();\n      const helperChz = await this.getExchangeRate(chzTokenBalanceRes, \"0xdeEC6f0C22970b9b8a47069bE619bfAe646dEe26\");\n      const chzTokenBalance = web3.utils.fromWei(helperChz, \"ether\");\n      const ENJTokenConntract = new web3.eth.Contract(IERC.abi, \"0xb08A1959f57b9cC8e5A5F1d329EfD90EE3438F65\");\n      const enjTokenBalanceRes = await ENJTokenConntract.methods.balanceOf(this.state.account).call();\n      const helperEnj = await this.getExchangeRate(enjTokenBalanceRes, \"0xb08A1959f57b9cC8e5A5F1d329EfD90EE3438F65\");\n      const enjTokenBalance = web3.utils.fromWei(helperEnj, \"ether\");\n      const ROSETokenConntract = new web3.eth.Contract(IERC.abi, \"0x30c1AC77F4068A063648B549ffF96Ddb9d151325\");\n      const roseTokenBalanceRes = await ROSETokenConntract.methods.balanceOf(this.state.account).call();\n      const helperRose = await this.getExchangeRate(roseTokenBalanceRes, \"0x30c1AC77F4068A063648B549ffF96Ddb9d151325\");\n      const roseTokenBalance = web3.utils.fromWei(helperRose, \"ether\");\n      this.setState({\n        nftTokenBalance,\n        defiTokenBalance,\n        btcTokenBalance,\n        ethTokenBalance,\n        shibaTokenBalance,\n        xrpTokenBalance,\n        ltcTokenBalance,\n        daiTokenBalance,\n        lunaTokenBalance,\n        linkTokenBalance,\n        uniTokenBalance,\n        stethTokenBalance,\n        axsTokenBalance,\n        manaTokenBalance,\n        sandTokenBalance,\n        thetaTokenBalance,\n        flowTokenBalance,\n        xtzTokenBalance,\n        galaTokenBalance,\n        chzTokenBalance,\n        enjTokenBalance,\n        roseTokenBalance\n      });\n    };\n\n    this.getRate = async () => {\n      const rateObj = await this.state.SwapContract.methods.currentRate().call();\n      const rate = rateObj.numerator / rateObj.denominator;\n      this.setState({\n        rate\n      });\n    };\n\n    this.state = {\n      account: '',\n      SwapContract: null,\n      NFTTokenContract: null,\n      DeFiTokenContract: null,\n      address: \"\",\n      defiToMint: 0,\n      nftToMint: 0,\n      defiBalance: 0,\n      nftBalance: 0,\n      nftTokenBalance: 0,\n      defiTokenBalance: 0,\n      btcTokenBalance: 0,\n      ethTokenBalance: 0,\n      shibaTokenBalance: 0,\n      xrpTokenBalance: 0,\n      ltcTokenBalance: 0,\n      daiTokenBalance: 0,\n      lunaTokenBalance: 0,\n      linkTokenBalance: 0,\n      uniTokenBalance: 0,\n      stethTokenBalance: 0,\n      axsTokenBalance: 0,\n      manaTokenBalance: 0,\n      sandTokenBalance: 0,\n      thetaTokenBalance: 0,\n      flowTokenBalance: 0,\n      xtzTokenBalance: 0,\n      galaTokenBalance: 0,\n      chzTokenBalance: 0,\n      enjTokenBalance: 0,\n      roseTokenBalance: 0,\n      rate: 0\n    };\n  }\n\n  async componentDidMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n    await this.calcTokenBalances();\n    await this.getRate();\n  } // first up is to detect ethereum provider\n\n\n  async loadWeb3() {\n    const provider = await detectEthereumProvider(); // modern browsers\n\n    if (provider) {\n      console.log('MetaMask is connected');\n      window.web3 = new Web3(provider);\n    } else {\n      console.log('No ethereum wallet detected');\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const accounts = await window.web3.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    });\n    const SwapContract = new web3.eth.Contract(IndexSwap.abi, \"0x8cE8fB2E9D3A957a54236C627084aB2440117abb\");\n    const NFTTokenContract = new web3.eth.Contract(IndexToken.abi, \"0xE870b73661Cc3De504FE26111748c08224EDBf63\");\n    const DeFiTokenContract = new web3.eth.Contract(IndexToken.abi, \"0xAe24BD25B1Aba33f69e97074aF954b1BF84B72Cb\");\n    this.setState({\n      SwapContract,\n      NFTTokenContract,\n      DeFiTokenContract\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }), React.createElement(Image, {\n      src: velvet,\n      size: \"medium\",\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.getExchangeRateTEST,\n      color: \"red\",\n      type: \"submit\",\n      style: {\n        margin: \"20px\",\n        width: \"150px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, \"Invest\"), React.createElement(Button, {\n      style: {\n        position: \"absolute\",\n        top: \"30px\",\n        right: \"20px\"\n      },\n      onClick: this.connectWallet,\n      color: \"orange\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(Image, {\n      style: {\n        \"padding-top\": \"7px\"\n      },\n      floated: \"left\",\n      size: \"mini\",\n      src: metamask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \"Connect to MetaMask\")), React.createElement(Grid, {\n      divided: \"vertically\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      columns: 2,\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(Card.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: \"900px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      style: {\n        background: \"#406ccd\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, \"Top 10 Tokens\"), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, \"Rate: In return of investing 1 BNB you will receive \", this.state.rate, \" Top10 Token.\"), React.createElement(Form, {\n      onSubmit: this.investDeFi,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(Input, {\n      style: {\n        width: \"300px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"BNB amount to invest\",\n      name: \"defiToMint\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"green\",\n      type: \"submit\",\n      style: {\n        margin: \"20px\",\n        width: \"150px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, \"Invest\")), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, React.createElement(Input, {\n      disabled: true,\n      style: {\n        width: \"300px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"BNB amount to withdraw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }), React.createElement(Button, {\n      disabled: true,\n      color: \"green\",\n      style: {\n        margin: \"20px\",\n        width: \"150px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, \"Withdraw\")), React.createElement(Table, {\n      style: {\n        \"margin-left\": \"auto\",\n        \"margin-right\": \"auto\"\n      },\n      basic: \"very\",\n      celled: true,\n      collapsing: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, React.createElement(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, \"Token\"), React.createElement(Table.HeaderCell, {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, \"Balance in BNB\"))), React.createElement(Table.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, \"Top10 Token\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, this.state.defiTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, \"Bitcoin (BTC)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, this.state.btcTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, \"Ethereum (ETH)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, this.state.ethTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, \"Shiba Ibu (SHIB)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, this.state.shibaTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, \"Ripple (XRP)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, this.state.xrpTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, \"Litecoin (LTC)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, this.state.ltcTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, \"Dai (DAI)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, this.state.daiTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, \"Terra (LUNA)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, this.state.lunaTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, \"Chainlink (LINK)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, this.state.linkTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, \"Uniswap (UNI)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, this.state.uniTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, \"Lido Staked Ether (STETH)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }, this.state.stethTokenBalance))))))))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, React.createElement(Card.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: \"900px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      style: {\n        background: \"#406ccd\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, \"Top 10 Metaverse Tokens\"), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, \"Rate: In return of investing 1 BNB you will receive \", this.state.rate, \" Metaverse Token.\"), React.createElement(Form, {\n      onSubmit: this.investNFT,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, React.createElement(Input, {\n      style: {\n        width: \"300px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"BNB amount to invest\",\n      name: \"nftToMint\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"green\",\n      type: \"submit\",\n      style: {\n        margin: \"20px\",\n        width: \"150px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, \"Invest\")), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, React.createElement(Input, {\n      disabled: true,\n      style: {\n        width: \"300px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"BNB amount to withdraw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }), React.createElement(Button, {\n      disabled: true,\n      color: \"green\",\n      style: {\n        margin: \"20px\",\n        width: \"150px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, \"Withdraw\")), React.createElement(Table, {\n      style: {\n        \"margin-left\": \"auto\",\n        \"margin-right\": \"auto\"\n      },\n      basic: \"very\",\n      celled: true,\n      collapsing: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, React.createElement(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }, \"Token\"), React.createElement(Table.HeaderCell, {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }, \"Balance in BNB\"))), React.createElement(Table.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }, \"Metaverse Token\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    }, this.state.nftTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }, \"Axie Infinity (AXS)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }, this.state.axsTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    }, \"Decentraland (MANA)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }, this.state.manaTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, \"The Sandbox (SAND)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }, this.state.sandTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }, \"Theta Network (THETA)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    }, this.state.thetaTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }, \"Flow (FLOW)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    }, this.state.flowTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }, \"Tezos (XTZ)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    }, this.state.xtzTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }, \"Gala (GALA)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }, this.state.galaTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    }, \"Chiliz (CHZ)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    }, this.state.chzTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, \"Enjin Coin (ENJ)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }, this.state.enjTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }, \"Oasis Network (ROSE)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }, this.state.roseTokenBalance))))))))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/navinalang/prototype/src/App.js"],"names":["React","Component","IndexSwap","IndexToken","IERC","pancakeSwapRouter","detectEthereumProvider","Web3","Grid","Button","Card","Form","Input","Image","Label","Menu","Table","velvet","swal","App","constructor","props","handleInputChange","event","target","value","type","checked","name","setState","connectWallet","window","ethereum","web3","enable","console","log","alert","loadBlockchainData","location","reload","investNFT","v","state","nftToMint","amount","utils","toWei","resp","SwapContract","methods","investInFundNFT","send","from","account","status","calcTokenBalances","investDeFi","defiToMint","investInFundDefi","getExchangeRate","amountIn","address","pancakeRouter","eth","Contract","abi","path","er","getAmountsOut","call","getExchangeRateTEST","nftTokenBalanceRes","NFTTokenContract","balanceOf","nftTokenBalance","fromWei","defiTokenBalanceRes","DeFiTokenContract","defiTokenBalance","BTCTokenConntract","btcTokenBalanceRes","helperBtc","btcTokenBalance","ETHTokenConntract","ethTokenBalanceRes","helperEth","ethTokenBalance","SHIBATokenConntract","shibaTokenBalanceRes","helperShib","shibaTokenBalance","XRPTokenConntract","xrpTokenBalanceRes","xrpTokenBalance","LTCTokenConntract","ltcTokenBalanceRes","ltcTokenBalance","DAITokenConntract","daiTokenBalanceRes","daiTokenBalance","LUNATokenConntract","lunaTokenBalanceRes","lunaTokenBalance","LINKTokenConntract","linkTokenBalanceRes","linkTokenBalance","UNITokenConntract","uniTokenBalanceRes","helperUni","uniTokenBalance","STETHTokenConntract","stethTokenBalanceRes","helperSteth","stethTokenBalance","AXSTokenConntract","axsTokenBalanceRes","helperAxs","axsTokenBalance","MANATokenConntract","manaTokenBalanceRes","helperMana","manaTokenBalance","SANDTokenConntract","sandTokenBalanceRes","helperSand","sandTokenBalance","THETATokenConntract","thetaTokenBalanceRes","helperTheate","thetaTokenBalance","FLOWTokenConntract","flowTokenBalanceRes","helperFlow","flowTokenBalance","XTZTokenConntract","xtzTokenBalanceRes","helperXtz","xtzTokenBalance","GALATokenConntract","galaTokenBalanceRes","helperGala","galaTokenBalance","CHZTokenConntract","chzTokenBalanceRes","helperChz","chzTokenBalance","ENJTokenConntract","enjTokenBalanceRes","helperEnj","enjTokenBalance","ROSETokenConntract","roseTokenBalanceRes","helperRose","roseTokenBalance","getRate","rateObj","currentRate","rate","numerator","denominator","defiBalance","nftBalance","componentDidMount","loadWeb3","provider","accounts","getAccounts","render","margin","width","position","top","right","metamask","background","color","padding"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport IndexSwap from \"./abis/IndexSwap.json\";\nimport IndexToken from \"./abis/indexToken.json\";\nimport IERC from \"./abis/IERC20.json\";\nimport pancakeSwapRouter from \"./abis/IPancakeRouter02.json\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport Web3 from 'web3';\nimport { Grid, Button, Card, Form, Input, Image, Label, Menu, Table } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport velvet from \"./velvet.png\";\nimport metamask from \"./metamask-fox.svg\";\nimport swal from 'sweetalert';\n\nimport \"./App.css\";\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '',\n      SwapContract: null,\n      NFTTokenContract: null,\n      DeFiTokenContract: null,\n      address: \"\",\n\n      defiToMint: 0,\n      nftToMint: 0,\n      defiBalance: 0,\n      nftBalance: 0,\n\n      nftTokenBalance: 0,\n      defiTokenBalance: 0,\n\n      btcTokenBalance: 0,\n      ethTokenBalance: 0,\n      shibaTokenBalance: 0,\n      xrpTokenBalance: 0,\n      ltcTokenBalance: 0,\n      daiTokenBalance: 0,\n      lunaTokenBalance: 0,\n      linkTokenBalance: 0,\n      uniTokenBalance: 0,\n      stethTokenBalance: 0,\n\n      axsTokenBalance: 0,\n      manaTokenBalance: 0,\n      sandTokenBalance: 0,\n      thetaTokenBalance: 0,\n      flowTokenBalance: 0,\n      xtzTokenBalance: 0,\n      galaTokenBalance: 0,\n      chzTokenBalance: 0,\n      enjTokenBalance: 0,\n      roseTokenBalance: 0,\n\n      rate: 0\n    }\n  }\n\n  async componentDidMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n    await this.calcTokenBalances();\n    await this.getRate();\n  }\n\n  // first up is to detect ethereum provider\n  async loadWeb3() {\n    const provider = await detectEthereumProvider();\n\n    // modern browsers\n    if (provider) {\n      console.log('MetaMask is connected');\n\n      window.web3 = new Web3(provider);\n    } else {\n      console.log('No ethereum wallet detected');\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const accounts = await window.web3.eth.getAccounts();\n    this.setState({ account: accounts[0] })\n    const SwapContract = new web3.eth.Contract(IndexSwap.abi, \"0x8cE8fB2E9D3A957a54236C627084aB2440117abb\");\n    const NFTTokenContract = new web3.eth.Contract(IndexToken.abi, \"0xE870b73661Cc3De504FE26111748c08224EDBf63\");\n    const DeFiTokenContract = new web3.eth.Contract(IndexToken.abi, \"0xAe24BD25B1Aba33f69e97074aF954b1BF84B72Cb\");\n    this.setState({ SwapContract, NFTTokenContract, DeFiTokenContract });\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    })\n  }\n\n  connectWallet = async () => {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n      console.log(\"Connected\");\n    } else {\n      alert(\"Metamask not found\");\n    }\n\n    this.loadBlockchainData();\n    window.location.reload()\n  }\n\n  investNFT = async () => {\n    const web3 = window.web3;\n    const v = this.state.nftToMint;\n    const amount = web3.utils.toWei(v, \"ether\");\n    const resp = await this.state.SwapContract.methods.investInFundNFT().send({ from: this.state.account, value: amount });\n    if (resp.status) {\n      swal(\"Investment successfull!\", `You invested ${v} BNB into the portfolio.`, \"success\");\n\n    } else {\n      swal(\"Investment failed!\");\n    }\n\n    this.calcTokenBalances();\n  }\n\n  investDeFi = async () => {\n    const web3 = window.web3;\n    const v = this.state.defiToMint;\n    const amount = web3.utils.toWei(v, \"ether\");\n    const resp = await this.state.SwapContract.methods.investInFundDefi().send({ from: this.state.account, value: amount });\n    if (resp.status) {\n      swal(\"Investment successfull!\", `You invested ${v} BNB into the portfolio.`, \"success\");\n\n    } else {\n      swal(\"Investment failed!\");\n    }\n\n    this.calcTokenBalances();\n  }\n\n  getExchangeRate = async (amountIn, address) => {\n    const web3 = window.web3;\n    const pancakeRouter = new web3.eth.Contract(pancakeSwapRouter.abi, \"0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3\");\n\n    var path = [];\n    path[0] = address;\n    path[1] = \"0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd\";\n\n    const er = await pancakeRouter.methods.getAmountsOut(amountIn, path).call();\n    return er[1];\n  }\n\n  getExchangeRateTEST = async () => {\n    const web3 = window.web3;\n    const pancakeRouter = new web3.eth.Contract(pancakeSwapRouter.abi, \"0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3\");\n\n    var path = [];\n    path[0] = \"0x62955C6cA8Cd74F8773927B880966B7e70aD4567\";\n    path[1] = \"0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd\";\n    console.log(\"hahahhahallo\")\n\n    const er = await pancakeRouter.methods.getAmountsOut(\"199990600000008692882\", path).call();\n    return er[1];\n\n  }\n\n  calcTokenBalances = async () => {\n    const web3 = window.web3;\n\n    const nftTokenBalanceRes = await this.state.NFTTokenContract.methods.balanceOf(this.state.account).call();\n    const nftTokenBalance = web3.utils.fromWei(nftTokenBalanceRes, \"ether\");\n\n    const defiTokenBalanceRes = await this.state.DeFiTokenContract.methods.balanceOf(this.state.account).call();\n    const defiTokenBalance = web3.utils.fromWei(defiTokenBalanceRes, \"ether\");\n\n    const BTCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x4b1851167f74FF108A994872A160f1D6772d474b\");\n    const btcTokenBalanceRes = await BTCTokenConntract.methods.balanceOf(this.state.account).call();\n    const helperBtc = await this.getExchangeRate(btcTokenBalanceRes, \"0x4b1851167f74FF108A994872A160f1D6772d474b\");\n    const btcTokenBalance = web3.utils.fromWei(helperBtc, \"ether\");\n\n    const ETHTokenConntract = new web3.eth.Contract(IERC.abi, \"0x8BaBbB98678facC7342735486C851ABD7A0d17Ca\");\n    const ethTokenBalanceRes = await ETHTokenConntract.methods.balanceOf(this.state.account).call();\n    const helperEth = await this.getExchangeRate(ethTokenBalanceRes, \"0x8BaBbB98678facC7342735486C851ABD7A0d17Ca\");\n    const ethTokenBalance = web3.utils.fromWei(helperEth, \"ether\");\n\n    const SHIBATokenConntract = new web3.eth.Contract(IERC.abi, \"0xBf0646Fa5ABbFf6Af50a9C40D5E621835219d384\");\n    const shibaTokenBalanceRes = await SHIBATokenConntract.methods.balanceOf(this.state.account).call();\n    const helperShib = await this.getExchangeRate(shibaTokenBalanceRes, \"0xBf0646Fa5ABbFf6Af50a9C40D5E621835219d384\");\n    const shibaTokenBalance = web3.utils.fromWei(helperShib, \"ether\");\n\n    const XRPTokenConntract = new web3.eth.Contract(IERC.abi, \"0xCc00177908830cE1644AEB4aD507Fda3789128Af\");\n    const xrpTokenBalanceRes = await XRPTokenConntract.methods.balanceOf(this.state.account).call();\n    const xrpTokenBalance = web3.utils.fromWei(xrpTokenBalanceRes, \"ether\");\n\n    const LTCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x2F9fd65E3BB89b68a8e2Abd68Db25F5C348F68Ee\");\n    const ltcTokenBalanceRes = await LTCTokenConntract.methods.balanceOf(this.state.account).call();\n    const ltcTokenBalance = web3.utils.fromWei(ltcTokenBalanceRes, \"ether\");\n\n    const DAITokenConntract = new web3.eth.Contract(IERC.abi, \"0x8a9424745056Eb399FD19a0EC26A14316684e274\");\n    const daiTokenBalanceRes = await DAITokenConntract.methods.balanceOf(this.state.account).call();\n    const daiTokenBalance = web3.utils.fromWei(daiTokenBalanceRes, \"ether\");\n\n    const LUNATokenConntract = new web3.eth.Contract(IERC.abi, \"0x0bBF12a9Ccd7cD0E23dA21eFd3bb16ba807ab069\");\n    const lunaTokenBalanceRes = await LUNATokenConntract.methods.balanceOf(this.state.account).call();\n    const lunaTokenBalance = web3.utils.fromWei(lunaTokenBalanceRes, \"ether\");\n\n    const LINKTokenConntract = new web3.eth.Contract(IERC.abi, \"0x8D908A42FD847c80Eeb4498dE43469882436c8FF\");\n    const linkTokenBalanceRes = await LINKTokenConntract.methods.balanceOf(this.state.account).call();\n    const linkTokenBalance = web3.utils.fromWei(linkTokenBalanceRes, \"ether\");\n\n    const UNITokenConntract = new web3.eth.Contract(IERC.abi, \"0x62955C6cA8Cd74F8773927B880966B7e70aD4567\");\n    const uniTokenBalanceRes = await UNITokenConntract.methods.balanceOf(this.state.account).call();\n    const helperUni = await this.getExchangeRate(uniTokenBalanceRes, \"0x62955C6cA8Cd74F8773927B880966B7e70aD4567\");\n    const uniTokenBalance = web3.utils.fromWei(helperUni, \"ether\");\n\n\n    const STETHTokenConntract = new web3.eth.Contract(IERC.abi, \"0xb7a58582Df45DBa8Ad346c6A51fdb796D64e0898\");\n    const stethTokenBalanceRes = await STETHTokenConntract.methods.balanceOf(this.state.account).call();\n    const helperSteth = await this.getExchangeRate(stethTokenBalanceRes, \"0xb7a58582Df45DBa8Ad346c6A51fdb796D64e0898\");\n    const stethTokenBalance = web3.utils.fromWei(helperSteth, \"ether\");\n\n\n    const AXSTokenConntract = new web3.eth.Contract(IERC.abi, \"0xf34D883EcdE3238B153f38230987a0F4c221a48F\");\n    const axsTokenBalanceRes = await AXSTokenConntract.methods.balanceOf(this.state.account).call();\n    const helperAxs = await this.getExchangeRate(axsTokenBalanceRes, \"0xf34D883EcdE3238B153f38230987a0F4c221a48F\");\n    const axsTokenBalance = web3.utils.fromWei(helperAxs, \"ether\");\n\n    const MANATokenConntract = new web3.eth.Contract(IERC.abi, \"0x1631A54AC95Ecb0085dB6b8ACf80c4Cee72AEB06\");\n    const manaTokenBalanceRes = await MANATokenConntract.methods.balanceOf(this.state.account).call();\n    const helperMana = await this.getExchangeRate(manaTokenBalanceRes, \"0x1631A54AC95Ecb0085dB6b8ACf80c4Cee72AEB06\");\n    const manaTokenBalance = web3.utils.fromWei(helperMana, \"ether\");\n\n    const SANDTokenConntract = new web3.eth.Contract(IERC.abi, \"0x1631A54AC95Ecb0085dB6b8ACf80c4Cee72AEB06\");\n    const sandTokenBalanceRes = await SANDTokenConntract.methods.balanceOf(this.state.account).call();\n    const helperSand = await this.getExchangeRate(sandTokenBalanceRes, \"0x1631A54AC95Ecb0085dB6b8ACf80c4Cee72AEB06\");\n    const sandTokenBalance = web3.utils.fromWei(helperSand, \"ether\");\n\n    const THETATokenConntract = new web3.eth.Contract(IERC.abi, \"0x19A5E53eC7B385dbE2E587Ba989eA2AB8F7EaF1e\");\n    const thetaTokenBalanceRes = await THETATokenConntract.methods.balanceOf(this.state.account).call();\n    const helperTheate = await this.getExchangeRate(thetaTokenBalanceRes, \"0x19A5E53eC7B385dbE2E587Ba989eA2AB8F7EaF1e\");\n    const thetaTokenBalance = web3.utils.fromWei(helperTheate, \"ether\");\n\n    const FLOWTokenConntract = new web3.eth.Contract(IERC.abi, \"0xe5c48084E1974a971Bd5dF4d9B01daCCA86d5567\");\n    const flowTokenBalanceRes = await FLOWTokenConntract.methods.balanceOf(this.state.account).call();\n    const helperFlow = await this.getExchangeRate(flowTokenBalanceRes, \"0xe5c48084E1974a971Bd5dF4d9B01daCCA86d5567\");\n    const flowTokenBalance = web3.utils.fromWei(helperFlow, \"ether\");\n\n    const XTZTokenConntract = new web3.eth.Contract(IERC.abi, \"0xC5De9d5B0BA5b408a3e9530A1BC310d8F2dCC26a\");\n    const xtzTokenBalanceRes = await XTZTokenConntract.methods.balanceOf(this.state.account).call();\n    const helperXtz = await this.getExchangeRate(xtzTokenBalanceRes, \"0xC5De9d5B0BA5b408a3e9530A1BC310d8F2dCC26a\");\n    const xtzTokenBalance = web3.utils.fromWei(helperXtz, \"ether\");\n\n    const GALATokenConntract = new web3.eth.Contract(IERC.abi, \"0x4bf1CE8E4c4c86126E57Fa9fc3f1a9631661641c\");\n    const galaTokenBalanceRes = await GALATokenConntract.methods.balanceOf(this.state.account).call();\n    const helperGala = await this.getExchangeRate(galaTokenBalanceRes, \"0x4bf1CE8E4c4c86126E57Fa9fc3f1a9631661641c\");\n    const galaTokenBalance = web3.utils.fromWei(helperGala, \"ether\");\n\n    const CHZTokenConntract = new web3.eth.Contract(IERC.abi, \"0xdeEC6f0C22970b9b8a47069bE619bfAe646dEe26\");\n    const chzTokenBalanceRes = await CHZTokenConntract.methods.balanceOf(this.state.account).call();\n    const helperChz = await this.getExchangeRate(chzTokenBalanceRes, \"0xdeEC6f0C22970b9b8a47069bE619bfAe646dEe26\");\n    const chzTokenBalance = web3.utils.fromWei(helperChz, \"ether\");\n\n    const ENJTokenConntract = new web3.eth.Contract(IERC.abi, \"0xb08A1959f57b9cC8e5A5F1d329EfD90EE3438F65\");\n    const enjTokenBalanceRes = await ENJTokenConntract.methods.balanceOf(this.state.account).call();\n    const helperEnj = await this.getExchangeRate(enjTokenBalanceRes, \"0xb08A1959f57b9cC8e5A5F1d329EfD90EE3438F65\");\n    const enjTokenBalance = web3.utils.fromWei(helperEnj, \"ether\");\n\n    const ROSETokenConntract = new web3.eth.Contract(IERC.abi, \"0x30c1AC77F4068A063648B549ffF96Ddb9d151325\");\n    const roseTokenBalanceRes = await ROSETokenConntract.methods.balanceOf(this.state.account).call();\n    const helperRose = await this.getExchangeRate(roseTokenBalanceRes, \"0x30c1AC77F4068A063648B549ffF96Ddb9d151325\");\n    const roseTokenBalance = web3.utils.fromWei(helperRose, \"ether\");\n\n    this.setState({\n      nftTokenBalance, defiTokenBalance,\n      btcTokenBalance, ethTokenBalance, shibaTokenBalance, xrpTokenBalance, ltcTokenBalance,\n      daiTokenBalance, lunaTokenBalance, linkTokenBalance, uniTokenBalance, stethTokenBalance,\n      axsTokenBalance, manaTokenBalance, sandTokenBalance, thetaTokenBalance, flowTokenBalance,\n      xtzTokenBalance, galaTokenBalance, chzTokenBalance, enjTokenBalance, roseTokenBalance\n    });\n  }\n\n  getRate = async () => {\n    const rateObj = await this.state.SwapContract.methods.currentRate().call();\n    const rate = rateObj.numerator / rateObj.denominator;\n    this.setState({ rate });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <br></br>\n        <Image src={velvet} size=\"medium\" verticalAlign='middle'></Image>\n\n        <Button onClick={this.getExchangeRateTEST} color=\"red\" type=\"submit\" style={{ margin: \"20px\", width: \"150px\" }}>Invest</Button>\n\n        <Button style={{ position: \"absolute\", top: \"30px\", right: \"20px\" }} onClick={this.connectWallet} color=\"orange\">\n          <Image style={{ \"padding-top\": \"7px\" }} floated=\"left\" size=\"mini\" src={metamask} />\n          <p>Connect to MetaMask</p>\n        </Button>\n\n        <Grid divided='vertically'>\n          <Grid.Row columns={2} style={{ margin: \"20px\" }}>\n            <Grid.Column>\n\n              <Card.Group>\n                <Card style={{ width: \"900px\" }}>\n                  <Card.Content style={{ background: \"#406ccd\" }}>\n                    <Card.Header style={{ color: \"white\" }}>Top 10 Tokens</Card.Header>\n                    <Card.Description>\n\n                      <p style={{ color: \"#C0C0C0\" }}>Rate: In return of investing 1 BNB you will receive {this.state.rate} Top10 Token.</p>\n\n                      <Form onSubmit={this.investDeFi}>\n                        <Input style={{ width: \"300px\", padding: 3 }} required type=\"text\" placeholder=\"BNB amount to invest\" name=\"defiToMint\" onChange={this.handleInputChange}></Input>\n                        <Button color=\"green\" type=\"submit\" style={{ margin: \"20px\", width: \"150px\" }}>Invest</Button>\n                      </Form>\n\n                      <Form>\n                        <Input disabled style={{ width: \"300px\", padding: 3 }} required type=\"text\" placeholder=\"BNB amount to withdraw\"></Input>\n                        <Button disabled color=\"green\" style={{ margin: \"20px\", width: \"150px\" }}>Withdraw</Button>\n                      </Form>\n\n                      <Table style={{ \"margin-left\": \"auto\", \"margin-right\": \"auto\" }} basic='very' celled collapsing>\n                        <Table.Header>\n                          <Table.Row>\n                            <Table.HeaderCell style={{ color: \"white\" }}>Token</Table.HeaderCell>\n                            <Table.HeaderCell style={{ color: \"white\" }}>Balance in BNB</Table.HeaderCell>\n                          </Table.Row>\n                        </Table.Header>\n\n                        <Table.Body>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Top10 Token</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.defiTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Bitcoin (BTC)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.btcTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Ethereum (ETH)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.ethTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Shiba Ibu (SHIB)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.shibaTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Ripple (XRP)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.xrpTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Litecoin (LTC)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.ltcTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Dai (DAI)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.daiTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Terra (LUNA)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.lunaTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Chainlink (LINK)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.linkTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Uniswap (UNI)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.uniTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Lido Staked Ether (STETH)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.stethTokenBalance}</Table.Cell>\n                          </Table.Row>\n                        </Table.Body>\n\n                      </Table>\n\n                    </Card.Description>\n                  </Card.Content>\n                </Card>\n              </Card.Group>\n            </Grid.Column>\n\n\n            <Grid.Column>\n              <Card.Group>\n                <Card style={{ width: \"900px\" }}>\n                  <Card.Content style={{ background: \"#406ccd\" }}>\n                    <Card.Header style={{ color: \"white\" }}>Top 10 Metaverse Tokens</Card.Header>\n                    <Card.Description>\n\n                      <p style={{ color: \"#C0C0C0\" }}>Rate: In return of investing 1 BNB you will receive {this.state.rate} Metaverse Token.</p>\n\n                      <Form onSubmit={this.investNFT}>\n                        <Input style={{ width: \"300px\", padding: 3 }} required type=\"text\" placeholder=\"BNB amount to invest\" name=\"nftToMint\" onChange={this.handleInputChange}></Input>\n                        <Button color=\"green\" type=\"submit\" style={{ margin: \"20px\", width: \"150px\" }}>Invest</Button>\n                      </Form>\n\n                      <Form>\n                        <Input disabled style={{ width: \"300px\", padding: 3 }} required type=\"text\" placeholder=\"BNB amount to withdraw\"></Input>\n                        <Button disabled color=\"green\" style={{ margin: \"20px\", width: \"150px\" }}>Withdraw</Button>\n                      </Form>\n\n                      <Table style={{ \"margin-left\": \"auto\", \"margin-right\": \"auto\" }} basic='very' celled collapsing>\n                        <Table.Header>\n                          <Table.Row>\n                            <Table.HeaderCell style={{ color: \"white\" }}>Token</Table.HeaderCell>\n                            <Table.HeaderCell style={{ color: \"white\" }}>Balance in BNB</Table.HeaderCell>\n                          </Table.Row>\n                        </Table.Header>\n\n                        <Table.Body>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Metaverse Token</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.nftTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Axie Infinity (AXS)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.axsTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Decentraland (MANA)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.manaTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>The Sandbox (SAND)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.sandTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Theta Network (THETA)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.thetaTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Flow (FLOW)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.flowTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Tezos (XTZ)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.xtzTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Gala (GALA)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.galaTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Chiliz (CHZ)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.chzTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Enjin Coin (ENJ)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.enjTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>Oasis Network (ROSE)</Table.Cell>\n                            <Table.Cell style={{ color: \"#C0C0C0\" }}>{this.state.roseTokenBalance}</Table.Cell>\n                          </Table.Row>\n\n                        </Table.Body>\n                      </Table>\n\n                    </Card.Description>\n                  </Card.Content>\n                </Card>\n              </Card.Group>\n\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div >\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}