{"ast":null,"code":"var _jsxFileName = \"/Users/navinalang/prototype/src/App.js\";\nimport React, { Component } from \"react\";\nimport IndexSwap from \"./abis/IndexSwap.json\";\nimport IndexToken from \"./abis/indexToken.json\";\nimport IERC from \"./abis/IERC20.json\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport Web3 from 'web3';\nimport { Grid, Button, Card, Header, Icon, Form, Input, Image, Label, Menu, Table } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport velvet from \"./velvet.png\";\nimport metamask from \"./metamask-fox.svg\";\nimport swal from 'sweetalert';\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = event => {\n      const target = event.target;\n      const value = target.type === \"checkbox\" ? target.checked : target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.connectWallet = async () => {\n      if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum);\n        await window.ethereum.enable();\n        console.log(\"Connected\");\n      } else {\n        alert(\"Metamask not found\");\n      }\n\n      this.loadBlockchainData();\n      window.location.reload();\n    };\n\n    this.investNFT = async () => {\n      const web3 = window.web3;\n      const v = this.state.nftToMint;\n      const amount = web3.utils.toWei(v, \"ether\");\n      const resp = await this.state.SwapContract.methods.investInFundNFT().send({\n        from: this.state.account,\n        value: amount\n      });\n\n      if (resp.status) {\n        swal(\"Investment successfull!\", \"You invested X amount of money!\", \"success\");\n      } else {\n        swal(\"Investment failed!\");\n      }\n\n      this.calcTokenBalances();\n    };\n\n    this.investDeFi = async () => {\n      const web3 = window.web3;\n      const v = this.state.defiToMint;\n      const amount = web3.utils.toWei(v, \"ether\");\n      const resp = await this.state.SwapContract.methods.investInFundDeFi().send({\n        from: this.state.account,\n        value: amount\n      });\n\n      if (resp.status) {\n        swal(\"Investment successfull!\", \"You invested X amount of money!\", \"success\");\n      } else {\n        swal(\"Investment failed!\");\n      }\n\n      this.calcTokenBalances();\n    };\n\n    this.calcTokenBalances = async () => {\n      const web3 = window.web3;\n      const nftTokenBalanceRes = await this.state.NFTTokenContract.methods.balanceOf(this.state.account).call();\n      const nftTokenBalance = web3.utils.fromWei(nftTokenBalanceRes, \"ether\");\n      const defiTokenBalanceRes = await this.state.DeFiTokenContract.methods.balanceOf(this.state.account).call();\n      const defiTokenBalance = web3.utils.fromWei(defiTokenBalanceRes, \"ether\");\n      const USDTokenConntract = new web3.eth.Contract(IERC.abi, \"0x7ef95a0FEE0Dd31b22626fA2e10Ee6A223F8a684\");\n      const usdtTokenBalanceRes = await USDTokenConntract.methods.balanceOf(this.state.account).call();\n      const usdtTokenBalance = web3.utils.fromWei(usdtTokenBalanceRes, \"ether\");\n      const BUSDTokenConntract = new web3.eth.Contract(IERC.abi, \"0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7\");\n      const busdTokenBalanceRes = await BUSDTokenConntract.methods.balanceOf(this.state.account).call();\n      const busdTokenBalance = web3.utils.fromWei(busdTokenBalanceRes, \"ether\");\n      const DAITokenConntract = new web3.eth.Contract(IERC.abi, \"0x8a9424745056Eb399FD19a0EC26A14316684e274\");\n      const daiTokenBalanceRes = await DAITokenConntract.methods.balanceOf(this.state.account).call();\n      const daiTokenBalance = web3.utils.fromWei(daiTokenBalanceRes, \"ether\");\n      this.setState({\n        nftTokenBalance,\n        defiTokenBalance,\n        usdtTokenBalance,\n        busdTokenBalance,\n        daiTokenBalance\n      });\n    };\n\n    this.getRate = async () => {\n      const rateObj = await this.state.SwapContract.methods.currentRate().call();\n      const rate = rateObj.numerator / rateObj.denominator;\n      this.setState({\n        rate\n      });\n    };\n\n    this.state = {\n      account: '',\n      SwapContract: null,\n      NFTTokenContract: null,\n      DeFiTokenContract: null,\n      address: \"\",\n      defiToMint: 0,\n      nftToMint: 0,\n      defiBalance: 0,\n      nftBalance: 0,\n      nftTokenBalance: 0,\n      defiTokenBalance: 0,\n      usdtTokenBalance: 0,\n      busdTokenBalance: 0,\n      daiTokenBalance: 0,\n      rate: 0\n    };\n  }\n\n  async componentDidMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n    await this.calcTokenBalances();\n    await this.getRate();\n  } // first up is to detect ethereum provider\n\n\n  async loadWeb3() {\n    const provider = await detectEthereumProvider(); // modern browsers\n\n    if (provider) {\n      console.log('Ethereum wallet is connected');\n      window.web3 = new Web3(provider);\n    } else {\n      console.log('No ethereum wallet detected');\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const accounts = await window.web3.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    });\n    const SwapContract = new web3.eth.Contract(IndexSwap.abi, \"0x38F6EDad57B87e412f4AdF0119d4f735E46DD802\");\n    const NFTTokenContract = new web3.eth.Contract(IndexToken.abi, \"0x64a9057A0DbddDfB8A81b69ccf7536E4bAde0AbE\");\n    const DeFiTokenContract = new web3.eth.Contract(IndexToken.abi, \"0xFd22F799B90888973dc841a11E6ED0cf24f0b7e4\");\n    this.setState({\n      SwapContract,\n      NFTTokenContract,\n      DeFiTokenContract\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(Image, {\n      src: velvet,\n      size: \"medium\",\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(Button, {\n      style: {\n        position: \"absolute\",\n        top: \"60px\",\n        right: \"20px\"\n      },\n      onClick: this.connectWallet,\n      color: \"orange\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Connect to MetaMask\"), React.createElement(Grid, {\n      divided: \"vertically\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      columns: 2,\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(Card.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: \"900px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      style: {\n        background: \"#406ccd\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Top 5 DeFi Tokens\"), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Rate: In return of investing 1 BNB you will receive \", this.state.rate, \" DeFi Token.\"), React.createElement(Form, {\n      onSubmit: this.investDeFi,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(Input, {\n      style: {\n        width: \"300px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"BNB amount to invest\",\n      name: \"defiToMint\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"green\",\n      type: \"submit\",\n      style: {\n        margin: \"20px\",\n        width: \"150px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Invest\")), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(Input, {\n      disabled: true,\n      style: {\n        width: \"300px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"BNB amount to withdraw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(Button, {\n      disabled: true,\n      color: \"green\",\n      style: {\n        margin: \"20px\",\n        width: \"150px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Withdraw\")), React.createElement(Table, {\n      style: {\n        \"margin-left\": \"auto\",\n        \"margin-right\": \"auto\"\n      },\n      basic: \"very\",\n      celled: true,\n      collapsing: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"Token\"), React.createElement(Table.HeaderCell, {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Balance\"))), React.createElement(Table.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"DeFi Token\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, this.state.defiTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"USDT\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, this.state.usdtTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"BUSD\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, this.state.busdTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \"DAI\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, this.state.daiTokenBalance))))))))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(Card.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: \"900px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      style: {\n        background: \"#406ccd\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"Top 5 NFT Tokens\"), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"Rate: In return of investing 1 BNB you will receive \", this.state.rate, \" NFT Token.\"), React.createElement(Form, {\n      onSubmit: this.investNFT,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(Input, {\n      style: {\n        width: \"300px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"BNB amount to invest\",\n      name: \"nftToMint\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"green\",\n      type: \"submit\",\n      style: {\n        margin: \"20px\",\n        width: \"150px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"Invest\")), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(Input, {\n      disabled: true,\n      style: {\n        width: \"300px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"BNB amount to withdraw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }), React.createElement(Button, {\n      disabled: true,\n      color: \"green\",\n      style: {\n        margin: \"20px\",\n        width: \"150px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"Withdraw\")), React.createElement(Table, {\n      style: {\n        \"margin-left\": \"auto\",\n        \"margin-right\": \"auto\"\n      },\n      basic: \"very\",\n      celled: true,\n      collapsing: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, \"Token\"), React.createElement(Table.HeaderCell, {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"Balance\"))), React.createElement(Table.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \"NFT Token\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, this.state.nftTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, \"USDT\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, this.state.usdtTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, \"BUSD\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, this.state.busdTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, \"DAI\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, this.state.daiTokenBalance))))))))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/navinalang/prototype/src/App.js"],"names":["React","Component","IndexSwap","IndexToken","IERC","detectEthereumProvider","Web3","Grid","Button","Card","Header","Icon","Form","Input","Image","Label","Menu","Table","velvet","swal","App","constructor","props","handleInputChange","event","target","value","type","checked","name","setState","connectWallet","window","ethereum","web3","enable","console","log","alert","loadBlockchainData","location","reload","investNFT","v","state","nftToMint","amount","utils","toWei","resp","SwapContract","methods","investInFundNFT","send","from","account","status","calcTokenBalances","investDeFi","defiToMint","investInFundDeFi","nftTokenBalanceRes","NFTTokenContract","balanceOf","call","nftTokenBalance","fromWei","defiTokenBalanceRes","DeFiTokenContract","defiTokenBalance","USDTokenConntract","eth","Contract","abi","usdtTokenBalanceRes","usdtTokenBalance","BUSDTokenConntract","busdTokenBalanceRes","busdTokenBalance","DAITokenConntract","daiTokenBalanceRes","daiTokenBalance","getRate","rateObj","currentRate","rate","numerator","denominator","address","defiBalance","nftBalance","componentDidMount","loadWeb3","provider","accounts","getAccounts","render","position","top","right","margin","width","background","color","padding"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport IndexSwap from \"./abis/IndexSwap.json\";\nimport IndexToken from \"./abis/indexToken.json\";\nimport IERC from \"./abis/IERC20.json\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport Web3 from 'web3';\nimport { Grid, Button, Card, Header, Icon, Form, Input, Image, Label, Menu, Table } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport velvet from \"./velvet.png\";\nimport metamask from \"./metamask-fox.svg\";\nimport swal from 'sweetalert';\n\nimport \"./App.css\";\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '',\n      SwapContract: null,\n      NFTTokenContract: null,\n      DeFiTokenContract: null,\n      address: \"\",\n\n      defiToMint: 0,\n      nftToMint: 0,\n      defiBalance: 0,\n      nftBalance: 0,\n\n      nftTokenBalance: 0,\n      defiTokenBalance: 0,\n      usdtTokenBalance: 0,\n      busdTokenBalance: 0,\n      daiTokenBalance: 0,\n\n      rate: 0\n    }\n  }\n\n  async componentDidMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n    await this.calcTokenBalances();\n    await this.getRate();\n  }\n\n  // first up is to detect ethereum provider\n  async loadWeb3() {\n    const provider = await detectEthereumProvider();\n\n    // modern browsers\n    if (provider) {\n      console.log('Ethereum wallet is connected');\n\n      window.web3 = new Web3(provider);\n    } else {\n      console.log('No ethereum wallet detected');\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const accounts = await window.web3.eth.getAccounts();\n    this.setState({ account: accounts[0] })\n    const SwapContract = new web3.eth.Contract(IndexSwap.abi, \"0x38F6EDad57B87e412f4AdF0119d4f735E46DD802\");\n    const NFTTokenContract = new web3.eth.Contract(IndexToken.abi, \"0x64a9057A0DbddDfB8A81b69ccf7536E4bAde0AbE\");\n    const DeFiTokenContract = new web3.eth.Contract(IndexToken.abi, \"0xFd22F799B90888973dc841a11E6ED0cf24f0b7e4\");\n    this.setState({ SwapContract, NFTTokenContract, DeFiTokenContract });\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    })\n  }\n\n  connectWallet = async () =>{\n    if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum);\n        await window.ethereum.enable();\n        console.log(\"Connected\");\n      } else {\n        alert(\"Metamask not found\");\n      }\n\n      this.loadBlockchainData();\n      window.location.reload()\n  }\n\n  investNFT = async() => {\n    const web3 = window.web3;\n    const v = this.state.nftToMint;\n    const amount = web3.utils.toWei(v, \"ether\");\n    const resp = await this.state.SwapContract.methods.investInFundNFT().send({from: this.state.account, value: amount});\n    if(resp.status) {\n      swal(\"Investment successfull!\", \"You invested X amount of money!\", \"success\");\n\n    } else {\n      swal(\"Investment failed!\");\n    }\n\n    this.calcTokenBalances();\n  }\n\n  investDeFi = async() => {\n    const web3 = window.web3;\n    const v = this.state.defiToMint;\n    const amount = web3.utils.toWei(v, \"ether\");\n    const resp = await this.state.SwapContract.methods.investInFundDeFi().send({from: this.state.account, value: amount});\n    if(resp.status) {\n      swal(\"Investment successfull!\", \"You invested X amount of money!\", \"success\");\n\n    } else {\n      swal(\"Investment failed!\");\n    }\n\n    this.calcTokenBalances();\n  }\n\n  calcTokenBalances = async() => {\n    const web3 = window.web3;\n\n    const nftTokenBalanceRes = await this.state.NFTTokenContract.methods.balanceOf(this.state.account).call();\n    const nftTokenBalance = web3.utils.fromWei(nftTokenBalanceRes, \"ether\");\n\n    const defiTokenBalanceRes = await this.state.DeFiTokenContract.methods.balanceOf(this.state.account).call();\n    const defiTokenBalance = web3.utils.fromWei(defiTokenBalanceRes, \"ether\");\n\n    const USDTokenConntract = new web3.eth.Contract(IERC.abi, \"0x7ef95a0FEE0Dd31b22626fA2e10Ee6A223F8a684\");\n    const usdtTokenBalanceRes = await USDTokenConntract.methods.balanceOf(this.state.account).call();\n    const usdtTokenBalance = web3.utils.fromWei(usdtTokenBalanceRes, \"ether\");\n\n    const BUSDTokenConntract = new web3.eth.Contract(IERC.abi, \"0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7\");\n    const busdTokenBalanceRes = await BUSDTokenConntract.methods.balanceOf(this.state.account).call();\n    const busdTokenBalance = web3.utils.fromWei(busdTokenBalanceRes, \"ether\");\n\n    const DAITokenConntract = new web3.eth.Contract(IERC.abi, \"0x8a9424745056Eb399FD19a0EC26A14316684e274\");\n    const daiTokenBalanceRes = await DAITokenConntract.methods.balanceOf(this.state.account).call();\n    const daiTokenBalance = web3.utils.fromWei(daiTokenBalanceRes, \"ether\");\n    \n    this.setState({ nftTokenBalance, defiTokenBalance, usdtTokenBalance, busdTokenBalance,daiTokenBalance });\n  }\n\n  getRate = async() => {\n    const rateObj = await this.state.SwapContract.methods.currentRate().call();\n    const rate = rateObj.numerator / rateObj.denominator;\n    this.setState({ rate });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <br></br>\n        <Image src={velvet} size=\"medium\" verticalAlign='middle'></Image>\n\n        <Button style={{position:\"absolute\", top:\"60px\", right:\"20px\"}} onClick={this.connectWallet} color=\"orange\">\n          Connect to MetaMask\n        </Button>\n\n        <Grid divided='vertically'>\n          <Grid.Row columns={2} style={{ margin: \"20px\" }}>\n            <Grid.Column>\n\n              <Card.Group>\n                <Card style={{ width: \"900px\" }}>\n                  <Card.Content style={{ background: \"#406ccd\" }}>\n                    <Card.Header style={{color: \"white\"}}>Top 5 DeFi Tokens</Card.Header>\n                    <Card.Description>\n\n                    <p style={{color: \"#C0C0C0\"}}>Rate: In return of investing 1 BNB you will receive {this.state.rate} DeFi Token.\n\n</p>\n\n                      <Form onSubmit={this.investDeFi}>\n                        <Input style={{ width: \"300px\", padding: 3 }} required type=\"text\" placeholder=\"BNB amount to invest\" name=\"defiToMint\" onChange={this.handleInputChange}></Input>\n                        <Button color=\"green\" type=\"submit\" style={{ margin: \"20px\", width: \"150px\" }}>Invest</Button>\n                      </Form>\n\n                      <Form>\n                        <Input disabled style={{ width: \"300px\", padding: 3 }} required type=\"text\" placeholder=\"BNB amount to withdraw\"></Input>\n                        <Button disabled color=\"green\" style={{ margin: \"20px\", width: \"150px\" }}>Withdraw</Button>\n                      </Form>\n\n                      <Table style={{\"margin-left\": \"auto\", \"margin-right\": \"auto\"}} basic='very' celled collapsing>\n                        <Table.Header>\n                          <Table.Row>\n                            <Table.HeaderCell style={{color: \"white\"}}>Token</Table.HeaderCell>\n                            <Table.HeaderCell style={{color: \"white\"}}>Balance</Table.HeaderCell>\n                          </Table.Row>\n                        </Table.Header>\n\n                        <Table.Body>\n                          <Table.Row>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>DeFi Token</Table.Cell>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>{this.state.defiTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>USDT</Table.Cell>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>{this.state.usdtTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>BUSD</Table.Cell>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>{this.state.busdTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>DAI</Table.Cell>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>{this.state.daiTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          \n                        </Table.Body>\n                      </Table>\n            \n                    </Card.Description>\n                  </Card.Content>\n                </Card>\n              </Card.Group>\n            </Grid.Column>\n\n\n            <Grid.Column>\n              <Card.Group>\n                <Card style={{ width: \"900px\" }}>\n                  <Card.Content style={{ background: \"#406ccd\" }}>\n                    <Card.Header style={{color: \"white\"}}>Top 5 NFT Tokens</Card.Header>\n                    <Card.Description>\n\n                    <p style={{color: \"#C0C0C0\"}}>Rate: In return of investing 1 BNB you will receive {this.state.rate} NFT Token.</p>\n\n                      <Form onSubmit={this.investNFT}>\n                        <Input style={{ width: \"300px\", padding: 3 }} required type=\"text\" placeholder=\"BNB amount to invest\" name=\"nftToMint\" onChange={this.handleInputChange}></Input>\n                        <Button color=\"green\" type=\"submit\" style={{ margin: \"20px\", width: \"150px\" }}>Invest</Button>\n                      </Form>\n\n                      <Form>\n                        <Input disabled style={{ width: \"300px\", padding: 3 }} required type=\"text\" placeholder=\"BNB amount to withdraw\"></Input>\n                        <Button disabled color=\"green\" style={{ margin: \"20px\", width: \"150px\" }}>Withdraw</Button>\n                      </Form>\n\n                      <Table style={{\"margin-left\": \"auto\", \"margin-right\": \"auto\"}} basic='very' celled collapsing>\n                        <Table.Header>\n                          <Table.Row>\n                            <Table.HeaderCell style={{color: \"white\"}}>Token</Table.HeaderCell>\n                            <Table.HeaderCell style={{color: \"white\"}}>Balance</Table.HeaderCell>\n                          </Table.Row>\n                        </Table.Header>\n\n                        <Table.Body>\n                          <Table.Row>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>NFT Token</Table.Cell>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>{this.state.nftTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>USDT</Table.Cell>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>{this.state.usdtTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>BUSD</Table.Cell>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>{this.state.busdTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>DAI</Table.Cell>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>{this.state.daiTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          \n                        </Table.Body>\n                      </Table>\n\n                    </Card.Description>\n                  </Card.Content>\n                </Card>\n              </Card.Group>\n\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div >\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}