{"ast":null,"code":"var _jsxFileName = \"/Users/navinalang/Navina-workgroup/05_create_and_burn/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport Factory from \"./abis/Factory.json\";\nimport Router from \"./abis/Router.json\";\nimport CreateTokens from \"./abis/CreateTokens.json\";\nimport TokenA from \"./abis/TokenA.json\";\nimport TokenB from \"./abis/TokenB.json\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport Web3 from 'web3';\nimport { Button, Header, HeaderSubheader } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = event => {\n      const target = event.target;\n      const value = target.type === \"checkbox\" ? target.checked : target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.createPool = async () => {\n      await this.state.TokenContract.methods.create().send({\n        from: this.state.account\n      });\n      const tokenA = await this.state.TokenContract.methods.tokenA().call();\n      const tokenB = await this.state.TokenContract.methods.tokenB().call();\n      const pairAddress = await this.state.FacforyContract.methods.createPair(tokenA, tokenB).call();\n      this.setState({\n        tokenA,\n        tokenB,\n        pairAddress\n      });\n    };\n\n    this.approveRouter = async () => {\n      const web3 = window.web3;\n      const tokenAContract = new web3.eth.Contract(TokenA.abi, this.state.tokenA);\n      const tokenBContract = new web3.eth.Contract(TokenB.abi, this.state.tokenB);\n      const routerAddress = await this.state.RouterContract.methods.address().call();\n      await tokenAContract.methods.approve(routerAddress, 10000).send({\n        from: this.state.account\n      });\n      await tokenBContract.methods.approve(routerAddress, 10000).send({\n        from: this.state.account\n      });\n    };\n\n    this.state = {\n      account: '',\n      FacforyContract: null,\n      RouterContract: null,\n      TokenContract: null,\n      address: \"\",\n      tokenA: \"\",\n      tokenB: \"\",\n      pairAddress: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  } // first up is to detect ethereum provider\n\n\n  async loadWeb3() {\n    const provider = await detectEthereumProvider(); // modern browsers\n\n    if (provider) {\n      console.log('Ethereum wallet is connected');\n      window.web3 = new Web3(provider);\n    } else {\n      console.log('No ethereum wallet detected');\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const accounts = await window.web3.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    });\n    const FacforyContract = new web3.eth.Contract(Factory.abi, \"0x6725F303b657a9451d8BA641348b6761A6CC7a17\");\n    const RouterContract = new web3.eth.Contract(Router.abi, \"0xD99D1c33F9fC3444f8101754aBC46c52416550D1\");\n    const TokenContract = new web3.eth.Contract(CreateTokens.abi, \"0x80DbA59CbEE267Dde7dE82323Ad5076dD30Eb55a\");\n    this.setState({\n      FacforyContract,\n      RouterContract,\n      TokenContract\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(Header, {\n      as: \"h1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Velvet.Capital\"), React.createElement(HeaderSubheader, {\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Create and Burn\"), React.createElement(Button, {\n      onClick: this.createPool,\n      color: \"green\",\n      type: \"submit\",\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Create Pool!\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/navinalang/Navina-workgroup/05_create_and_burn/client/src/App.js"],"names":["React","Component","Factory","Router","CreateTokens","TokenA","TokenB","detectEthereumProvider","Web3","Button","Header","HeaderSubheader","App","constructor","props","handleInputChange","event","target","value","type","checked","name","setState","createPool","state","TokenContract","methods","create","send","from","account","tokenA","call","tokenB","pairAddress","FacforyContract","createPair","approveRouter","web3","window","tokenAContract","eth","Contract","abi","tokenBContract","routerAddress","RouterContract","address","approve","componentDidMount","loadWeb3","loadBlockchainData","provider","console","log","accounts","getAccounts","render","margin"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Factory from \"./abis/Factory.json\";\nimport Router from \"./abis/Router.json\";\nimport CreateTokens from \"./abis/CreateTokens.json\";\nimport TokenA from \"./abis/TokenA.json\"\nimport TokenB from \"./abis/TokenB.json\"\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport Web3 from 'web3';\nimport { Button, Header, HeaderSubheader } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\n\n\nimport \"./App.css\";\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '',\n      FacforyContract: null,\n      RouterContract: null,\n      TokenContract: null,\n      address: \"\",\n      tokenA: \"\",\n      tokenB: \"\",\n      pairAddress: \"\",\n    }\n  }\n\n  async componentDidMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n\n  // first up is to detect ethereum provider\n  async loadWeb3() {\n    const provider = await detectEthereumProvider();\n\n    // modern browsers\n    if (provider) {\n      console.log('Ethereum wallet is connected');\n\n      window.web3 = new Web3(provider);\n    } else {\n      console.log('No ethereum wallet detected');\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const accounts = await window.web3.eth.getAccounts();\n    this.setState({ account: accounts[0] })\n    const FacforyContract = new web3.eth.Contract(Factory.abi, \"0x6725F303b657a9451d8BA641348b6761A6CC7a17\");\n    const RouterContract = new web3.eth.Contract(Router.abi, \"0xD99D1c33F9fC3444f8101754aBC46c52416550D1\");\n    const TokenContract = new web3.eth.Contract(CreateTokens.abi, \"0x80DbA59CbEE267Dde7dE82323Ad5076dD30Eb55a\");\n    this.setState({ FacforyContract, RouterContract, TokenContract });\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    })\n  }\n\n  createPool = async() => {\n    await this.state.TokenContract.methods.create().send({ from: this.state.account });\n    const tokenA = await this.state.TokenContract.methods.tokenA().call();\n    const tokenB = await this.state.TokenContract.methods.tokenB().call();\n    const pairAddress = await this.state.FacforyContract.methods.createPair(tokenA, tokenB).call();\n    this.setState({ tokenA, tokenB, pairAddress})\n  }\n\n  approveRouter = async() => {\n    const web3 = window.web3;\n    const tokenAContract = new web3.eth.Contract(TokenA.abi, this.state.tokenA);\n    const tokenBContract = new web3.eth.Contract(TokenB.abi, this.state.tokenB);\n\n    const routerAddress = await this.state.RouterContract.methods.address().call();\n\n    await tokenAContract.methods.approve(routerAddress, 10000).send({ from: this.state.account });\n    await tokenBContract.methods.approve(routerAddress, 10000).send({ from: this.state.account });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <br></br>\n        <Header as='h1'>Velvet.Capital</Header>\n        <HeaderSubheader as='h2'>Create and Burn</HeaderSubheader>\n\n        <Button onClick={this.createPool} color=\"green\" type=\"submit\" style={{ margin: \"20px\" }}>Create Pool!</Button><br></br>\n\n      </div >\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}