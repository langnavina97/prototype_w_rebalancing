{"ast":null,"code":"var _jsxFileName = \"/Users/navinalang/prototype/src/App.js\";\nimport React, { Component } from \"react\";\nimport IndexSwap from \"./abis/IndexSwap.json\";\nimport IndexToken from \"./abis/indexToken.json\";\nimport IERC from \"./abis/IERC20.json\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport Web3 from 'web3';\nimport { Grid, Button, Card, Header, HeaderSubheader, Form, Input } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = event => {\n      const target = event.target;\n      const value = target.type === \"checkbox\" ? target.checked : target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.investNFT = async () => {\n      this.loadBlockchainData();\n      const web3 = window.web3;\n      const v = this.state.nftToMint;\n      const amount = web3.utils.toWei(v, \"ether\");\n      const resp = await this.state.SwapContract.methods.investInFundNFT().send({\n        from: this.state.account,\n        value: amount\n      });\n\n      if (resp.status) {\n        window.alert(\"Investment successful!\");\n      } else {\n        window.alert(\"Investment failed!\");\n      }\n\n      this.calcTokenBalances();\n    };\n\n    this.investDeFi = async () => {\n      this.loadBlockchainData();\n      const web3 = window.web3;\n      const v = this.state.defiToMint;\n      const amount = web3.utils.toWei(v, \"ether\");\n      const resp = await this.state.SwapContract.methods.investInFundDeFi().send({\n        from: this.state.account,\n        value: amount\n      });\n\n      if (resp.status) {\n        window.alert(\"Investment successful!\");\n      } else {\n        window.alert(\"Investment failed!\");\n      }\n\n      this.calcTokenBalances();\n    };\n\n    this.calcTokenBalances = async () => {\n      this.loadBlockchainData();\n      const web3 = window.web3;\n      const nftTokenBalanceRes = await this.state.NFTTokenContract.methods.balanceOf(this.state.account).call();\n      const nftTokenBalance = web3.utils.fromWei(nftTokenBalanceRes, \"ether\");\n      const defiTokenBalanceRes = await this.state.DeFiTokenContract.methods.balanceOf(this.state.account).call();\n      const defiTokenBalance = web3.utils.fromWei(defiTokenBalanceRes, \"ether\");\n      const USDTokenConntract = new web3.eth.Contract(IERC.abi, \"0x7ef95a0FEE0Dd31b22626fA2e10Ee6A223F8a684\");\n      const usdtTokenBalanceRes = await USDTokenConntract.methods.balanceOf(this.state.account).call();\n      const usdtTokenBalance = web3.utils.fromWei(usdtTokenBalanceRes, \"ether\");\n      const BUSDTokenConntract = new web3.eth.Contract(IERC.abi, \"0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7\");\n      const busdTokenBalanceRes = await BUSDTokenConntract.methods.balanceOf(this.state.account).call();\n      const busdTokenBalance = web3.utils.fromWei(busdTokenBalanceRes, \"ether\");\n      const DAITokenConntract = new web3.eth.Contract(IERC.abi, \"0x8a9424745056Eb399FD19a0EC26A14316684e274\");\n      const daiTokenBalanceRes = await DAITokenConntract.methods.balanceOf(this.state.account).call();\n      const daiTokenBalance = web3.utils.fromWei(daiTokenBalanceRes, \"ether\");\n      this.setState({\n        nftTokenBalance,\n        defiTokenBalance,\n        usdtTokenBalance,\n        busdTokenBalance,\n        daiTokenBalance\n      });\n    };\n\n    this.getRate = async () => {\n      this.loadBlockchainData();\n      const rateObj = await this.state.SwapContract.methods.currentRate().call();\n      const rate = rateObj.numerator / rateObj.denominator;\n      this.setState({\n        rate\n      });\n    };\n\n    this.state = {\n      account: '',\n      SwapContract: null,\n      NFTTokenContract: null,\n      DeFiTokenContract: null,\n      address: \"\",\n      defiToMint: 0,\n      nftToMint: 0,\n      defiBalance: 0,\n      nftBalance: 0,\n      nftTokenBalance: 0,\n      defiTokenBalance: 0,\n      usdtTokenBalance: 0,\n      busdTokenBalance: 0,\n      daiTokenBalance: 0,\n      rate: 0\n    };\n  }\n\n  async componentDidMount() {\n    await this.calcTokenBalances();\n    await this.getRate();\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const accounts = await window.web3.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    });\n    const SwapContract = new web3.eth.Contract(IndexSwap.abi, \"0x38F6EDad57B87e412f4AdF0119d4f735E46DD802\");\n    const NFTTokenContract = new web3.eth.Contract(IndexToken.abi, \"0x64a9057A0DbddDfB8A81b69ccf7536E4bAde0AbE\");\n    const DeFiTokenContract = new web3.eth.Contract(IndexToken.abi, \"0xFd22F799B90888973dc841a11E6ED0cf24f0b7e4\");\n    this.setState({\n      SwapContract,\n      NFTTokenContract,\n      DeFiTokenContract\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(Header, {\n      style: {\n        color: \"white\"\n      },\n      as: \"h1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Velvet.Capital\"), React.createElement(Grid, {\n      divided: \"vertically\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      columns: 2,\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Card.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: \"900px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      style: {\n        background: \"#406ccd\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"DeFi\"), React.createElement(Card.Meta, {\n      style: {\n        color: \"#B0B0B0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Top 5 DeFi tokens\"), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Rate: In return of investing 1 BNB you receive \", this.state.rate, \" DeFi Tokens.\"), React.createElement(Form, {\n      onSubmit: this.investDeFi,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Input, {\n      style: {\n        width: \"300px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"BNB amount to invest\",\n      name: \"defiToMint\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"green\",\n      type: \"submit\",\n      style: {\n        margin: \"20px\",\n        width: \"150px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Invest\")), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Input, {\n      disabled: true,\n      style: {\n        width: \"300px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"BNB amount to withdraw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(Button, {\n      disabled: true,\n      color: \"green\",\n      style: {\n        margin: \"20px\",\n        width: \"150px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Withdraw\")), React.createElement(\"h5\", {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Balances\"), React.createElement(\"p\", {\n      style: {\n        color: \"#C0C0C0\t\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"DeFi Token: \", this.state.defiTokenBalance), React.createElement(\"p\", {\n      style: {\n        color: \"#C0C0C0\t\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"USDT Token: \", this.state.usdtTokenBalance), React.createElement(\"p\", {\n      style: {\n        color: \"#C0C0C0\t\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"BUSD Token: \", this.state.busdTokenBalance), React.createElement(\"p\", {\n      style: {\n        color: \"#C0C0C0\t\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"DAI Token: \", this.state.daiTokenBalance)))))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(Card.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: \"900px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      style: {\n        background: \"#406ccd\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"NFT\"), React.createElement(Card.Meta, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Top 5 NFT tokens\"), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Rate: In return of investing 1 BNB you receive \", this.state.rate, \" NFT Tokens.\"), React.createElement(Form, {\n      onSubmit: this.investNFT,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(Input, {\n      style: {\n        width: \"300px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"BNB amount to invest\",\n      name: \"nftToMint\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"green\",\n      type: \"submit\",\n      style: {\n        margin: \"20px\",\n        width: \"150px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Invest\")), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(Input, {\n      disabled: true,\n      style: {\n        width: \"300px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"BNB amount to withdraw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(Button, {\n      disabled: true,\n      color: \"green\",\n      style: {\n        margin: \"20px\",\n        width: \"150px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Withdraw\")), React.createElement(\"h5\", {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Balances\"), React.createElement(\"p\", {\n      style: {\n        color: \"#C0C0C0\t\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"NFT Token: \", this.state.nftTokenBalance), React.createElement(\"p\", {\n      style: {\n        color: \"#C0C0C0\t\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"USDT Token: \", this.state.usdtTokenBalance), React.createElement(\"p\", {\n      style: {\n        color: \"#C0C0C0\t\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"BUSD Token: \", this.state.busdTokenBalance), React.createElement(\"p\", {\n      style: {\n        color: \"#C0C0C0\t\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"DAI Token: \", this.state.daiTokenBalance)))))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/navinalang/prototype/src/App.js"],"names":["React","Component","IndexSwap","IndexToken","IERC","detectEthereumProvider","Web3","Grid","Button","Card","Header","HeaderSubheader","Form","Input","App","constructor","props","handleInputChange","event","target","value","type","checked","name","setState","investNFT","loadBlockchainData","web3","window","v","state","nftToMint","amount","utils","toWei","resp","SwapContract","methods","investInFundNFT","send","from","account","status","alert","calcTokenBalances","investDeFi","defiToMint","investInFundDeFi","nftTokenBalanceRes","NFTTokenContract","balanceOf","call","nftTokenBalance","fromWei","defiTokenBalanceRes","DeFiTokenContract","defiTokenBalance","USDTokenConntract","eth","Contract","abi","usdtTokenBalanceRes","usdtTokenBalance","BUSDTokenConntract","busdTokenBalanceRes","busdTokenBalance","DAITokenConntract","daiTokenBalanceRes","daiTokenBalance","getRate","rateObj","currentRate","rate","numerator","denominator","address","defiBalance","nftBalance","componentDidMount","accounts","getAccounts","render","color","margin","width","background","padding"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport IndexSwap from \"./abis/IndexSwap.json\";\nimport IndexToken from \"./abis/indexToken.json\";\nimport IERC from \"./abis/IERC20.json\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport Web3 from 'web3';\nimport { Grid, Button, Card, Header, HeaderSubheader, Form, Input } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\n\n\nimport \"./App.css\";\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '',\n      SwapContract: null,\n      NFTTokenContract: null,\n      DeFiTokenContract: null,\n      address: \"\",\n\n      defiToMint: 0,\n      nftToMint: 0,\n      defiBalance: 0,\n      nftBalance: 0,\n\n      nftTokenBalance: 0,\n      defiTokenBalance: 0,\n      usdtTokenBalance: 0,\n      busdTokenBalance: 0,\n      daiTokenBalance: 0,\n\n      rate: 0\n    }\n  }\n\n  async componentDidMount() {\n    await this.calcTokenBalances();\n    await this.getRate();\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const accounts = await window.web3.eth.getAccounts();\n    this.setState({ account: accounts[0] })\n    const SwapContract = new web3.eth.Contract(IndexSwap.abi, \"0x38F6EDad57B87e412f4AdF0119d4f735E46DD802\");\n    const NFTTokenContract = new web3.eth.Contract(IndexToken.abi, \"0x64a9057A0DbddDfB8A81b69ccf7536E4bAde0AbE\");\n    const DeFiTokenContract = new web3.eth.Contract(IndexToken.abi, \"0xFd22F799B90888973dc841a11E6ED0cf24f0b7e4\");\n    this.setState({ SwapContract, NFTTokenContract, DeFiTokenContract });\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    })\n  }\n\n  investNFT = async() => {\n    this.loadBlockchainData();\n    const web3 = window.web3;\n    const v = this.state.nftToMint;\n    const amount = web3.utils.toWei(v, \"ether\");\n    const resp = await this.state.SwapContract.methods.investInFundNFT().send({from: this.state.account, value: amount});\n    if(resp.status) {\n      window.alert(\"Investment successful!\");\n    } else {\n      window.alert(\"Investment failed!\");\n    }\n\n    this.calcTokenBalances();\n  }\n\n  investDeFi = async() => {\n    this.loadBlockchainData();\n    const web3 = window.web3;\n    const v = this.state.defiToMint;\n    const amount = web3.utils.toWei(v, \"ether\");\n    const resp = await this.state.SwapContract.methods.investInFundDeFi().send({from: this.state.account, value: amount});\n    if(resp.status) {\n      window.alert(\"Investment successful!\");\n    } else {\n      window.alert(\"Investment failed!\");\n    }\n\n    this.calcTokenBalances();\n  }\n\n  calcTokenBalances = async() => {\n    this.loadBlockchainData();\n    const web3 = window.web3;\n\n    const nftTokenBalanceRes = await this.state.NFTTokenContract.methods.balanceOf(this.state.account).call();\n    const nftTokenBalance = web3.utils.fromWei(nftTokenBalanceRes, \"ether\");\n\n    const defiTokenBalanceRes = await this.state.DeFiTokenContract.methods.balanceOf(this.state.account).call();\n    const defiTokenBalance = web3.utils.fromWei(defiTokenBalanceRes, \"ether\");\n\n    const USDTokenConntract = new web3.eth.Contract(IERC.abi, \"0x7ef95a0FEE0Dd31b22626fA2e10Ee6A223F8a684\");\n    const usdtTokenBalanceRes = await USDTokenConntract.methods.balanceOf(this.state.account).call();\n    const usdtTokenBalance = web3.utils.fromWei(usdtTokenBalanceRes, \"ether\");\n\n    const BUSDTokenConntract = new web3.eth.Contract(IERC.abi, \"0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7\");\n    const busdTokenBalanceRes = await BUSDTokenConntract.methods.balanceOf(this.state.account).call();\n    const busdTokenBalance = web3.utils.fromWei(busdTokenBalanceRes, \"ether\");\n\n    const DAITokenConntract = new web3.eth.Contract(IERC.abi, \"0x8a9424745056Eb399FD19a0EC26A14316684e274\");\n    const daiTokenBalanceRes = await DAITokenConntract.methods.balanceOf(this.state.account).call();\n    const daiTokenBalance = web3.utils.fromWei(daiTokenBalanceRes, \"ether\");\n    \n    this.setState({ nftTokenBalance, defiTokenBalance, usdtTokenBalance, busdTokenBalance,daiTokenBalance });\n  }\n\n  getRate = async() => {\n    this.loadBlockchainData();\n    const rateObj = await this.state.SwapContract.methods.currentRate().call();\n    const rate = rateObj.numerator / rateObj.denominator;\n    this.setState({ rate });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <br></br>\n        <Header style={{color: \"white\"}} as='h1'>Velvet.Capital</Header>\n\n        <Grid divided='vertically'>\n          <Grid.Row columns={2} style={{ margin: \"20px\" }}>\n            <Grid.Column>\n\n              <Card.Group>\n                <Card style={{ width: \"900px\" }}>\n                  <Card.Content style={{ background: \"#406ccd\" }}>\n                    <Card.Header style={{color: \"white\"}}>DeFi</Card.Header>\n                    <Card.Meta style={{color: \"#B0B0B0\"}}>Top 5 DeFi tokens</Card.Meta>\n                    <Card.Description>\n\n                    <p style={{color: \"#C0C0C0\"}}>Rate: In return of investing 1 BNB you receive {this.state.rate} DeFi Tokens.</p>\n\n                      <Form onSubmit={this.investDeFi}>\n                        <Input style={{ width: \"300px\", padding: 3 }} required type=\"text\" placeholder=\"BNB amount to invest\" name=\"defiToMint\" onChange={this.handleInputChange}></Input>\n                        <Button color=\"green\" type=\"submit\" style={{ margin: \"20px\", width: \"150px\" }}>Invest</Button>\n                      </Form>\n\n                      <Form>\n                        <Input disabled style={{ width: \"300px\", padding: 3 }} required type=\"text\" placeholder=\"BNB amount to withdraw\"></Input>\n                        <Button disabled color=\"green\" style={{ margin: \"20px\", width: \"150px\" }}>Withdraw</Button>\n                      </Form>\n\n                      <h5 style={{color: \"white\"}}>Balances</h5>\n\n                      <p style={{color: \"#C0C0C0\t\"}}>DeFi Token: {this.state.defiTokenBalance}</p>\n                      <p style={{color: \"#C0C0C0\t\"}}>USDT Token: {this.state.usdtTokenBalance}</p>\n                      <p style={{color: \"#C0C0C0\t\"}}>BUSD Token: {this.state.busdTokenBalance}</p>\n                      <p style={{color: \"#C0C0C0\t\"}}>DAI Token: {this.state.daiTokenBalance}</p>\n            \n                    </Card.Description>\n                  </Card.Content>\n                </Card>\n              </Card.Group>\n            </Grid.Column>\n\n\n            <Grid.Column>\n              <Card.Group>\n                <Card style={{ width: \"900px\" }}>\n                  <Card.Content style={{ background: \"#406ccd\" }}>\n                    <Card.Header style={{color: \"white\"}}>NFT</Card.Header>\n                    <Card.Meta style={{color: \"#C0C0C0\"}}>Top 5 NFT tokens</Card.Meta>\n                    <Card.Description>\n\n                    <p style={{color: \"#C0C0C0\"}}>Rate: In return of investing 1 BNB you receive {this.state.rate} NFT Tokens.</p>\n\n                      <Form onSubmit={this.investNFT}>\n                        <Input style={{ width: \"300px\", padding: 3 }} required type=\"text\" placeholder=\"BNB amount to invest\" name=\"nftToMint\" onChange={this.handleInputChange}></Input>\n                        <Button color=\"green\" type=\"submit\" style={{ margin: \"20px\", width: \"150px\" }}>Invest</Button>\n                      </Form>\n\n                      <Form>\n                        <Input disabled style={{ width: \"300px\", padding: 3 }} required type=\"text\" placeholder=\"BNB amount to withdraw\"></Input>\n                        <Button disabled color=\"green\" style={{ margin: \"20px\", width: \"150px\" }}>Withdraw</Button>\n                      </Form>\n\n                      <h5 style={{color: \"white\"}}>Balances</h5>\n\n                      <p style={{color: \"#C0C0C0\t\"}}>NFT Token: {this.state.nftTokenBalance}</p>\n                      <p style={{color: \"#C0C0C0\t\"}}>USDT Token: {this.state.usdtTokenBalance}</p>\n                      <p style={{color: \"#C0C0C0\t\"}}>BUSD Token: {this.state.busdTokenBalance}</p>\n                      <p style={{color: \"#C0C0C0\t\"}}>DAI Token: {this.state.daiTokenBalance}</p>\n\n                    </Card.Description>\n                  </Card.Content>\n                </Card>\n              </Card.Group>\n\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div >\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}