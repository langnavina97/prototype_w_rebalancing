{"ast":null,"code":"var _jsxFileName = \"/Users/navinalang/prototype/src/App.js\";\nimport React, { Component } from \"react\";\nimport IndexSwap from \"./abis/IndexSwap.json\";\nimport IndexToken from \"./abis/indexToken.json\";\nimport IERC from \"./abis/IERC20.json\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport Web3 from 'web3';\nimport { Grid, Button, Card, Form, Input, Image, Label, Menu, Table } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport velvet from \"./velvet.png\";\nimport metamask from \"./metamask-fox.svg\";\nimport swal from 'sweetalert';\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = event => {\n      const target = event.target;\n      const value = target.type === \"checkbox\" ? target.checked : target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.connectWallet = async () => {\n      if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum);\n        await window.ethereum.enable();\n        console.log(\"Connected\");\n      } else {\n        alert(\"Metamask not found\");\n      }\n\n      this.loadBlockchainData();\n      window.location.reload();\n    };\n\n    this.investNFT = async () => {\n      const web3 = window.web3;\n      const v = this.state.nftToMint;\n      const amount = web3.utils.toWei(v, \"ether\");\n      const resp = await this.state.SwapContract.methods.investInFundNFT().send({\n        from: this.state.account,\n        value: amount\n      });\n\n      if (resp.status) {\n        swal(\"Investment successfull!\", \"You invested \".concat(v, \" BNB into the NFT Portfolio.\"), \"success\");\n      } else {\n        swal(\"Investment failed!\");\n      }\n\n      this.calcTokenBalances();\n    };\n\n    this.investDeFi = async () => {\n      const web3 = window.web3;\n      const v = this.state.defiToMint;\n      const amount = web3.utils.toWei(v, \"ether\");\n      const resp = await this.state.SwapContract.methods.investInFundDefi().send({\n        from: this.state.account,\n        value: amount\n      });\n\n      if (resp.status) {\n        swal(\"Investment successfull!\", \"You invested \".concat(v, \" BNB into the DeFi Portfolio.\"), \"success\");\n      } else {\n        swal(\"Investment failed!\");\n      }\n\n      this.calcTokenBalances();\n    };\n\n    this.calcTokenBalances = async () => {\n      const web3 = window.web3;\n      const nftTokenBalanceRes = await this.state.NFTTokenContract.methods.balanceOf(this.state.account).call();\n      const nftTokenBalance = web3.utils.fromWei(nftTokenBalanceRes, \"ether\");\n      const defiTokenBalanceRes = await this.state.DeFiTokenContract.methods.balanceOf(this.state.account).call();\n      const defiTokenBalance = web3.utils.fromWei(defiTokenBalanceRes, \"ether\");\n      const BTCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x4b1851167f74FF108A994872A160f1D6772d474b\");\n      const btcTokenBalanceRes = await BTCTokenConntract.methods.balanceOf(this.state.account).call();\n      const btcTokenBalance = web3.utils.fromWei(btcTokenBalanceRes, \"ether\");\n      const ETHTokenConntract = new web3.eth.Contract(IERC.abi, \"0x8BaBbB98678facC7342735486C851ABD7A0d17Ca\");\n      const ethTokenBalanceRes = await ETHTokenConntract.methods.balanceOf(this.state.account).call();\n      const ethTokenBalance = web3.utils.fromWei(ethTokenBalanceRes, \"ether\");\n      const SHIBATokenConntract = new web3.eth.Contract(IERC.abi, \"0xBf0646Fa5ABbFf6Af50a9C40D5E621835219d384\");\n      const shibaTokenBalanceRes = await SHIBATokenConntract.methods.balanceOf(this.state.account).call();\n      const shibaTokenBalance = web3.utils.fromWei(shibaTokenBalanceRes, \"ether\");\n      const XRPTokenConntract = new web3.eth.Contract(IERC.abi, \"0xCc00177908830cE1644AEB4aD507Fda3789128Af\");\n      const xrpTokenBalanceRes = await XRPTokenConntract.methods.balanceOf(this.state.account).call();\n      const xrpTokenBalance = web3.utils.fromWei(xrpTokenBalanceRes, \"ether\");\n      const LTCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x2F9fd65E3BB89b68a8e2Abd68Db25F5C348F68Ee\");\n      const ltcTokenBalanceRes = await LTCTokenConntract.methods.balanceOf(this.state.account).call();\n      const ltcTokenBalance = web3.utils.fromWei(ltcTokenBalanceRes, \"ether\");\n      const DAITokenConntract = new web3.eth.Contract(IERC.abi, \"0x8a9424745056Eb399FD19a0EC26A14316684e274\");\n      const daiTokenBalanceRes = await DAITokenConntract.methods.balanceOf(this.state.account).call();\n      const daiTokenBalance = web3.utils.fromWei(daiTokenBalanceRes, \"ether\");\n      const LUNATokenConntract = new web3.eth.Contract(IERC.abi, \"0x0bBF12a9Ccd7cD0E23dA21eFd3bb16ba807ab069\");\n      const lunaTokenBalanceRes = await LUNATokenConntract.methods.balanceOf(this.state.account).call();\n      const lunaTokenBalance = web3.utils.fromWei(lunaTokenBalanceRes, \"ether\");\n      const LINKTokenConntract = new web3.eth.Contract(IERC.abi, \"0x8D908A42FD847c80Eeb4498dE43469882436c8FF\");\n      const linkTokenBalanceRes = await LINKTokenConntract.methods.balanceOf(this.state.account).call();\n      const linkTokenBalance = web3.utils.fromWei(linkTokenBalanceRes, \"ether\");\n      const UNITokenConntract = new web3.eth.Contract(IERC.abi, \"0x62955C6cA8Cd74F8773927B880966B7e70aD4567\");\n      const uniTokenBalanceRes = await UNITokenConntract.methods.balanceOf(this.state.account).call();\n      const uniTokenBalance = web3.utils.fromWei(uniTokenBalanceRes, \"ether\");\n      const STETHTokenConntract = new web3.eth.Contract(IERC.abi, \"0xb7a58582Df45DBa8Ad346c6A51fdb796D64e0898\");\n      const stethTokenBalanceRes = await STETHTokenConntract.methods.balanceOf(this.state.account).call();\n      const stethTokenBalance = web3.utils.fromWei(stethTokenBalanceRes, \"ether\");\n      const AXSTokenConntract = new web3.eth.Contract(IERC.abi, \"0xf34D883EcdE3238B153f38230987a0F4c221a48F\");\n      const axsTokenBalanceRes = await AXSTokenConntract.methods.balanceOf(this.state.account).call();\n      const axsTokenBalance = web3.utils.fromWei(axsTokenBalanceRes, \"ether\");\n      const MANATokenConntract = new web3.eth.Contract(IERC.abi, \"0x1631A54AC95Ecb0085dB6b8ACf80c4Cee72AEB06\");\n      const manaTokenBalanceRes = await MANATokenConntract.methods.balanceOf(this.state.account).call();\n      const manaTokenBalance = web3.utils.fromWei(manaTokenBalanceRes, \"ether\");\n      const SANDTokenConntract = new web3.eth.Contract(IERC.abi, \"0x1631A54AC95Ecb0085dB6b8ACf80c4Cee72AEB06\");\n      const sandTokenBalanceRes = await SANDTokenConntract.methods.balanceOf(this.state.account).call();\n      const sandTokenBalance = web3.utils.fromWei(sandTokenBalanceRes, \"ether\");\n      const THETATokenConntract = new web3.eth.Contract(IERC.abi, \"0x19A5E53eC7B385dbE2E587Ba989eA2AB8F7EaF1e\");\n      const thetaTokenBalanceRes = await THETATokenConntract.methods.balanceOf(this.state.account).call();\n      const thetaTokenBalance = web3.utils.fromWei(thetaTokenBalanceRes, \"ether\");\n      const FLOWTokenConntract = new web3.eth.Contract(IERC.abi, \"0xe5c48084E1974a971Bd5dF4d9B01daCCA86d5567\");\n      const flowTokenBalanceRes = await FLOWTokenConntract.methods.balanceOf(this.state.account).call();\n      const flowTokenBalance = web3.utils.fromWei(flowTokenBalanceRes, \"ether\");\n      this.setState({\n        nftTokenBalance,\n        defiTokenBalance,\n        btcTokenBalance,\n        ethTokenBalance,\n        shibaTokenBalance,\n        xrpTokenBalance,\n        ltcTokenBalance,\n        daiTokenBalance,\n        lunaTokenBalance,\n        linkTokenBalance,\n        uniTokenBalance,\n        stethTokenBalance,\n        axsTokenBalance,\n        manaTokenBalance,\n        sandTokenBalance,\n        thetaTokenBalance,\n        flowTokenBalance\n      });\n    };\n\n    this.getRate = async () => {\n      const rateObj = await this.state.SwapContract.methods.currentRate().call();\n      const rate = rateObj.numerator / rateObj.denominator;\n      this.setState({\n        rate\n      });\n    };\n\n    this.state = {\n      account: '',\n      SwapContract: null,\n      NFTTokenContract: null,\n      DeFiTokenContract: null,\n      address: \"\",\n      defiToMint: 0,\n      nftToMint: 0,\n      defiBalance: 0,\n      nftBalance: 0,\n      nftTokenBalance: 0,\n      defiTokenBalance: 0,\n      btcTokenBalance: 0,\n      ethTokenBalance: 0,\n      shibaTokenBalance: 0,\n      xrpTokenBalance: 0,\n      ltcTokenBalance: 0,\n      daiTokenBalance: 0,\n      lunaTokenBalance: 0,\n      linkTokenBalance: 0,\n      uniTokenBalance: 0,\n      stethTokenBalance: 0,\n      axsTokenBalance: 0,\n      manaTokenBalance: 0,\n      sandTokenBalance: 0,\n      thetaTokenBalance: 0,\n      flowTokenBalance: 0,\n      xtzTokenBalance: 0,\n      galaTokenBalance: 0,\n      chzTokenBalance: 0,\n      enjTokenBalance: 0,\n      roseTokenBalance: 0,\n      rate: 0\n    };\n  }\n\n  async componentDidMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n    await this.calcTokenBalances();\n    await this.getRate();\n  } // first up is to detect ethereum provider\n\n\n  async loadWeb3() {\n    const provider = await detectEthereumProvider(); // modern browsers\n\n    if (provider) {\n      console.log('MetaMask is connected');\n      window.web3 = new Web3(provider);\n    } else {\n      console.log('No ethereum wallet detected');\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const accounts = await window.web3.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    });\n    const SwapContract = new web3.eth.Contract(IndexSwap.abi, \"0x58300577C1b907FA68F8A19601ee7B52a6844089\");\n    const NFTTokenContract = new web3.eth.Contract(IndexToken.abi, \"0xE870b73661Cc3De504FE26111748c08224EDBf63\");\n    const DeFiTokenContract = new web3.eth.Contract(IndexToken.abi, \"0xAe24BD25B1Aba33f69e97074aF954b1BF84B72Cb\");\n    this.setState({\n      SwapContract,\n      NFTTokenContract,\n      DeFiTokenContract\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }), React.createElement(Image, {\n      src: velvet,\n      size: \"medium\",\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }), React.createElement(Button, {\n      style: {\n        position: \"absolute\",\n        top: \"30px\",\n        right: \"20px\"\n      },\n      onClick: this.connectWallet,\n      color: \"orange\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(Image, {\n      style: {\n        \"padding-top\": \"7px\"\n      },\n      floated: \"left\",\n      size: \"mini\",\n      src: metamask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"Connect to MetaMask\")), React.createElement(Grid, {\n      divided: \"vertically\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      columns: 2,\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(Card.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: \"900px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      style: {\n        background: \"#406ccd\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, \"Top 10 DeFi Tokens\"), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, \"Rate: In return of investing 1 BNB you will receive \", this.state.rate, \" DeFi Token.\"), React.createElement(Form, {\n      onSubmit: this.investDeFi,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(Input, {\n      style: {\n        width: \"300px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"BNB amount to invest\",\n      name: \"defiToMint\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"green\",\n      type: \"submit\",\n      style: {\n        margin: \"20px\",\n        width: \"150px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, \"Invest\")), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(Input, {\n      disabled: true,\n      style: {\n        width: \"300px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"BNB amount to withdraw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }), React.createElement(Button, {\n      disabled: true,\n      color: \"green\",\n      style: {\n        margin: \"20px\",\n        width: \"150px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, \"Withdraw\")), React.createElement(Table, {\n      style: {\n        \"margin-left\": \"auto\",\n        \"margin-right\": \"auto\"\n      },\n      basic: \"very\",\n      celled: true,\n      collapsing: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, \"Token\"), React.createElement(Table.HeaderCell, {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \"Balance\"))), React.createElement(Table.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"DeFi Token\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, this.state.defiTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, \"Bitcoin (BTC)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, this.state.btcTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, \"Ethereum (ETH)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, this.state.ethTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, \"Shiba Ibu (SHIB)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, this.state.shibaTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, \"Ripple (XRP)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, this.state.xrpTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, \"Litecoin (LTC)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, this.state.ltcTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, \"Dai (DAI)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, this.state.daiTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, \"Terra (LUNA)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, this.state.lunaTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, \"Chainlink (LINK)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, this.state.linkTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, \"Uniswap (UNI)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, this.state.uniTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, \"Lido Staked Ether (STETH)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, this.state.stethTokenBalance))))))))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, React.createElement(Card.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: \"900px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      style: {\n        background: \"#406ccd\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, \"Top 10 NFT Tokens\"), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, \"Rate: In return of investing 1 BNB you will receive \", this.state.rate, \" NFT Token.\"), React.createElement(Form, {\n      onSubmit: this.investNFT,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, React.createElement(Input, {\n      style: {\n        width: \"300px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"BNB amount to invest\",\n      name: \"nftToMint\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"green\",\n      type: \"submit\",\n      style: {\n        margin: \"20px\",\n        width: \"150px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, \"Invest\")), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, React.createElement(Input, {\n      disabled: true,\n      style: {\n        width: \"300px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"BNB amount to withdraw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }), React.createElement(Button, {\n      disabled: true,\n      color: \"green\",\n      style: {\n        margin: \"20px\",\n        width: \"150px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, \"Withdraw\")), React.createElement(Table, {\n      style: {\n        \"margin-left\": \"auto\",\n        \"margin-right\": \"auto\"\n      },\n      basic: \"very\",\n      celled: true,\n      collapsing: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, React.createElement(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, \"Token\"), React.createElement(Table.HeaderCell, {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, \"Balance\"))), React.createElement(Table.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, \"NFT Token\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, this.state.nftTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, \"Axie Infinity (AXS)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, this.state.axsTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, \"Decentraland (MANA)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, this.state.manaTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, \"The Sandbox (SAND)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, this.state.sandTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, \"Theta Network (THETA)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, this.state.thetaTokenBalance)), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, \"Flow (FLOW)\"), React.createElement(Table.Cell, {\n      style: {\n        color: \"#C0C0C0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, this.state.flowTokenBalance))))))))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/navinalang/prototype/src/App.js"],"names":["React","Component","IndexSwap","IndexToken","IERC","detectEthereumProvider","Web3","Grid","Button","Card","Form","Input","Image","Label","Menu","Table","velvet","swal","App","constructor","props","handleInputChange","event","target","value","type","checked","name","setState","connectWallet","window","ethereum","web3","enable","console","log","alert","loadBlockchainData","location","reload","investNFT","v","state","nftToMint","amount","utils","toWei","resp","SwapContract","methods","investInFundNFT","send","from","account","status","calcTokenBalances","investDeFi","defiToMint","investInFundDefi","nftTokenBalanceRes","NFTTokenContract","balanceOf","call","nftTokenBalance","fromWei","defiTokenBalanceRes","DeFiTokenContract","defiTokenBalance","BTCTokenConntract","eth","Contract","abi","btcTokenBalanceRes","btcTokenBalance","ETHTokenConntract","ethTokenBalanceRes","ethTokenBalance","SHIBATokenConntract","shibaTokenBalanceRes","shibaTokenBalance","XRPTokenConntract","xrpTokenBalanceRes","xrpTokenBalance","LTCTokenConntract","ltcTokenBalanceRes","ltcTokenBalance","DAITokenConntract","daiTokenBalanceRes","daiTokenBalance","LUNATokenConntract","lunaTokenBalanceRes","lunaTokenBalance","LINKTokenConntract","linkTokenBalanceRes","linkTokenBalance","UNITokenConntract","uniTokenBalanceRes","uniTokenBalance","STETHTokenConntract","stethTokenBalanceRes","stethTokenBalance","AXSTokenConntract","axsTokenBalanceRes","axsTokenBalance","MANATokenConntract","manaTokenBalanceRes","manaTokenBalance","SANDTokenConntract","sandTokenBalanceRes","sandTokenBalance","THETATokenConntract","thetaTokenBalanceRes","thetaTokenBalance","FLOWTokenConntract","flowTokenBalanceRes","flowTokenBalance","getRate","rateObj","currentRate","rate","numerator","denominator","address","defiBalance","nftBalance","xtzTokenBalance","galaTokenBalance","chzTokenBalance","enjTokenBalance","roseTokenBalance","componentDidMount","loadWeb3","provider","accounts","getAccounts","render","position","top","right","metamask","margin","width","background","color","padding"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport IndexSwap from \"./abis/IndexSwap.json\";\nimport IndexToken from \"./abis/indexToken.json\";\nimport IERC from \"./abis/IERC20.json\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport Web3 from 'web3';\nimport { Grid, Button, Card, Form, Input, Image, Label, Menu, Table } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport velvet from \"./velvet.png\";\nimport metamask from \"./metamask-fox.svg\";\nimport swal from 'sweetalert';\n\nimport \"./App.css\";\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '',\n      SwapContract: null,\n      NFTTokenContract: null,\n      DeFiTokenContract: null,\n      address: \"\",\n\n      defiToMint: 0,\n      nftToMint: 0,\n      defiBalance: 0,\n      nftBalance: 0,\n\n      nftTokenBalance: 0,\n      defiTokenBalance: 0,\n\n      btcTokenBalance: 0,\n      ethTokenBalance: 0,\n      shibaTokenBalance: 0,\n      xrpTokenBalance: 0,\n      ltcTokenBalance: 0,\n      daiTokenBalance: 0,\n      lunaTokenBalance: 0,\n      linkTokenBalance: 0,\n      uniTokenBalance: 0,\n      stethTokenBalance: 0,\n\n      axsTokenBalance: 0,\n      manaTokenBalance: 0,\n      sandTokenBalance: 0,\n      thetaTokenBalance: 0,\n      flowTokenBalance: 0,\n      xtzTokenBalance: 0,\n      galaTokenBalance: 0,\n      chzTokenBalance: 0,\n      enjTokenBalance: 0,\n      roseTokenBalance: 0,\n\n      rate: 0\n    }\n  }\n\n  async componentDidMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n    await this.calcTokenBalances();\n    await this.getRate();\n  }\n\n  // first up is to detect ethereum provider\n  async loadWeb3() {\n    const provider = await detectEthereumProvider();\n\n    // modern browsers\n    if (provider) {\n      console.log('MetaMask is connected');\n\n      window.web3 = new Web3(provider);\n    } else {\n      console.log('No ethereum wallet detected');\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const accounts = await window.web3.eth.getAccounts();\n    this.setState({ account: accounts[0] })\n    const SwapContract = new web3.eth.Contract(IndexSwap.abi, \"0x58300577C1b907FA68F8A19601ee7B52a6844089\");\n    const NFTTokenContract = new web3.eth.Contract(IndexToken.abi, \"0xE870b73661Cc3De504FE26111748c08224EDBf63\");\n    const DeFiTokenContract = new web3.eth.Contract(IndexToken.abi, \"0xAe24BD25B1Aba33f69e97074aF954b1BF84B72Cb\");\n    this.setState({ SwapContract, NFTTokenContract, DeFiTokenContract });\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    })\n  }\n\n  connectWallet = async () =>{\n    if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum);\n        await window.ethereum.enable();\n        console.log(\"Connected\");\n      } else {\n        alert(\"Metamask not found\");\n      }\n\n      this.loadBlockchainData();\n      window.location.reload()\n  }\n\n  investNFT = async() => {\n    const web3 = window.web3;\n    const v = this.state.nftToMint;\n    const amount = web3.utils.toWei(v, \"ether\");\n    const resp = await this.state.SwapContract.methods.investInFundNFT().send({from: this.state.account, value: amount});\n    if(resp.status) {\n      swal(\"Investment successfull!\", `You invested ${v} BNB into the NFT Portfolio.`, \"success\");\n\n    } else {\n      swal(\"Investment failed!\");\n    }\n\n    this.calcTokenBalances();\n  }\n\n  investDeFi = async() => {\n    const web3 = window.web3;\n    const v = this.state.defiToMint;\n    const amount = web3.utils.toWei(v, \"ether\");\n    const resp = await this.state.SwapContract.methods.investInFundDefi().send({from: this.state.account, value: amount});\n    if(resp.status) {\n      swal(\"Investment successfull!\", `You invested ${v} BNB into the DeFi Portfolio.`, \"success\");\n\n    } else {\n      swal(\"Investment failed!\");\n    }\n\n    this.calcTokenBalances();\n  }\n\n  calcTokenBalances = async() => {\n    const web3 = window.web3;\n\n    const nftTokenBalanceRes = await this.state.NFTTokenContract.methods.balanceOf(this.state.account).call();\n    const nftTokenBalance = web3.utils.fromWei(nftTokenBalanceRes, \"ether\");\n\n    const defiTokenBalanceRes = await this.state.DeFiTokenContract.methods.balanceOf(this.state.account).call();\n    const defiTokenBalance = web3.utils.fromWei(defiTokenBalanceRes, \"ether\");\n\n    const BTCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x4b1851167f74FF108A994872A160f1D6772d474b\");\n    const btcTokenBalanceRes = await BTCTokenConntract.methods.balanceOf(this.state.account).call();\n    const btcTokenBalance = web3.utils.fromWei(btcTokenBalanceRes, \"ether\");\n\n    const ETHTokenConntract = new web3.eth.Contract(IERC.abi, \"0x8BaBbB98678facC7342735486C851ABD7A0d17Ca\");\n    const ethTokenBalanceRes = await ETHTokenConntract.methods.balanceOf(this.state.account).call();\n    const ethTokenBalance = web3.utils.fromWei(ethTokenBalanceRes, \"ether\");\n\n    const SHIBATokenConntract = new web3.eth.Contract(IERC.abi, \"0xBf0646Fa5ABbFf6Af50a9C40D5E621835219d384\");\n    const shibaTokenBalanceRes = await SHIBATokenConntract.methods.balanceOf(this.state.account).call();\n    const shibaTokenBalance = web3.utils.fromWei(shibaTokenBalanceRes, \"ether\");\n\n    const XRPTokenConntract = new web3.eth.Contract(IERC.abi, \"0xCc00177908830cE1644AEB4aD507Fda3789128Af\");\n    const xrpTokenBalanceRes = await XRPTokenConntract.methods.balanceOf(this.state.account).call();\n    const xrpTokenBalance = web3.utils.fromWei(xrpTokenBalanceRes, \"ether\");\n\n    const LTCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x2F9fd65E3BB89b68a8e2Abd68Db25F5C348F68Ee\");\n    const ltcTokenBalanceRes = await LTCTokenConntract.methods.balanceOf(this.state.account).call();\n    const ltcTokenBalance = web3.utils.fromWei(ltcTokenBalanceRes, \"ether\");\n\n    const DAITokenConntract = new web3.eth.Contract(IERC.abi, \"0x8a9424745056Eb399FD19a0EC26A14316684e274\");\n    const daiTokenBalanceRes = await DAITokenConntract.methods.balanceOf(this.state.account).call();\n    const daiTokenBalance = web3.utils.fromWei(daiTokenBalanceRes, \"ether\");\n\n    const LUNATokenConntract = new web3.eth.Contract(IERC.abi, \"0x0bBF12a9Ccd7cD0E23dA21eFd3bb16ba807ab069\");\n    const lunaTokenBalanceRes = await LUNATokenConntract.methods.balanceOf(this.state.account).call();\n    const lunaTokenBalance = web3.utils.fromWei(lunaTokenBalanceRes, \"ether\");\n\n    const LINKTokenConntract = new web3.eth.Contract(IERC.abi, \"0x8D908A42FD847c80Eeb4498dE43469882436c8FF\");\n    const linkTokenBalanceRes = await LINKTokenConntract.methods.balanceOf(this.state.account).call();\n    const linkTokenBalance = web3.utils.fromWei(linkTokenBalanceRes, \"ether\");\n\n    const UNITokenConntract = new web3.eth.Contract(IERC.abi, \"0x62955C6cA8Cd74F8773927B880966B7e70aD4567\");\n    const uniTokenBalanceRes = await UNITokenConntract.methods.balanceOf(this.state.account).call();\n    const uniTokenBalance = web3.utils.fromWei(uniTokenBalanceRes, \"ether\");\n\n    const STETHTokenConntract = new web3.eth.Contract(IERC.abi, \"0xb7a58582Df45DBa8Ad346c6A51fdb796D64e0898\");\n    const stethTokenBalanceRes = await STETHTokenConntract.methods.balanceOf(this.state.account).call();\n    const stethTokenBalance = web3.utils.fromWei(stethTokenBalanceRes, \"ether\");\n\n\n    const AXSTokenConntract = new web3.eth.Contract(IERC.abi, \"0xf34D883EcdE3238B153f38230987a0F4c221a48F\");\n    const axsTokenBalanceRes = await AXSTokenConntract.methods.balanceOf(this.state.account).call();\n    const axsTokenBalance = web3.utils.fromWei(axsTokenBalanceRes, \"ether\");\n\n    const MANATokenConntract = new web3.eth.Contract(IERC.abi, \"0x1631A54AC95Ecb0085dB6b8ACf80c4Cee72AEB06\");\n    const manaTokenBalanceRes = await MANATokenConntract.methods.balanceOf(this.state.account).call();\n    const manaTokenBalance = web3.utils.fromWei(manaTokenBalanceRes, \"ether\");\n\n    const SANDTokenConntract = new web3.eth.Contract(IERC.abi, \"0x1631A54AC95Ecb0085dB6b8ACf80c4Cee72AEB06\");\n    const sandTokenBalanceRes = await SANDTokenConntract.methods.balanceOf(this.state.account).call();\n    const sandTokenBalance = web3.utils.fromWei(sandTokenBalanceRes, \"ether\");\n\n    const THETATokenConntract = new web3.eth.Contract(IERC.abi, \"0x19A5E53eC7B385dbE2E587Ba989eA2AB8F7EaF1e\");\n    const thetaTokenBalanceRes = await THETATokenConntract.methods.balanceOf(this.state.account).call();\n    const thetaTokenBalance = web3.utils.fromWei(thetaTokenBalanceRes, \"ether\");\n\n    const FLOWTokenConntract = new web3.eth.Contract(IERC.abi, \"0xe5c48084E1974a971Bd5dF4d9B01daCCA86d5567\");\n    const flowTokenBalanceRes = await FLOWTokenConntract.methods.balanceOf(this.state.account).call();\n    const flowTokenBalance = web3.utils.fromWei(flowTokenBalanceRes, \"ether\");\n    \n    this.setState({ nftTokenBalance, defiTokenBalance, \n                    btcTokenBalance, ethTokenBalance, shibaTokenBalance, xrpTokenBalance, ltcTokenBalance,\n                    daiTokenBalance, lunaTokenBalance, linkTokenBalance, uniTokenBalance, stethTokenBalance,\n                    axsTokenBalance, manaTokenBalance, sandTokenBalance, thetaTokenBalance, flowTokenBalance });\n  }\n\n  getRate = async() => {\n    const rateObj = await this.state.SwapContract.methods.currentRate().call();\n    const rate = rateObj.numerator / rateObj.denominator;\n    this.setState({ rate });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <br></br>\n        <Image src={velvet} size=\"medium\" verticalAlign='middle'></Image>\n\n        <Button style={{position:\"absolute\", top:\"30px\", right:\"20px\"}} onClick={this.connectWallet} color=\"orange\">\n        <Image style={{\"padding-top\": \"7px\"}} floated=\"left\" size=\"mini\" src={metamask}/>\n        <p>Connect to MetaMask</p>\n        </Button>\n\n        <Grid divided='vertically'>\n          <Grid.Row columns={2} style={{ margin: \"20px\" }}>\n            <Grid.Column>\n\n              <Card.Group>\n                <Card style={{ width: \"900px\" }}>\n                  <Card.Content style={{ background: \"#406ccd\" }}>\n                    <Card.Header style={{color: \"white\"}}>Top 10 DeFi Tokens</Card.Header>\n                    <Card.Description>\n\n                    <p style={{color: \"#C0C0C0\"}}>Rate: In return of investing 1 BNB you will receive {this.state.rate} DeFi Token.</p>\n\n                      <Form onSubmit={this.investDeFi}>\n                        <Input style={{ width: \"300px\", padding: 3 }} required type=\"text\" placeholder=\"BNB amount to invest\" name=\"defiToMint\" onChange={this.handleInputChange}></Input>\n                        <Button color=\"green\" type=\"submit\" style={{ margin: \"20px\", width: \"150px\" }}>Invest</Button>\n                      </Form>\n\n                      <Form>\n                        <Input disabled style={{ width: \"300px\", padding: 3 }} required type=\"text\" placeholder=\"BNB amount to withdraw\"></Input>\n                        <Button disabled color=\"green\" style={{ margin: \"20px\", width: \"150px\" }}>Withdraw</Button>\n                      </Form>\n\n                      <Table style={{\"margin-left\": \"auto\", \"margin-right\": \"auto\"}} basic='very' celled collapsing>\n                        <Table.Header>\n                          <Table.Row>\n                            <Table.HeaderCell style={{color: \"white\"}}>Token</Table.HeaderCell>\n                            <Table.HeaderCell style={{color: \"white\"}}>Balance</Table.HeaderCell>\n                          </Table.Row>\n                        </Table.Header>\n\n                        <Table.Body>\n                          <Table.Row>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>DeFi Token</Table.Cell>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>{this.state.defiTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>Bitcoin (BTC)</Table.Cell>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>{this.state.btcTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>Ethereum (ETH)</Table.Cell>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>{this.state.ethTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>Shiba Ibu (SHIB)</Table.Cell>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>{this.state.shibaTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>Ripple (XRP)</Table.Cell>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>{this.state.xrpTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>Litecoin (LTC)</Table.Cell>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>{this.state.ltcTokenBalance}</Table.Cell>\n                          </Table.Row> \n                          <Table.Row>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>Dai (DAI)</Table.Cell>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>{this.state.daiTokenBalance}</Table.Cell>\n                          </Table.Row> \n                          <Table.Row>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>Terra (LUNA)</Table.Cell>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>{this.state.lunaTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>Chainlink (LINK)</Table.Cell>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>{this.state.linkTokenBalance}</Table.Cell>\n                          </Table.Row> \n                          <Table.Row>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>Uniswap (UNI)</Table.Cell>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>{this.state.uniTokenBalance}</Table.Cell>\n                          </Table.Row> \n                          <Table.Row>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>Lido Staked Ether (STETH)</Table.Cell>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>{this.state.stethTokenBalance}</Table.Cell>\n                          </Table.Row> \n                        </Table.Body>\n                        \n                      </Table>\n            \n                    </Card.Description>\n                  </Card.Content>\n                </Card>\n              </Card.Group>\n            </Grid.Column>\n\n\n            <Grid.Column>\n              <Card.Group>\n                <Card style={{ width: \"900px\" }}>\n                  <Card.Content style={{ background: \"#406ccd\" }}>\n                    <Card.Header style={{color: \"white\"}}>Top 10 NFT Tokens</Card.Header>\n                    <Card.Description>\n\n                    <p style={{color: \"#C0C0C0\"}}>Rate: In return of investing 1 BNB you will receive {this.state.rate} NFT Token.</p>\n\n                      <Form onSubmit={this.investNFT}>\n                        <Input style={{ width: \"300px\", padding: 3 }} required type=\"text\" placeholder=\"BNB amount to invest\" name=\"nftToMint\" onChange={this.handleInputChange}></Input>\n                        <Button color=\"green\" type=\"submit\" style={{ margin: \"20px\", width: \"150px\" }}>Invest</Button>\n                      </Form>\n\n                      <Form>\n                        <Input disabled style={{ width: \"300px\", padding: 3 }} required type=\"text\" placeholder=\"BNB amount to withdraw\"></Input>\n                        <Button disabled color=\"green\" style={{ margin: \"20px\", width: \"150px\" }}>Withdraw</Button>\n                      </Form>\n\n                      <Table style={{\"margin-left\": \"auto\", \"margin-right\": \"auto\"}} basic='very' celled collapsing>\n                        <Table.Header>\n                          <Table.Row>\n                            <Table.HeaderCell style={{color: \"white\"}}>Token</Table.HeaderCell>\n                            <Table.HeaderCell style={{color: \"white\"}}>Balance</Table.HeaderCell>\n                          </Table.Row>\n                        </Table.Header>\n\n                        <Table.Body>\n                          <Table.Row>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>NFT Token</Table.Cell>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>{this.state.nftTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>Axie Infinity (AXS)</Table.Cell>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>{this.state.axsTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>Decentraland (MANA)</Table.Cell>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>{this.state.manaTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>The Sandbox (SAND)</Table.Cell>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>{this.state.sandTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>Theta Network (THETA)</Table.Cell>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>{this.state.thetaTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          <Table.Row>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>Flow (FLOW)</Table.Cell>\n                            <Table.Cell style={{color: \"#C0C0C0\"}}>{this.state.flowTokenBalance}</Table.Cell>\n                          </Table.Row>\n                          \n                        </Table.Body>\n                      </Table>\n\n                    </Card.Description>\n                  </Card.Content>\n                </Card>\n              </Card.Group>\n\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div >\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}