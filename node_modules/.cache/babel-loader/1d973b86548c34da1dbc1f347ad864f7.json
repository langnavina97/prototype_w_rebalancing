{"ast":null,"code":"import _defineProperty from \"/Users/navinalang/prototypev1.1/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/navinalang/prototypev1.1/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\"; // Mainnet\n\nimport IndexSwap from \"./abis/IndexSwap.json\";\nimport IndexToken from \"./abis/indexToken.json\";\nimport NFTSwap from \"./abis/NFTPortfolio.json\"; // Testnet\n\nimport IndexSwap2 from \"./abis2/IndexSwap.json\";\nimport IndexToken2 from \"./abis2/indexToken.json\";\nimport NFTSwap2 from \"./abis2/NFTPortfolio.json\";\nimport IERC from \"./abis/IERC20.json\";\nimport pancakeSwapRouter from \"./abis/IPancakeRouter02.json\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport Web3 from 'web3';\nimport { Grid, Button, Card, Form, Input, Image, Message, Table } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport velvet from \"./velvet.png\";\nimport metamask from \"./metamask-fox.svg\";\nimport swal from 'sweetalert';\nimport ReactGA from 'react-ga';\nimport \"./App.css\";\n\nconst axios = require('axios');\n\nconst networks = {\n  bscTestnet: {\n    chainId: \"0x\".concat(Number(97).toString(16)),\n    chainName: \"BSC Testnet\",\n    nativeCurrency: {\n      name: \"Binance Chain Native Token\",\n      symbol: \"BNB\",\n      decimals: 18\n    },\n    rpcUrls: [\"https://data-seed-prebsc-1-s1.binance.org:8545/\", \"https://data-seed-prebsc-2-s1.binance.org:8545/\", \"https://data-seed-prebsc-1-s2.binance.org:8545/\", \"https://data-seed-prebsc-2-s2.binance.org:8545/\", \"https://data-seed-prebsc-1-s3.binance.org:8545/\", \"https://data-seed-prebsc-2-s3.binance.org:8545/\"],\n    blockExplorerUrls: [\"https://polygonscan.com/\"]\n  },\n  bsc: {\n    chainId: \"0x\".concat(Number(56).toString(16)),\n    chainName: \"Binance Smart Chain Mainnet\",\n    nativeCurrency: {\n      name: \"Binance Chain Native Token\",\n      symbol: \"BNB\",\n      decimals: 18\n    },\n    rpcUrls: [\"https://bsc-dataseed1.binance.org\", \"https://bsc-dataseed2.binance.org\", \"https://bsc-dataseed3.binance.org\", \"https://bsc-dataseed4.binance.org\", \"https://bsc-dataseed1.defibit.io\", \"https://bsc-dataseed2.defibit.io\", \"https://bsc-dataseed3.defibit.io\", \"https://bsc-dataseed4.defibit.io\", \"https://bsc-dataseed1.ninicoin.io\", \"https://bsc-dataseed2.ninicoin.io\", \"https://bsc-dataseed3.ninicoin.io\", \"https://bsc-dataseed4.ninicoin.io\", \"wss://bsc-ws-node.nariox.org\"],\n    blockExplorerUrls: [\"https://testnet.bscscan.com/\"]\n  }\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNetworkSwitch = async networkName => {\n      await this.changeNetwork(networkName);\n    };\n\n    this.handleInputChange = event => {\n      const target = event.target;\n      const value = target.type === \"checkbox\" ? target.checked : target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.connectWallet = async () => {\n      if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum);\n        await window.ethereum.enable();\n        console.log(\"Connected\");\n        this.setState({\n          connected: true\n        });\n      } else {\n        alert(\"Metamask not found\");\n      }\n\n      this.loadBlockchainData();\n      window.location.reload();\n    };\n\n    this.investNFTMainnet = async () => {\n      const web3 = new Web3(window.ethereum);\n      const v = this.state.nftToMintMainnet;\n      const valueInWei = web3.utils.toWei(v, 'ether');\n      console.log(this.state.NFTPortfolioContract.methods);\n      const resp = await this.state.NFTPortfolioContract.methods.investInFundNFT().send({\n        from: this.state.account,\n        value: valueInWei\n      }).once(\"receipt\", receipt => {\n        console.log(receipt);\n      }).catch(err => {\n        console.log(err);\n      });\n\n      if (resp.status) {\n        swal(\"Investment successfull!\", \"You invested \".concat(v, \" BNB into the portfolio.\"), \"success\");\n      } else {\n        swal(\"Investment failed!\");\n      }\n    };\n\n    this.investDeFiMainnet = async () => {\n      const web3 = new Web3(window.ethereum);\n      const v = this.state.defiToMintMainnet;\n      const valueInWei = web3.utils.toWei(v, 'ether');\n      const resp = await this.state.SwapContract.methods.investInFundDefi().send({\n        from: this.state.account,\n        value: valueInWei\n      }).once(\"receipt\", receipt => {\n        console.log(receipt);\n      }).catch(err => {\n        console.log(err);\n      });\n\n      if (resp.status) {\n        swal(\"Investment successfull!\", \"You invested \".concat(v, \" BNB into the portfolio.\"), \"success\"); //window.location.reload();\n      } else {\n        swal(\"Investment failed!\");\n      }\n    };\n\n    this.approveNFTTokensMainnet = async () => {\n      const web3 = new Web3(window.ethereum);\n      const contractAddress = \"0x40A367c5320440a1aa78aCBC5af0A017Ed1F3772\";\n      const aXSTokenConntract = new web3.eth.Contract(IERC.abi, \"0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0\");\n      await aXSTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\"\n      });\n      const rACATokenConntract = new web3.eth.Contract(IERC.abi, \"0x12BB890508c125661E03b09EC06E404bc9289040\");\n      await rACATokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\"\n      });\n      const mBOXTokenConntract = new web3.eth.Contract(IERC.abi, \"0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377\");\n      await mBOXTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\"\n      });\n      const mCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x949D48EcA67b17269629c7194F4b727d4Ef9E5d6\");\n      await mCTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\"\n      });\n      const aLICETokenConntract = new web3.eth.Contract(IERC.abi, \"0xAC51066d7bEC65Dc4589368da368b212745d63E8\");\n      await aLICETokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\"\n      });\n    };\n\n    this.approveDeFiTokensMainnet = async () => {\n      const web3 = new Web3(window.ethereum);\n      const contractAddress = \"0x380d2b6742AAD7ae97f199a109c1F81A34E1cb86\";\n      const BTCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c\");\n      BTCTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\"\n      });\n      const ETHTokenConntract = new web3.eth.Contract(IERC.abi, \"0x2170Ed0880ac9A755fd29B2688956BD959F933F8\");\n      ETHTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\"\n      });\n      const SHIBATokenConntract = new web3.eth.Contract(IERC.abi, \"0x2859e4544C4bB03966803b044A93563Bd2D0DD4D\");\n      SHIBATokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\"\n      });\n      const XRPTokenConntract = new web3.eth.Contract(IERC.abi, \"0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE\");\n      XRPTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\"\n      });\n      const LTCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x4338665CBB7B2485A8855A139b75D5e34AB0DB94\");\n      LTCTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\"\n      });\n      const DAITokenConntract = new web3.eth.Contract(IERC.abi, \"0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3\");\n      DAITokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\"\n      });\n      const MAKERTokenConntract = new web3.eth.Contract(IERC.abi, \"0x5f0Da599BB2ccCfcf6Fdfd7D81743B6020864350\");\n      MAKERTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\"\n      });\n      const LINKTokenConntract = new web3.eth.Contract(IERC.abi, \"0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD\");\n      LINKTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\"\n      });\n      const UNITokenConntract = new web3.eth.Contract(IERC.abi, \"0xBf5140A22578168FD562DCcF235E5D43A02ce9B1\");\n      UNITokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\"\n      });\n      const AAVETokenConntract = new web3.eth.Contract(IERC.abi, \"0xfb6115445Bff7b52FeB98650C87f44907E58f802\");\n      AAVETokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\"\n      });\n    };\n\n    this.withdrawDeFiMainnet = async () => {\n      const vault = \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\";\n      const web3 = new Web3(window.ethereum);\n      var withdrawAmt = this.state.withdrawValueDefi;\n      var withdrawAmountInWei = web3.utils.toWei(withdrawAmt, 'ether');\n      await this.state.DeFiTokenContract.methods.approve(\"0x380d2b6742AAD7ae97f199a109c1F81A34E1cb86\", \"7787357773333787487837458347754874574837458374\").send({\n        from: this.state.account\n      });\n      var amount = withdrawAmountInWei;\n      var sAmount = amount.toString();\n      await this.state.SwapContract.methods.withdrawFromFundTOPTokens(sAmount).send({\n        from: this.state.account,\n        value: 0\n      }).once(\"receipt\", receipt => {\n        swal(\"Withdrawal successfull!\", \"The withdrawal was successful!\", \"success\");\n        console.log(receipt);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.withdrawNFTMainnet = async () => {\n      const vault = \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\";\n      const web3 = new Web3(window.ethereum);\n      console.log(this.state.DeFiTokenContract);\n      var withdrawAmt = this.state.withdrawValueNFT;\n      var withdrawAmountInWei = web3.utils.toWei(withdrawAmt, 'ether');\n      await this.state.NFTTokenContract.methods.approve(\"0x40A367c5320440a1aa78aCBC5af0A017Ed1F3772\", \"7787357773333787487837458347754874574837458374\").send({\n        from: this.state.account\n      });\n      var amount = withdrawAmountInWei;\n      var sAmount = amount.toString();\n      await this.state.NFTPortfolioContract.methods.withdrawFromFundNFT(sAmount).send({\n        from: this.state.account,\n        value: 0\n      }).once(\"receipt\", receipt => {\n        swal(\"Withdrawal successfull!\", \"The withdrawal was successful!\", \"success\");\n        console.log(receipt);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.getExchangeRateMainnet = async (amountIn, address) => {\n      const web3 = window.web3;\n      const pancakeRouter = new web3.eth.Contract(pancakeSwapRouter.abi, \"0x10ED43C718714eb63d5aA57B78B54704E256024E\");\n      var path = [];\n      path[0] = address;\n      path[1] = \"0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56\";\n      const er = await pancakeRouter.methods.getAmountsOut(amountIn, path).call();\n      return er[1];\n    };\n\n    this.investNFT = async () => {\n      const web3 = new Web3(window.ethereum);\n      const v = this.state.nftToMint;\n      const valueInWei = web3.utils.toWei(v, 'ether');\n      const resp = await this.state.NFTPortfolioContract2.methods.investInFundDefi().send({\n        from: this.state.account,\n        value: valueInWei\n      }).once(\"receipt\", receipt => {\n        console.log(receipt);\n      }).catch(err => {\n        console.log(err);\n      });\n\n      if (resp.status) {\n        swal(\"Investment successfull!\", \"You invested \".concat(v, \" BNB into the portfolio.\"), \"success\");\n      } else {\n        swal(\"Investment failed!\");\n      }\n    };\n\n    this.investDeFi = async () => {\n      const web3 = new Web3(window.ethereum);\n      const v = this.state.defiToMint;\n      const valueInWei = web3.utils.toWei(v, 'ether');\n      const resp = await this.state.SwapContract2.methods.investInFund(valueInWei).send({\n        from: this.state.account,\n        value: valueInWei\n      }).once(\"receipt\", receipt => {\n        console.log(receipt);\n      }).catch(err => {\n        console.log(err);\n      });\n\n      if (resp.status) {\n        swal(\"Investment successfull!\", \"You invested \".concat(v, \" BNB into the portfolio.\"), \"success\"); //window.location.reload();\n      } else {\n        swal(\"Investment failed!\");\n      }\n    };\n\n    this.approveNFTTokens = async () => {\n      const web3 = new Web3(window.ethereum);\n      const aXSTokenConntract = new web3.eth.Contract(IERC.abi, \"0xf34D883EcdE3238B153f38230987a0F4c221a48F\");\n      await aXSTokenConntract.methods.approve(\"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\"\n      });\n      const mANATokenConntract = new web3.eth.Contract(IERC.abi, \"0x8bf2dF0Ff8528088475183a68678bd1Cd7691b69\");\n      await mANATokenConntract.methods.approve(\"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\"\n      });\n      const sANDTokenConntract = new web3.eth.Contract(IERC.abi, \"0x1631A54AC95Ecb0085dB6b8ACf80c4Cee72AEB06\");\n      await sANDTokenConntract.methods.approve(\"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\"\n      });\n      const tHETATokenConntract = new web3.eth.Contract(IERC.abi, \"0x19A5E53eC7B385dbE2E587Ba989eA2AB8F7EaF1e\");\n      await tHETATokenConntract.methods.approve(\"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\"\n      });\n      const fLOWTokenConntract = new web3.eth.Contract(IERC.abi, \"0xe5c48084E1974a971Bd5dF4d9B01daCCA86d5567\");\n      await fLOWTokenConntract.methods.approve(\"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\"\n      });\n      const xTZTokenConntract = new web3.eth.Contract(IERC.abi, \"0xC5De9d5B0BA5b408a3e9530A1BC310d8F2dCC26a\");\n      await xTZTokenConntract.methods.approve(\"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\"\n      });\n      const gALATokenConntract = new web3.eth.Contract(IERC.abi, \"0x4bf1CE8E4c4c86126E57Fa9fc3f1a9631661641c\");\n      await gALATokenConntract.methods.approve(\"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\"\n      });\n      const cHZTokenConntract = new web3.eth.Contract(IERC.abi, \"0xdeEC6f0C22970b9b8a47069bE619bfAe646dEe26\");\n      await cHZTokenConntract.methods.approve(\"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\"\n      });\n      const eNJTokenConntract = new web3.eth.Contract(IERC.abi, \"0xb08A1959f57b9cC8e5A5F1d329EfD90EE3438F65\");\n      await eNJTokenConntract.methods.approve(\"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\"\n      });\n      const rOSETokenConntract = new web3.eth.Contract(IERC.abi, \"0x30c1AC77F4068A063648B549ffF96Ddb9d151325\");\n      await rOSETokenConntract.methods.approve(\"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\"\n      });\n    };\n\n    this.approveDeFiTokens = async () => {\n      const web3 = new Web3(window.ethereum);\n      const contractAddress = \"0x5D56cFe7DA8434e3c1AE2f0419513e29A6649dC8\";\n      const vault = \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\";\n      const BTCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x4b1851167f74FF108A994872A160f1D6772d474b\");\n      BTCTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: vault\n      });\n      const ETHTokenConntract = new web3.eth.Contract(IERC.abi, \"0x8BaBbB98678facC7342735486C851ABD7A0d17Ca\");\n      ETHTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: vault\n      });\n      const SHIBATokenConntract = new web3.eth.Contract(IERC.abi, \"0xBf0646Fa5ABbFf6Af50a9C40D5E621835219d384\");\n      SHIBATokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: vault\n      });\n      const XRPTokenConntract = new web3.eth.Contract(IERC.abi, \"0xCc00177908830cE1644AEB4aD507Fda3789128Af\");\n      XRPTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: vault\n      });\n      const LTCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x2F9fd65E3BB89b68a8e2Abd68Db25F5C348F68Ee\");\n      LTCTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: vault\n      });\n      const DAITokenConntract = new web3.eth.Contract(IERC.abi, \"0x8a9424745056Eb399FD19a0EC26A14316684e274\");\n      DAITokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: vault\n      });\n      const LUNATokenConntract = new web3.eth.Contract(IERC.abi, \"0x0bBF12a9Ccd7cD0E23dA21eFd3bb16ba807ab069\");\n      LUNATokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: vault\n      });\n      const LINKTokenConntract = new web3.eth.Contract(IERC.abi, \"0x8D908A42FD847c80Eeb4498dE43469882436c8FF\");\n      LINKTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: vault\n      });\n      const UNITokenConntract = new web3.eth.Contract(IERC.abi, \"0x62955C6cA8Cd74F8773927B880966B7e70aD4567\");\n      UNITokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: vault\n      });\n      const STETHTokenConntract = new web3.eth.Contract(IERC.abi, \"0xb7a58582Df45DBa8Ad346c6A51fdb796D64e0898\");\n      STETHTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: vault\n      });\n    };\n\n    this.withdrawDeFi = async () => {\n      var vault = \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\";\n      const web3 = new Web3(window.ethereum);\n      var withdrawAmt = this.state.withdrawValueDefi;\n      var withdrawAmountInWei = web3.utils.toWei(withdrawAmt, 'ether');\n      var sAmount = withdrawAmountInWei.toString();\n      await this.state.SwapContract2.methods.approve(\"0x5D56cFe7DA8434e3c1AE2f0419513e29A6649dC8\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n        from: this.state.account\n      });\n      await this.state.SwapContract2.methods.withdrawFromFundNew(sAmount).send({\n        from: this.state.account,\n        value: 0\n      }).once(\"receipt\", receipt => {\n        swal(\"Withdrawal successfull!\", \"The withdrawal was successful!\", \"success\");\n        console.log(receipt);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.withdrawNFT = async () => {\n      var vault = \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\";\n      const web3 = new Web3(window.ethereum);\n      var withdrawAmt = this.state.withdrawValueNFT;\n      var withdrawAmountInWei = web3.utils.toWei(withdrawAmt, 'ether');\n      const nftBalance = await this.state.NFTTokenContract2.methods.balanceOf(this.state.account).call();\n\n      if (nftBalance == 0) {\n        swal(\"Withdrawal amount exceeds balance!\");\n        return;\n      }\n\n      var percentage = withdrawAmountInWei * 100 / nftBalance;\n      var percentageFinal = Math.round(percentage);\n      console.log(Math.round(percentage));\n      await this.state.NFTTokenContract2.methods.approve(\"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\", \"7787357773333787487837458347754874574837458374\").send({\n        from: this.state.account\n      });\n      var amount = withdrawAmountInWei;\n      var sAmount = amount.toString();\n      await this.state.NFTPortfolioContract2.methods.withdrawFromFundNFT(sAmount, percentageFinal).send({\n        from: this.state.account,\n        value: 0\n      }).once(\"receipt\", receipt => {\n        swal(\"Withdrawal successfull!\", \"The withdrawal was successful!\", \"success\");\n        console.log(receipt);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.getExchangeRate = async (amountIn, address) => {\n      const web3 = window.web3;\n      const pancakeRouter = new web3.eth.Contract(pancakeSwapRouter.abi, \"0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3\");\n      var path = [];\n      path[0] = address;\n      path[1] = \"0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd\";\n      const er = await pancakeRouter.methods.getAmountsOut(amountIn, path).call();\n      return er[1];\n    };\n\n    this.state = {\n      account: '',\n      SwapContract: null,\n      NFTTokenContract: null,\n      DeFiTokenContract: null,\n      NFTPortfolioContract: null,\n      SwapContract2: null,\n      NFTTokenContract2: null,\n      DeFiTokenContract2: null,\n      NFTPortfolioContract2: null,\n      address: \"\",\n      connected: false,\n      chainId: \"\",\n      defiToMintMainnet: 0,\n      nftToMintMainnet: 0,\n      withdrawValueDefi: 0,\n      withdrawValueNFT: 0,\n      nftTokenBalance: 0,\n      defiTokenBalance: 0,\n      rate: 0\n    };\n  }\n\n  async componentDidMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData(); //await this.getRate();\n    //swal(\"The project is in the alpha stage, proceed at your own risk\");\n\n    const web3 = window.web3;\n    const chainIdDec = await web3.eth.getChainId();\n    this.setState({\n      chainId: chainIdDec\n    });\n    this.setState({\n      chainId: chainIdDec\n    });\n  } // first up is to detect ethereum provider\n\n\n  async loadWeb3() {\n    const provider = await detectEthereumProvider(); // modern browsers\n\n    if (provider) {\n      console.log('MetaMask is connected');\n      window.web3 = new Web3(provider);\n    } else {\n      console.log('No ethereum wallet detected');\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const chainIdDec = await web3.eth.getChainId();\n    const accounts = await window.web3.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    });\n\n    if (accounts[0]) {\n      this.setState({\n        connected: true\n      });\n    }\n\n    if (chainIdDec == \"56\") {\n      this.setState({\n        account: accounts[0]\n      });\n      const SwapContract = new web3.eth.Contract(IndexSwap.abi, \"0x380d2b6742AAD7ae97f199a109c1F81A34E1cb86\");\n      const NFTPortfolioContract = new web3.eth.Contract(NFTSwap.abi, \"0x40A367c5320440a1aa78aCBC5af0A017Ed1F3772\");\n      const NFTTokenContract = new web3.eth.Contract(IndexToken.abi, \"0x16dBB234A9a595967DdC2ea1bb53379752f09Ad4\");\n      const DeFiTokenContract = new web3.eth.Contract(IndexToken.abi, \"0x6E49456f284e3da7f1515eEE120E2706cab69fD5\");\n      this.setState({\n        SwapContract,\n        DeFiTokenContract,\n        NFTPortfolioContract,\n        NFTTokenContract\n      });\n    } else if (chainIdDec == \"97\") {\n      const SwapContract2 = new web3.eth.Contract(IndexSwap2.abi, \"0x5D56cFe7DA8434e3c1AE2f0419513e29A6649dC8\");\n      const NFTPortfolioContract2 = new web3.eth.Contract(NFTSwap2.abi, \"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\");\n      const NFTTokenContract2 = new web3.eth.Contract(IndexToken2.abi, \"0x817ea2A5Fd281d15CA70B05abB5E094356C42996\");\n      const DeFiTokenContract2 = new web3.eth.Contract(IndexToken2.abi, \"0xF70538622598232a95B1EC1914Fc878d28EBAE68\");\n      this.setState({\n        SwapContract2,\n        DeFiTokenContract2,\n        NFTPortfolioContract2,\n        NFTTokenContract2\n      });\n    }\n  }\n\n  async changeNetwork(networkName) {\n    try {\n      if (!window.ethereum) throw new Error(\"No crypto wallet found\");\n      await window.ethereum.request({\n        method: \"wallet_addEthereumChain\",\n        params: [_objectSpread({}, networks[networkName])]\n      });\n    } catch (err) {\n      console.log(err);\n    }\n\n    window.location.reload();\n    const web3 = window.web3;\n    const chainIdDec = await web3.eth.getChainId();\n    this.setState({\n      chainId: chainIdDec\n    });\n    await this.loadBlockchainData();\n  }\n\n  render() {\n    window.addEventListener(\"load\", function () {\n      if (window.ethereum) {\n        // use MetaMask's provider\n        App.web3 = new Web3(window.ethereum);\n        window.ethereum.enable(); // get permission to access accounts\n        // detect Metamask account change\n\n        window.ethereum.on('accountsChanged', function (accounts) {\n          console.log('accountsChanges', accounts);\n        }); // detect Network account change\n\n        window.ethereum.on('networkChanged', function (networkId) {\n          console.log('networkChanged', networkId);\n        });\n      } else {\n        console.warn(\"No web3 detected. Falling back to http://127.0.0.1:8545. You should remove this fallback when you deploy live\"); // fallback - use your fallback strategy (local node / hosted node + in-dapp id mgmt / fail)\n\n        App.web3 = new Web3(new Web3.providers.HttpProvider(\"http://127.0.0.1:7545\"));\n      }\n    });\n    const web3 = window.web3;\n    let button;\n\n    if (!this.state.connected) {\n      button = React.createElement(Button, {\n        style: {\n          position: \"absolute\",\n          top: \"60px\",\n          right: \"20px\"\n        },\n        onClick: this.connectWallet,\n        color: \"orange\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 613\n        },\n        __self: this\n      }, React.createElement(Image, {\n        style: {\n          \"padding-top\": \"7px\"\n        },\n        floated: \"left\",\n        size: \"mini\",\n        src: metamask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 614\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 615\n        },\n        __self: this\n      }, \"Connect to MetaMask\"));\n    } else {\n      button = React.createElement(\"p\", {\n        style: {\n          position: \"absolute\",\n          top: \"110px\",\n          right: \"20px\",\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618\n        },\n        __self: this\n      }, \"Account:\"), \" \", this.state.account);\n    }\n\n    let testnet;\n\n    if (this.state.chainId == \"97\") {\n      testnet = React.createElement(Grid, {\n        divided: \"vertically\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 623\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        columns: 2,\n        style: {\n          margin: \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 624\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 625\n        },\n        __self: this\n      }, React.createElement(Card.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 627\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          width: \"900px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 628\n        },\n        __self: this\n      }, React.createElement(Card.Content, {\n        style: {\n          background: \"#406ccd\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 629\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        style: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 630\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          color: \"#C0C0C0\",\n          \"font-weight\": \"bold\",\n          \"text-align\": \"right\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 631\n        },\n        __self: this\n      }, \"APY: XX%\"), \"Top 10 Tokens\"), React.createElement(Card.Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636\n        },\n        __self: this\n      }, \"Rate: In return of investing 1 BNB you will receive 1 Top10 Token.\"), React.createElement(Form, {\n        onSubmit: this.investDeFi,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 638\n        },\n        __self: this\n      }, React.createElement(Input, {\n        style: {\n          width: \"300px\",\n          padding: 3\n        },\n        required: true,\n        type: \"text\",\n        placeholder: \"BNB amount to create\",\n        name: \"defiToMint\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 639\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"green\",\n        type: \"submit\",\n        style: {\n          margin: \"20px\",\n          width: \"150px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 640\n        },\n        __self: this\n      }, \"Create\")), React.createElement(Form, {\n        onSubmit: this.withdrawDeFi,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 643\n        },\n        __self: this\n      }, React.createElement(Input, {\n        style: {\n          width: \"300px\",\n          padding: 3\n        },\n        required: true,\n        type: \"text\",\n        placeholder: \"Top10 amount to redeem\",\n        name: \"withdrawValueDefi\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 644\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"green\",\n        style: {\n          margin: \"20px\",\n          width: \"150px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 645\n        },\n        __self: this\n      }, \"Redeem\"))))))), React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 655\n        },\n        __self: this\n      }, React.createElement(Card.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 656\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          width: \"900px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 657\n        },\n        __self: this\n      }, React.createElement(Card.Content, {\n        style: {\n          background: \"#406ccd\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 658\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        style: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 659\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          color: \"#C0C0C0\",\n          \"font-weight\": \"bold\",\n          \"text-align\": \"right\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 660\n        },\n        __self: this\n      }, \"APY: YY%\"), \"Top 10 Metaverse Tokens\"), React.createElement(Card.Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 663\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 665\n        },\n        __self: this\n      }, \"Rate: In return of investing 1 BNB you will receive 1 META Token.\"), React.createElement(Form, {\n        onSubmit: this.investNFT,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 667\n        },\n        __self: this\n      }, React.createElement(Input, {\n        style: {\n          width: \"300px\",\n          padding: 3\n        },\n        required: true,\n        type: \"text\",\n        placeholder: \"BNB amount to create\",\n        name: \"nftToMint\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 668\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"green\",\n        type: \"submit\",\n        style: {\n          margin: \"20px\",\n          width: \"150px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 669\n        },\n        __self: this\n      }, \"Create\")), React.createElement(Form, {\n        onSubmit: this.withdrawNFT,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 672\n        },\n        __self: this\n      }, React.createElement(Input, {\n        style: {\n          width: \"300px\",\n          padding: 3\n        },\n        required: true,\n        type: \"text\",\n        placeholder: \"META amount to redeem\",\n        name: \"withdrawValueNFT\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 673\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"green\",\n        style: {\n          margin: \"20px\",\n          width: \"150px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 674\n        },\n        __self: this\n      }, \"Redeem\")))))))));\n    }\n\n    let buttonSwitch;\n\n    if (this.state.chainId == \"56\" && this.state.connected) {\n      buttonSwitch = React.createElement(Button, {\n        style: {\n          position: \"absolute\",\n          top: \"60px\",\n          right: \"20px\"\n        },\n        onClick: () => this.handleNetworkSwitch(\"bscTestnet\"),\n        color: \"orange\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 689\n        },\n        __self: this\n      }, \"Change to Testnet\");\n    } else if (this.state.connected) {\n      buttonSwitch = React.createElement(Button, {\n        style: {\n          position: \"absolute\",\n          top: \"30px\",\n          right: \"20px\"\n        },\n        onClick: () => this.handleNetworkSwitch(\"bsc\"),\n        color: \"orange\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 691\n        },\n        __self: this\n      }, \"Change to Mainnet\");\n    }\n\n    let mainnet;\n\n    if (this.state.chainId != \"97\") {\n      mainnet = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 697\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        divided: \"vertically\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 698\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        columns: 2,\n        style: {\n          margin: \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 699\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 700\n        },\n        __self: this\n      }, React.createElement(Card.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 702\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          width: \"900px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 703\n        },\n        __self: this\n      }, React.createElement(Card.Content, {\n        style: {\n          background: \"#406ccd\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 704\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        style: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 705\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          color: \"#C0C0C0\",\n          \"font-weight\": \"bold\",\n          \"text-align\": \"right\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 706\n        },\n        __self: this\n      }, \"APY: XX%\"), \"Top 10 Tokens\"), React.createElement(Card.Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 709\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 710\n        },\n        __self: this\n      }, \"Rate: In return of investing 1 BNB you will receive 1 Top10 Token.\"), React.createElement(Form, {\n        onSubmit: this.investDeFiMainnet,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 712\n        },\n        __self: this\n      }, React.createElement(Input, {\n        style: {\n          width: \"300px\",\n          padding: 3\n        },\n        required: true,\n        type: \"text\",\n        placeholder: \"BNB amount to create\",\n        name: \"defiToMintMainnet\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 713\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"green\",\n        type: \"submit\",\n        style: {\n          margin: \"20px\",\n          width: \"150px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 714\n        },\n        __self: this\n      }, \"Create\")), React.createElement(Form, {\n        onSubmit: this.withdrawDeFiMainnet,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 717\n        },\n        __self: this\n      }, React.createElement(Input, {\n        style: {\n          width: \"300px\",\n          padding: 3\n        },\n        required: true,\n        type: \"text\",\n        placeholder: \"TOP15 amount to redeem\",\n        name: \"withdrawValueDefi\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 718\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"green\",\n        style: {\n          margin: \"20px\",\n          width: \"150px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 719\n        },\n        __self: this\n      }, \"Redeem\"))))))), React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 728\n        },\n        __self: this\n      }, React.createElement(Card.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 729\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          width: \"900px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 730\n        },\n        __self: this\n      }, React.createElement(Card.Content, {\n        style: {\n          background: \"#406ccd\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 731\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        style: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 732\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          color: \"#C0C0C0\",\n          \"font-weight\": \"bold\",\n          \"text-align\": \"right\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 733\n        },\n        __self: this\n      }, \"APY: YY%\"), \"Top 5 Metaverse Tokens\"), React.createElement(Card.Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 736\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          color: \"#C0C0C0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 737\n        },\n        __self: this\n      }, \"Rate: In return of investing 1 BNB you will receive 1 META Token.\"), React.createElement(Form, {\n        onSubmit: this.investNFTMainnet,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 739\n        },\n        __self: this\n      }, React.createElement(Input, {\n        style: {\n          width: \"300px\",\n          padding: 3\n        },\n        required: true,\n        type: \"text\",\n        placeholder: \"BNB amount to create\",\n        name: \"nftToMintMainnet\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 740\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"green\",\n        type: \"submit\",\n        style: {\n          margin: \"20px\",\n          width: \"150px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 741\n        },\n        __self: this\n      }, \"Create\")), React.createElement(Form, {\n        onSubmit: this.withdrawNFTMainnet,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 744\n        },\n        __self: this\n      }, React.createElement(Input, {\n        style: {\n          width: \"300px\",\n          padding: 3\n        },\n        required: true,\n        type: \"text\",\n        placeholder: \"META amount to redeem\",\n        name: \"withdrawValueNFT\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 745\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"green\",\n        style: {\n          margin: \"20px\",\n          width: \"150px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 746\n        },\n        __self: this\n      }, \"Redeem\"))))))))));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 761\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 762\n      },\n      __self: this\n    }, React.createElement(Message, {\n      negative: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 763\n      },\n      __self: this\n    }, React.createElement(Message.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 764\n      },\n      __self: this\n    }, \"The project is in the alpha stage, proceed at your own risk.\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 767\n      },\n      __self: this\n    }), React.createElement(Image, {\n      src: velvet,\n      size: \"medium\",\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 769\n      },\n      __self: this\n    }), button, buttonSwitch, React.createElement(Button, {\n      onClick: this.approveDeFiTokens,\n      color: \"green\",\n      style: {\n        margin: \"20px\",\n        width: \"150px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 774\n      },\n      __self: this\n    }, \"approve\"), mainnet, testnet);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/navinalang/prototypev1.1/src/App.js"],"names":["React","Component","IndexSwap","IndexToken","NFTSwap","IndexSwap2","IndexToken2","NFTSwap2","IERC","pancakeSwapRouter","detectEthereumProvider","Web3","Grid","Button","Card","Form","Input","Image","Message","Table","velvet","swal","ReactGA","axios","require","networks","bscTestnet","chainId","Number","toString","chainName","nativeCurrency","name","symbol","decimals","rpcUrls","blockExplorerUrls","bsc","App","constructor","props","handleNetworkSwitch","networkName","changeNetwork","handleInputChange","event","target","value","type","checked","setState","connectWallet","window","ethereum","web3","enable","console","log","connected","alert","loadBlockchainData","location","reload","investNFTMainnet","v","state","nftToMintMainnet","valueInWei","utils","toWei","NFTPortfolioContract","methods","resp","investInFundNFT","send","from","account","once","receipt","catch","err","status","investDeFiMainnet","defiToMintMainnet","SwapContract","investInFundDefi","approveNFTTokensMainnet","contractAddress","aXSTokenConntract","eth","Contract","abi","approve","rACATokenConntract","mBOXTokenConntract","mCTokenConntract","aLICETokenConntract","approveDeFiTokensMainnet","BTCTokenConntract","ETHTokenConntract","SHIBATokenConntract","XRPTokenConntract","LTCTokenConntract","DAITokenConntract","MAKERTokenConntract","LINKTokenConntract","UNITokenConntract","AAVETokenConntract","withdrawDeFiMainnet","vault","withdrawAmt","withdrawValueDefi","withdrawAmountInWei","DeFiTokenContract","amount","sAmount","withdrawFromFundTOPTokens","withdrawNFTMainnet","withdrawValueNFT","NFTTokenContract","withdrawFromFundNFT","getExchangeRateMainnet","amountIn","address","pancakeRouter","path","er","getAmountsOut","call","investNFT","nftToMint","NFTPortfolioContract2","investDeFi","defiToMint","SwapContract2","investInFund","approveNFTTokens","mANATokenConntract","sANDTokenConntract","tHETATokenConntract","fLOWTokenConntract","xTZTokenConntract","gALATokenConntract","cHZTokenConntract","eNJTokenConntract","rOSETokenConntract","approveDeFiTokens","LUNATokenConntract","STETHTokenConntract","withdrawDeFi","withdrawFromFundNew","withdrawNFT","nftBalance","NFTTokenContract2","balanceOf","percentage","percentageFinal","Math","round","getExchangeRate","DeFiTokenContract2","nftTokenBalance","defiTokenBalance","rate","componentDidMount","loadWeb3","chainIdDec","getChainId","provider","accounts","getAccounts","Error","request","method","params","render","addEventListener","on","networkId","warn","providers","HttpProvider","button","position","top","right","metamask","color","testnet","margin","width","background","padding","buttonSwitch","mainnet"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\n// Mainnet\nimport IndexSwap from \"./abis/IndexSwap.json\";\nimport IndexToken from \"./abis/indexToken.json\";\nimport NFTSwap from \"./abis/NFTPortfolio.json\";\n\n// Testnet\nimport IndexSwap2 from \"./abis2/IndexSwap.json\";\nimport IndexToken2 from \"./abis2/indexToken.json\";\nimport NFTSwap2 from \"./abis2/NFTPortfolio.json\";\n\nimport IERC from \"./abis/IERC20.json\";\nimport pancakeSwapRouter from \"./abis/IPancakeRouter02.json\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport Web3 from 'web3';\nimport { Grid, Button, Card, Form, Input, Image, Message, Table } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport velvet from \"./velvet.png\";\nimport metamask from \"./metamask-fox.svg\";\nimport swal from 'sweetalert';\nimport ReactGA from 'react-ga';\n\nimport \"./App.css\";\n\nconst axios = require('axios');\n\nconst networks = {\n  bscTestnet: {\n    chainId: `0x${Number(97).toString(16)}`,\n    chainName: \"BSC Testnet\",\n    nativeCurrency: {\n      name: \"Binance Chain Native Token\",\n      symbol: \"BNB\",\n      decimals: 18\n    },\n    rpcUrls: [\n      \"https://data-seed-prebsc-1-s1.binance.org:8545/\",\n      \"https://data-seed-prebsc-2-s1.binance.org:8545/\",\n      \"https://data-seed-prebsc-1-s2.binance.org:8545/\",\n      \"https://data-seed-prebsc-2-s2.binance.org:8545/\",\n      \"https://data-seed-prebsc-1-s3.binance.org:8545/\",\n      \"https://data-seed-prebsc-2-s3.binance.org:8545/\"\n    ],\n    blockExplorerUrls: [\"https://polygonscan.com/\"]\n  },\n  bsc: {\n    chainId: `0x${Number(56).toString(16)}`,\n    chainName: \"Binance Smart Chain Mainnet\",\n    nativeCurrency: {\n      name: \"Binance Chain Native Token\",\n      symbol: \"BNB\",\n      decimals: 18\n    },\n    rpcUrls: [\n      \"https://bsc-dataseed1.binance.org\",\n      \"https://bsc-dataseed2.binance.org\",\n      \"https://bsc-dataseed3.binance.org\",\n      \"https://bsc-dataseed4.binance.org\",\n      \"https://bsc-dataseed1.defibit.io\",\n      \"https://bsc-dataseed2.defibit.io\",\n      \"https://bsc-dataseed3.defibit.io\",\n      \"https://bsc-dataseed4.defibit.io\",\n      \"https://bsc-dataseed1.ninicoin.io\",\n      \"https://bsc-dataseed2.ninicoin.io\",\n      \"https://bsc-dataseed3.ninicoin.io\",\n      \"https://bsc-dataseed4.ninicoin.io\",\n      \"wss://bsc-ws-node.nariox.org\"\n    ],\n    blockExplorerUrls: [\"https://testnet.bscscan.com/\"]\n  }\n};\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      \n      account: '',\n      SwapContract: null,\n      NFTTokenContract: null,\n      DeFiTokenContract: null,\n      NFTPortfolioContract: null,\n\n      SwapContract2: null,\n      NFTTokenContract2: null,\n      DeFiTokenContract2: null,\n      NFTPortfolioContract2: null,\n\n      address: \"\",\n      connected: false,\n      \n      chainId: \"\",\n\n      defiToMintMainnet: 0,\n      nftToMintMainnet: 0,\n\n      withdrawValueDefi: 0,\n      withdrawValueNFT: 0,\n\n      nftTokenBalance: 0,\n      defiTokenBalance: 0,\n\n      rate: 0\n    }\n  }\n\n  async componentDidMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n    //await this.getRate();\n    //swal(\"The project is in the alpha stage, proceed at your own risk\");\n\n    const web3 = window.web3;\n    const chainIdDec = await web3.eth.getChainId();\n\n    this.setState({chainId: chainIdDec})\n\n    this.setState({chainId: chainIdDec});\n  }\n\n  // first up is to detect ethereum provider\n  async loadWeb3() {\n    const provider = await detectEthereumProvider();\n\n    // modern browsers\n    if (provider) {\n      console.log('MetaMask is connected');\n\n      window.web3 = new Web3(provider);\n    } else {\n      console.log('No ethereum wallet detected');\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const chainIdDec = await web3.eth.getChainId();\n    const accounts = await window.web3.eth.getAccounts();\n    this.setState({account: accounts[0]});\n    if(accounts[0]) {\n      this.setState({ connected: true })\n    }\n    if(chainIdDec == \"56\") {\n      this.setState({ account: accounts[0]}) \n      const SwapContract = new web3.eth.Contract(IndexSwap.abi, \"0x380d2b6742AAD7ae97f199a109c1F81A34E1cb86\");\n      const NFTPortfolioContract = new web3.eth.Contract(NFTSwap.abi, \"0x40A367c5320440a1aa78aCBC5af0A017Ed1F3772\"); \n      const NFTTokenContract = new web3.eth.Contract(IndexToken.abi, \"0x16dBB234A9a595967DdC2ea1bb53379752f09Ad4\"); \n      const DeFiTokenContract = new web3.eth.Contract(IndexToken.abi, \"0x6E49456f284e3da7f1515eEE120E2706cab69fD5\");\n      this.setState({ SwapContract, DeFiTokenContract, NFTPortfolioContract, NFTTokenContract});\n    } else if (chainIdDec == \"97\") {\n      const SwapContract2 = new web3.eth.Contract(IndexSwap2.abi, \"0x5D56cFe7DA8434e3c1AE2f0419513e29A6649dC8\");\n      const NFTPortfolioContract2 = new web3.eth.Contract(NFTSwap2.abi, \"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\");\n      const NFTTokenContract2 = new web3.eth.Contract(IndexToken2.abi, \"0x817ea2A5Fd281d15CA70B05abB5E094356C42996\");\n      const DeFiTokenContract2 = new web3.eth.Contract(IndexToken2.abi, \"0xF70538622598232a95B1EC1914Fc878d28EBAE68\");\n      this.setState({ SwapContract2, DeFiTokenContract2, NFTPortfolioContract2, NFTTokenContract2});\n    }\n  }\n\n    async changeNetwork (networkName) {\n      try {\n        if (!window.ethereum) throw new Error(\"No crypto wallet found\");\n        await window.ethereum.request({\n          method: \"wallet_addEthereumChain\",\n          params: [\n            {\n              ...networks[networkName]\n            }\n          ]\n        });\n      } catch (err) {\n        console.log(err);\n      }\n      window.location.reload();\n      const web3 = window.web3;\n      const chainIdDec = await web3.eth.getChainId();\n      this.setState({chainId: chainIdDec});\n      await this.loadBlockchainData();\n      \n    };\n\n    handleNetworkSwitch = async (networkName) => {\n      await this.changeNetwork(networkName);\n    };\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    })\n  }\n\n  connectWallet = async () => {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n      console.log(\"Connected\");\n      this.setState({\n        connected: true\n      })\n\n    } else {\n      alert(\"Metamask not found\");\n    }\n\n    this.loadBlockchainData();\n    window.location.reload();\n  }\n\n  \n\n  investNFTMainnet = async () => {\n    const web3 = new Web3(window.ethereum);\n    const v = this.state.nftToMintMainnet;\n    const valueInWei = web3.utils.toWei(v, 'ether');\n    console.log(this.state.NFTPortfolioContract.methods);\n    \n    const resp = await this.state.NFTPortfolioContract.methods.investInFundNFT().send({ from: this.state.account, value: valueInWei\n    }).once(\"receipt\", (receipt) => {\n      console.log(receipt);\n    })\n      .catch((err) => {\n        console.log(err);\n      });\n    if (resp.status) {\n      swal(\"Investment successfull!\", `You invested ${v} BNB into the portfolio.`, \"success\");\n    } else {\n      swal(\"Investment failed!\");\n    }\n  }\n\n  investDeFiMainnet = async () => {\n    const web3 = new Web3(window.ethereum);    \n    const v = this.state.defiToMintMainnet;\n    const valueInWei = web3.utils.toWei(v, 'ether');\n    \n    const resp = await this.state.SwapContract.methods.investInFundDefi().send({ from: this.state.account, value: valueInWei })\n    .once(\"receipt\", (receipt) => {\n      console.log(receipt);\n\n    })\n      .catch((err) => {\n        console.log(err);\n      });\n\n      if (resp.status) {\n        swal(\"Investment successfull!\", `You invested ${v} BNB into the portfolio.`, \"success\");\n        //window.location.reload();\n      } else {\n        swal(\"Investment failed!\");\n      }\n  }\n\n  approveNFTTokensMainnet = async() => {\n    const web3 = new Web3(window.ethereum);\n    \n    const contractAddress = \"0x40A367c5320440a1aa78aCBC5af0A017Ed1F3772\"; \n\n    const aXSTokenConntract = new web3.eth.Contract(IERC.abi, \"0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0\");\n    await aXSTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\" });\n\n    const rACATokenConntract = new web3.eth.Contract(IERC.abi, \"0x12BB890508c125661E03b09EC06E404bc9289040\");\n    await rACATokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\" });\n\n    const mBOXTokenConntract = new web3.eth.Contract(IERC.abi, \"0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377\");\n    await mBOXTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\" });\n\n    const mCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x949D48EcA67b17269629c7194F4b727d4Ef9E5d6\");\n    await mCTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\" });\n\n    const aLICETokenConntract = new web3.eth.Contract(IERC.abi, \"0xAC51066d7bEC65Dc4589368da368b212745d63E8\");\n    await aLICETokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\" });\n  }\n\n  approveDeFiTokensMainnet = async() => {\n    const web3 = new Web3(window.ethereum);\n    \n    const contractAddress = \"0x380d2b6742AAD7ae97f199a109c1F81A34E1cb86\"; \n\n    const BTCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c\");\n    BTCTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\" });\n\n    const ETHTokenConntract = new web3.eth.Contract(IERC.abi, \"0x2170Ed0880ac9A755fd29B2688956BD959F933F8\"); \n    ETHTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\" });\n\n    const SHIBATokenConntract = new web3.eth.Contract(IERC.abi, \"0x2859e4544C4bB03966803b044A93563Bd2D0DD4D\");\n    SHIBATokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\" });\n\n    const XRPTokenConntract = new web3.eth.Contract(IERC.abi, \"0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE\");\n    XRPTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\" });\n\n    const LTCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x4338665CBB7B2485A8855A139b75D5e34AB0DB94\");\n    LTCTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\" });\n\n    const DAITokenConntract = new web3.eth.Contract(IERC.abi, \"0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3\");\n    DAITokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\" });\n\n    const MAKERTokenConntract = new web3.eth.Contract(IERC.abi, \"0x5f0Da599BB2ccCfcf6Fdfd7D81743B6020864350\");\n    MAKERTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\" });\n\n    const LINKTokenConntract = new web3.eth.Contract(IERC.abi, \"0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD\");\n    LINKTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\" });\n\n    const UNITokenConntract = new web3.eth.Contract(IERC.abi, \"0xBf5140A22578168FD562DCcF235E5D43A02ce9B1\");\n    UNITokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\" });\n\n    const AAVETokenConntract = new web3.eth.Contract(IERC.abi, \"0xfb6115445Bff7b52FeB98650C87f44907E58f802\");\n    AAVETokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\" });\n  }\n\n  withdrawDeFiMainnet = async () => {\n    const vault = \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\";\n\n    const web3 = new Web3(window.ethereum);\n\n    var withdrawAmt = this.state.withdrawValueDefi;\n    var withdrawAmountInWei = web3.utils.toWei(withdrawAmt, 'ether');\n\n    await this.state.DeFiTokenContract.methods.approve(\"0x380d2b6742AAD7ae97f199a109c1F81A34E1cb86\", \"7787357773333787487837458347754874574837458374\")\n    .send({from: this.state.account});\n\n\n    var amount = withdrawAmountInWei;\n    var sAmount = amount.toString();\n\n    await this.state.SwapContract.methods.withdrawFromFundTOPTokens(sAmount\n    ).send({\n      from: this.state.account, value: 0\n    }).once(\"receipt\", (receipt) => {\n      swal(\"Withdrawal successfull!\", \"The withdrawal was successful!\", \"success\");\n      console.log(receipt);\n    })\n      .catch((err) => {\n        console.log(err);\n      });\n\n  }\n\n  withdrawNFTMainnet = async () => {\n      const vault = \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\";\n  \n      const web3 = new Web3(window.ethereum);\n  \n      console.log(this.state.DeFiTokenContract);\n  \n      var withdrawAmt = this.state.withdrawValueNFT;\n      var withdrawAmountInWei = web3.utils.toWei(withdrawAmt, 'ether');\n  \n  \n      await this.state.NFTTokenContract.methods.approve(\"0x40A367c5320440a1aa78aCBC5af0A017Ed1F3772\", \"7787357773333787487837458347754874574837458374\")\n      .send({from: this.state.account});\n  \n      var amount = withdrawAmountInWei;\n      var sAmount = amount.toString();\n  \n      await this.state.NFTPortfolioContract.methods.withdrawFromFundNFT(sAmount\n      ).send({\n        from: this.state.account, value: 0\n      }).once(\"receipt\", (receipt) => {\n        swal(\"Withdrawal successfull!\", \"The withdrawal was successful!\", \"success\");\n        console.log(receipt);\n      })\n        .catch((err) => {\n          console.log(err);\n        });\n  }\n\n  getExchangeRateMainnet = async (amountIn, address) => {\n    const web3 = window.web3;\n    const pancakeRouter = new web3.eth.Contract(pancakeSwapRouter.abi, \"0x10ED43C718714eb63d5aA57B78B54704E256024E\");\n\n    var path = [];\n    path[0] = address;\n    path[1] = \"0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56\";\n\n    const er = await pancakeRouter.methods.getAmountsOut(amountIn, path).call();\n    return er[1];\n  }\n\n  /*getRate = async () => {\n    const rateObj = await this.state.SwapContract.methods.currentRate().call();\n    const rate = rateObj.numerator / rateObj.denominator;\n    this.setState({ rate });\n  }*/\n\n\n  // TESTNET\n\n  investNFT = async () => {\n    const web3 = new Web3(window.ethereum);\n    const v = this.state.nftToMint;\n    const valueInWei = web3.utils.toWei(v, 'ether');\n    \n    const resp = await this.state.NFTPortfolioContract2.methods.investInFundDefi().send({ from: this.state.account, value: valueInWei\n    }).once(\"receipt\", (receipt) => {\n      console.log(receipt);\n    })\n      .catch((err) => {\n        console.log(err);\n      });\n    if (resp.status) {\n      swal(\"Investment successfull!\", `You invested ${v} BNB into the portfolio.`, \"success\");\n    } else {\n      swal(\"Investment failed!\");\n    }\n\n  }\n\n  investDeFi = async () => {\n    const web3 = new Web3(window.ethereum);    \n    const v = this.state.defiToMint;\n    const valueInWei = web3.utils.toWei(v, 'ether');\n    \n    const resp = await this.state.SwapContract2.methods.investInFund(valueInWei).send({ from: this.state.account, value: valueInWei })\n    .once(\"receipt\", (receipt) => {\n      console.log(receipt);\n\n    })\n      .catch((err) => {\n        console.log(err);\n      });\n\n      if (resp.status) {\n        swal(\"Investment successfull!\", `You invested ${v} BNB into the portfolio.`, \"success\");\n        //window.location.reload();\n      } else {\n        swal(\"Investment failed!\");\n      }\n\n  }\n\n  approveNFTTokens = async() => {\n    const web3 = new Web3(window.ethereum);  \n\n    const aXSTokenConntract = new web3.eth.Contract(IERC.abi, \"0xf34D883EcdE3238B153f38230987a0F4c221a48F\");\n    await aXSTokenConntract.methods.approve(\"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\" });\n\n    const mANATokenConntract = new web3.eth.Contract(IERC.abi, \"0x8bf2dF0Ff8528088475183a68678bd1Cd7691b69\");\n    await mANATokenConntract.methods.approve(\"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\" });\n\n    const sANDTokenConntract = new web3.eth.Contract(IERC.abi, \"0x1631A54AC95Ecb0085dB6b8ACf80c4Cee72AEB06\");\n    await sANDTokenConntract.methods.approve(\"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\" });\n\n    const tHETATokenConntract = new web3.eth.Contract(IERC.abi, \"0x19A5E53eC7B385dbE2E587Ba989eA2AB8F7EaF1e\");\n    await tHETATokenConntract.methods.approve(\"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\" });\n\n    const fLOWTokenConntract = new web3.eth.Contract(IERC.abi, \"0xe5c48084E1974a971Bd5dF4d9B01daCCA86d5567\");\n    await fLOWTokenConntract.methods.approve(\"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\" });\n\n    const xTZTokenConntract = new web3.eth.Contract(IERC.abi, \"0xC5De9d5B0BA5b408a3e9530A1BC310d8F2dCC26a\");\n    await xTZTokenConntract.methods.approve(\"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\" });\n\n    const gALATokenConntract = new web3.eth.Contract(IERC.abi, \"0x4bf1CE8E4c4c86126E57Fa9fc3f1a9631661641c\");\n    await gALATokenConntract.methods.approve(\"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\" });\n\n    const cHZTokenConntract = new web3.eth.Contract(IERC.abi, \"0xdeEC6f0C22970b9b8a47069bE619bfAe646dEe26\");\n    await cHZTokenConntract.methods.approve(\"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\" });\n\n    const eNJTokenConntract = new web3.eth.Contract(IERC.abi, \"0xb08A1959f57b9cC8e5A5F1d329EfD90EE3438F65\");\n    await eNJTokenConntract.methods.approve(\"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\" });\n\n    const rOSETokenConntract = new web3.eth.Contract(IERC.abi, \"0x30c1AC77F4068A063648B549ffF96Ddb9d151325\");\n    await rOSETokenConntract.methods.approve(\"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\" });\n  }\n\n  approveDeFiTokens = async() => {\n    const web3 = new Web3(window.ethereum);  \n    const contractAddress = \"0x5D56cFe7DA8434e3c1AE2f0419513e29A6649dC8\";\n    const vault = \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\";\n\n    const BTCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x4b1851167f74FF108A994872A160f1D6772d474b\");\n    BTCTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: vault });\n\n    const ETHTokenConntract = new web3.eth.Contract(IERC.abi, \"0x8BaBbB98678facC7342735486C851ABD7A0d17Ca\");\n    ETHTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: vault });\n\n    const SHIBATokenConntract = new web3.eth.Contract(IERC.abi, \"0xBf0646Fa5ABbFf6Af50a9C40D5E621835219d384\");\n    SHIBATokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: vault });\n\n    const XRPTokenConntract = new web3.eth.Contract(IERC.abi, \"0xCc00177908830cE1644AEB4aD507Fda3789128Af\");\n    XRPTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: vault });\n\n    const LTCTokenConntract = new web3.eth.Contract(IERC.abi, \"0x2F9fd65E3BB89b68a8e2Abd68Db25F5C348F68Ee\");\n    LTCTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: vault });\n\n    const DAITokenConntract = new web3.eth.Contract(IERC.abi, \"0x8a9424745056Eb399FD19a0EC26A14316684e274\");\n    DAITokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: vault });\n\n    const LUNATokenConntract = new web3.eth.Contract(IERC.abi, \"0x0bBF12a9Ccd7cD0E23dA21eFd3bb16ba807ab069\");\n    LUNATokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: vault });\n\n    const LINKTokenConntract = new web3.eth.Contract(IERC.abi, \"0x8D908A42FD847c80Eeb4498dE43469882436c8FF\");\n    LINKTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: vault });\n\n    const UNITokenConntract = new web3.eth.Contract(IERC.abi, \"0x62955C6cA8Cd74F8773927B880966B7e70aD4567\");\n    UNITokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: vault });\n\n    const STETHTokenConntract = new web3.eth.Contract(IERC.abi, \"0xb7a58582Df45DBa8Ad346c6A51fdb796D64e0898\");\n    STETHTokenConntract.methods.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: vault });\n  }\n\n  withdrawDeFi = async () => {\n    var vault = \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\";\n\n    const web3 = new Web3(window.ethereum);\n\n    var withdrawAmt = this.state.withdrawValueDefi;\n    var withdrawAmountInWei = web3.utils.toWei(withdrawAmt, 'ether');\n    var sAmount = withdrawAmountInWei.toString();\n\n    await this.state.SwapContract2.methods.approve(\"0x5D56cFe7DA8434e3c1AE2f0419513e29A6649dC8\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\")\n    .send({from: this.state.account});\n\n    await this.state.SwapContract2.methods.withdrawFromFundNew(sAmount\n    ).send({\n      from: this.state.account, value: 0\n    }).once(\"receipt\", (receipt) => {\n      swal(\"Withdrawal successfull!\", \"The withdrawal was successful!\", \"success\");\n      console.log(receipt);\n    })\n      .catch((err) => {\n        console.log(err);\n      });\n\n  }\n\n  withdrawNFT = async () => {\n    var vault = \"0x67C9E63b7288b7bf88Ce114C474CE2fB50ebC8F0\";\n\n    const web3 = new Web3(window.ethereum);\n\n    var withdrawAmt = this.state.withdrawValueNFT;\n    var withdrawAmountInWei = web3.utils.toWei(withdrawAmt, 'ether');\n\n    const nftBalance = await this.state.NFTTokenContract2.methods.balanceOf(this.state.account).call();\n    if(nftBalance == 0) {\n      swal(\"Withdrawal amount exceeds balance!\");\n      return;\n    }\n\n    var percentage = (withdrawAmountInWei * 100) / nftBalance ;\n    var percentageFinal = Math.round(percentage);\n    console.log(Math.round(percentage));\n  \n    await this.state.NFTTokenContract2.methods.approve(\"0x0f444D6F25d2F8Fd0639eEc68ce4AA1F03FF6F4F\", \"7787357773333787487837458347754874574837458374\")\n    .send({from: this.state.account});\n\n    var amount = withdrawAmountInWei;\n    var sAmount = amount.toString();\n\n    await this.state.NFTPortfolioContract2.methods.withdrawFromFundNFT(sAmount, percentageFinal\n    ).send({\n      from: this.state.account, value: 0\n    }).once(\"receipt\", (receipt) => {\n      swal(\"Withdrawal successfull!\", \"The withdrawal was successful!\", \"success\");\n      console.log(receipt);\n    })\n      .catch((err) => {\n        console.log(err);\n      });\n\n  }\n\n  getExchangeRate = async (amountIn, address) => {\n    const web3 = window.web3;\n    const pancakeRouter = new web3.eth.Contract(pancakeSwapRouter.abi, \"0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3\");\n\n    var path = [];\n    path[0] = address;\n    path[1] = \"0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd\";\n\n    const er = await pancakeRouter.methods.getAmountsOut(amountIn, path).call();\n    return er[1];\n  }\n\n  render() {\n\n    window.addEventListener(\"load\", function() {\n      if (window.ethereum) {\n        // use MetaMask's provider\n        App.web3 = new Web3(window.ethereum);\n        window.ethereum.enable(); // get permission to access accounts\n    \n        // detect Metamask account change\n        window.ethereum.on('accountsChanged', function (accounts) {\n          console.log('accountsChanges',accounts);\n    \n        });\n    \n         // detect Network account change\n        window.ethereum.on('networkChanged', function(networkId){\n          console.log('networkChanged',networkId);\n        });\n\n      } else {\n        console.warn(\n          \"No web3 detected. Falling back to http://127.0.0.1:8545. You should remove this fallback when you deploy live\",\n        );\n        // fallback - use your fallback strategy (local node / hosted node + in-dapp id mgmt / fail)\n        App.web3 = new Web3(\n          new Web3.providers.HttpProvider(\"http://127.0.0.1:7545\"),\n        );\n      }\n    });\n\n    const web3 = window.web3;\n\n    let button;\n    if (!this.state.connected) {\n      button = <Button style={{ position: \"absolute\", top: \"60px\", right: \"20px\" }} onClick={this.connectWallet} color=\"orange\">\n          <Image style={{ \"padding-top\": \"7px\" }} floated=\"left\" size=\"mini\" src={metamask} />\n          <p>Connect to MetaMask</p>\n        </Button>\n    } else {\n      button = <p style={{ position: \"absolute\", top: \"110px\", right: \"20px\", color: \"#C0C0C0\" }}><b>Account:</b> {this.state.account}</p>\n    }\n\n    let testnet;\n    if(this.state.chainId == \"97\") {\n      testnet = <Grid divided='vertically'>\n        <Grid.Row columns={2} style={{ margin: \"20px\" }}>\n          <Grid.Column>\n\n            <Card.Group>\n              <Card style={{ width: \"900px\" }}>\n                <Card.Content style={{ background: \"#406ccd\" }}>\n                <Card.Header style={{ color: \"white\" }}>\n                  <p style={{ color: \"#C0C0C0\", \"font-weight\": \"bold\", \"text-align\": \"right\" }}>APY: XX%</p>\n                    Top 10 Tokens\n                    </Card.Header>\n                  <Card.Description>\n\n                    <p style={{ color: \"#C0C0C0\" }}>Rate: In return of investing 1 BNB you will receive 1 Top10 Token.</p>\n\n                    <Form onSubmit={this.investDeFi}>\n                      <Input style={{ width: \"300px\", padding: 3 }} required type=\"text\" placeholder=\"BNB amount to create\" name=\"defiToMint\" onChange={this.handleInputChange}></Input>\n                      <Button color=\"green\" type=\"submit\" style={{ margin: \"20px\", width: \"150px\" }}>Create</Button>\n                    </Form>\n\n                    <Form onSubmit={this.withdrawDeFi}>\n                      <Input style={{ width: \"300px\", padding: 3 }} required type=\"text\" placeholder=\"Top10 amount to redeem\" name=\"withdrawValueDefi\" onChange={this.handleInputChange}></Input>\n                      <Button color=\"green\" style={{ margin: \"20px\", width: \"150px\" }}>Redeem</Button>\n                    </Form>\n\n                  </Card.Description>\n                </Card.Content>\n              </Card>\n            </Card.Group>\n          </Grid.Column>\n\n\n          <Grid.Column>\n            <Card.Group>\n              <Card style={{ width: \"900px\" }}>\n                <Card.Content style={{ background: \"#406ccd\" }}>\n                <Card.Header style={{ color: \"white\" }}>\n                    <p style={{ color: \"#C0C0C0\", \"font-weight\": \"bold\", \"text-align\": \"right\" }}>APY: YY%</p>\n                    Top 10 Metaverse Tokens\n                    </Card.Header>\n                  <Card.Description>\n\n                    <p style={{ color: \"#C0C0C0\" }}>Rate: In return of investing 1 BNB you will receive 1 META Token.</p>\n\n                    <Form onSubmit={this.investNFT}>\n                      <Input style={{ width: \"300px\", padding: 3 }} required type=\"text\" placeholder=\"BNB amount to create\" name=\"nftToMint\" onChange={this.handleInputChange}></Input>\n                      <Button color=\"green\" type=\"submit\" style={{ margin: \"20px\", width: \"150px\" }}>Create</Button>\n                    </Form>\n\n                    <Form onSubmit={this.withdrawNFT}>\n                      <Input style={{ width: \"300px\", padding: 3 }} required type=\"text\" placeholder=\"META amount to redeem\" name=\"withdrawValueNFT\" onChange={this.handleInputChange}></Input>\n                      <Button color=\"green\" style={{ margin: \"20px\", width: \"150px\" }}>Redeem</Button>\n                    </Form>\n\n                  </Card.Description>\n                </Card.Content>\n              </Card>\n            </Card.Group>\n\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    }\n\n      let buttonSwitch;\n      if(this.state.chainId == \"56\" && this.state.connected) {\n        buttonSwitch = <Button style={{ position: \"absolute\", top: \"60px\", right: \"20px\" }} onClick={() => this.handleNetworkSwitch(\"bscTestnet\")} color=\"orange\" type=\"submit\" >Change to Testnet</Button>\n      } else if (this.state.connected) {\n        buttonSwitch = <Button style={{ position: \"absolute\", top: \"30px\", right: \"20px\" }} onClick={() => this.handleNetworkSwitch(\"bsc\")} color=\"orange\" type=\"submit\" >Change to Mainnet</Button>\n      }\n      \n      let mainnet;\n      if(this.state.chainId != \"97\") {\n        mainnet = \n        <div>\n        <Grid divided='vertically'>\n          <Grid.Row columns={2} style={{ margin: \"20px\" }}>\n            <Grid.Column>\n\n              <Card.Group>\n                <Card style={{ width: \"900px\" }}>\n                  <Card.Content style={{ background: \"#406ccd\" }}>\n                    <Card.Header style={{ color: \"white\" }}>\n                    <p style={{ color: \"#C0C0C0\", \"font-weight\": \"bold\", \"text-align\": \"right\" }}>APY: XX%</p>\n                      Top 10 Tokens\n                      </Card.Header>\n                    <Card.Description>\n                      <p style={{ color: \"#C0C0C0\" }}>Rate: In return of investing 1 BNB you will receive 1 Top10 Token.</p>\n\n                      <Form onSubmit={this.investDeFiMainnet}>\n                        <Input style={{ width: \"300px\", padding: 3 }} required type=\"text\" placeholder=\"BNB amount to create\" name=\"defiToMintMainnet\" onChange={this.handleInputChange}></Input>\n                        <Button color=\"green\" type=\"submit\" style={{ margin: \"20px\", width: \"150px\" }}>Create</Button>\n                      </Form>\n\n                      <Form onSubmit={this.withdrawDeFiMainnet}>\n                        <Input style={{ width: \"300px\", padding: 3 }} required type=\"text\" placeholder=\"TOP15 amount to redeem\" name=\"withdrawValueDefi\" onChange={this.handleInputChange}></Input>\n                        <Button color=\"green\" style={{ margin: \"20px\", width: \"150px\" }}>Redeem</Button>\n                      </Form>\n\n                    </Card.Description>\n                  </Card.Content>\n                </Card>\n              </Card.Group>\n            </Grid.Column>\n\n            <Grid.Column>\n              <Card.Group>\n                <Card style={{ width: \"900px\" }}>\n                  <Card.Content style={{ background: \"#406ccd\" }}>\n                    <Card.Header style={{ color: \"white\" }}>\n                      <p style={{ color: \"#C0C0C0\", \"font-weight\": \"bold\", \"text-align\": \"right\" }}>APY: YY%</p>\n                      Top 5 Metaverse Tokens\n                      </Card.Header>\n                    <Card.Description>\n                      <p style={{ color: \"#C0C0C0\" }}>Rate: In return of investing 1 BNB you will receive 1 META Token.</p>\n\n                      <Form onSubmit={this.investNFTMainnet}>\n                        <Input style={{ width: \"300px\", padding: 3 }} required type=\"text\" placeholder=\"BNB amount to create\" name=\"nftToMintMainnet\" onChange={this.handleInputChange}></Input>\n                        <Button color=\"green\" type=\"submit\" style={{ margin: \"20px\", width: \"150px\" }}>Create</Button>\n                      </Form>\n\n                      <Form onSubmit={this.withdrawNFTMainnet}>\n                        <Input style={{ width: \"300px\", padding: 3 }} required type=\"text\" placeholder=\"META amount to redeem\" name=\"withdrawValueNFT\" onChange={this.handleInputChange}></Input>\n                        <Button color=\"green\" style={{ margin: \"20px\", width: \"150px\" }}>Redeem</Button>\n                      </Form>\n\n                    </Card.Description>\n                  </Card.Content>\n                </Card>\n              </Card.Group>\n\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        </div>\n      }\n\n    return (\n      <div className=\"App\">\n        <div>\n        <Message negative>\n          <Message.Header>The project is in the alpha stage, proceed at your own risk.</Message.Header>\n        </Message>\n      </div>\n        <br></br>\n\n        <Image src={velvet} size=\"medium\" verticalAlign='middle'></Image>\n\n        {button}\n        {buttonSwitch}\n\n        <Button onClick={this.approveDeFiTokens} color=\"green\" style={{ margin: \"20px\", width: \"150px\" }}>approve</Button>\n        \n        {mainnet}\n        \n        {testnet}\n\n      </div >\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}